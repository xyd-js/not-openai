[{"_1":2,"_34":35},"layout:/docs",{"_3":4},"data",{"_5":6,"_24":25,"_29":30,"_31":28,"_32":33},"sidebarGroups",[7],{"_8":9,"_10":11},"group","Get Started","items",[12],{"_13":14,"_15":16,"_17":18,"_19":20,"_21":22,"_23":22},"title","Quickstart","href","/docs/quickstart","active",false,"uniqIndex",0,"icon","","sidebarTitle","breadcrumbs",[26,27],{"_13":9,"_15":22},{"_13":14,"_15":28},"docs/quickstart","navlinks",{},"slug","metadata",{"_13":14},"/docs",{"_3":36},{"_5":37,"_24":41,"_29":44,"_31":28,"_45":46,"_32":47,"_48":49},[38],{"_8":9,"_10":39},[40],{"_13":14,"_15":16,"_17":18,"_19":20,"_21":22,"_23":22},[42,43],{"_13":9,"_15":22},{"_13":14,"_15":28},{},"code","\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst toc = [];\nconst frontmatter = {\n  \"title\": \"Quickstart\"\n};\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    p: \"p\",\n    pre: \"pre\",\n    ...props.components\n  }, {Subtitle} = _components;\n  if (!Subtitle) _missingMdxReference(\"Subtitle\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"developer-quickstart\",\n      children: \"Developer quickstart\"\n    }), \"\\n\", _jsx(Subtitle, {\n      children: _jsx(_components.p, {\n        children: \"Take your first steps with the OpenAI API.\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The OpenAI API provides a simple interface to state-of-the-art AI \", _jsx(_components.a, {\n        href: \"/docs/models\",\n        children: \"models\"\n      }), \" for text generation, natural language processing, computer vision, and more. This example generates \", _jsx(_components.a, {\n        href: \"/docs/guides/text\",\n        children: \"text output\"\n      }), \" from a prompt, as you might using \", _jsx(_components.a, {\n        href: \"https://chatgpt.com\",\n        children: \"ChatGPT\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Generate text from a model\"\n    }), \"\\n\", _jsx(_components.pre, {\n      highlighted: \"{\\\"value\\\":\\\"import OpenAI from \\\\\\\"openai\\\\\\\";\\\\nconst client = new OpenAI();\\\\n\\\\nconst completion = await client.chat.completions.create({\\\\n    model: \\\\\\\"gpt-4.1\\\\\\\",\\\\n    messages: [\\\\n        {\\\\n            role: \\\\\\\"user\\\\\\\",\\\\n            content: \\\\\\\"Write a one-sentence bedtime story about a unicorn.\\\\\\\",\\\\n        },\\\\n    ],\\\\n});\\\\n\\\\nconsole.log(completion.choices[0].message.content);\\\\n\\\",\\\"lang\\\":\\\"javascript\\\",\\\"meta\\\":\\\"js\\\",\\\"code\\\":\\\"import OpenAI from \\\\\\\"openai\\\\\\\";\\\\nconst client = new OpenAI();\\\\n\\\\nconst completion = await client.chat.completions.create({\\\\n    model: \\\\\\\"gpt-4.1\\\\\\\",\\\\n    messages: [\\\\n        {\\\\n            role: \\\\\\\"user\\\\\\\",\\\\n            content: \\\\\\\"Write a one-sentence bedtime story about a unicorn.\\\\\\\",\\\\n        },\\\\n    ],\\\\n});\\\\n\\\\nconsole.log(completion.choices[0].message.content);\\\\n\\\",\\\"tokens\\\":[[\\\"import\\\",\\\"#C586C0\\\"],\\\" \\\",[\\\"OpenAI\\\",\\\"#9CDCFE\\\"],\\\" \\\",[\\\"from\\\",\\\"#C586C0\\\"],\\\" \\\",[\\\"\\\\\\\"openai\\\\\\\"\\\",\\\"#CE9178\\\"],[\\\";\\\",\\\"#D4D4D4\\\"],\\\"\\\\n\\\",[\\\"const\\\",\\\"#569CD6\\\"],\\\" \\\",[\\\"client\\\",\\\"#4FC1FF\\\"],\\\" \\\",[\\\"=\\\",\\\"#D4D4D4\\\"],\\\" \\\",[\\\"new\\\",\\\"#569CD6\\\"],\\\" \\\",[\\\"OpenAI\\\",\\\"#DCDCAA\\\"],[\\\"();\\\",\\\"#D4D4D4\\\"],\\\"\\\\n\\\\n\\\",[\\\"const\\\",\\\"#569CD6\\\"],\\\" \\\",[\\\"completion\\\",\\\"#4FC1FF\\\"],\\\" \\\",[\\\"=\\\",\\\"#D4D4D4\\\"],\\\" \\\",[\\\"await\\\",\\\"#C586C0\\\"],\\\" \\\",[\\\"client\\\",\\\"#9CDCFE\\\"],[\\\".\\\",\\\"#D4D4D4\\\"],[\\\"chat\\\",\\\"#9CDCFE\\\"],[\\\".\\\",\\\"#D4D4D4\\\"],[\\\"completions\\\",\\\"#9CDCFE\\\"],[\\\".\\\",\\\"#D4D4D4\\\"],[\\\"create\\\",\\\"#DCDCAA\\\"],[\\\"({\\\",\\\"#D4D4D4\\\"],\\\"\\\\n    \\\",[\\\"model:\\\",\\\"#9CDCFE\\\"],\\\" \\\",[\\\"\\\\\\\"gpt-4.1\\\\\\\"\\\",\\\"#CE9178\\\"],[\\\",\\\",\\\"#D4D4D4\\\"],\\\"\\\\n    \\\",[\\\"messages:\\\",\\\"#9CDCFE\\\"],\\\" \\\",[\\\"[\\\",\\\"#D4D4D4\\\"],\\\"\\\\n        \\\",[\\\"{\\\",\\\"#D4D4D4\\\"],\\\"\\\\n            \\\",[\\\"role:\\\",\\\"#9CDCFE\\\"],\\\" \\\",[\\\"\\\\\\\"user\\\\\\\"\\\",\\\"#CE9178\\\"],[\\\",\\\",\\\"#D4D4D4\\\"],\\\"\\\\n            \\\",[\\\"content:\\\",\\\"#9CDCFE\\\"],\\\" \\\",[\\\"\\\\\\\"Write a one-sentence bedtime story about a unicorn.\\\\\\\"\\\",\\\"#CE9178\\\"],[\\\",\\\",\\\"#D4D4D4\\\"],\\\"\\\\n        \\\",[\\\"},\\\",\\\"#D4D4D4\\\"],\\\"\\\\n    \\\",[\\\"],\\\",\\\"#D4D4D4\\\"],\\\"\\\\n\\\",[\\\"});\\\",\\\"#D4D4D4\\\"],\\\"\\\\n\\\\n\\\",[\\\"console\\\",\\\"#9CDCFE\\\"],[\\\".\\\",\\\"#D4D4D4\\\"],[\\\"log\\\",\\\"#DCDCAA\\\"],[\\\"(\\\",\\\"#D4D4D4\\\"],[\\\"completion\\\",\\\"#9CDCFE\\\"],[\\\".\\\",\\\"#D4D4D4\\\"],[\\\"choices\\\",\\\"#9CDCFE\\\"],[\\\"[\\\",\\\"#D4D4D4\\\"],[\\\"0\\\",\\\"#B5CEA8\\\"],[\\\"].\\\",\\\"#D4D4D4\\\"],[\\\"message\\\",\\\"#9CDCFE\\\"],[\\\".\\\",\\\"#D4D4D4\\\"],[\\\"content\\\",\\\"#9CDCFE\\\"],[\\\");\\\",\\\"#D4D4D4\\\"],\\\"\\\\n\\\"],\\\"annotations\\\":[],\\\"themeName\\\":\\\"dark-plus\\\",\\\"style\\\":{\\\"color\\\":\\\"#D4D4D4\\\",\\\"background\\\":\\\"#1E1E1E\\\",\\\"colorScheme\\\":\\\"dark\\\"}}\",\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        regions: \"[]\",\n        lineRanges: \"[]\",\n        children: \"import OpenAI from \\\"openai\\\";\\nconst client = new OpenAI();\\n\\nconst completion = await client.chat.completions.create({\\n    model: \\\"gpt-4.1\\\",\\n    messages: [\\n        {\\n            role: \\\"user\\\",\\n            content: \\\"Write a one-sentence bedtime story about a unicorn.\\\",\\n        },\\n    ],\\n});\\n\\nconsole.log(completion.choices[0].message.content);\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  toc,\n  frontmatter,\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n",{"_13":14},"rawPage","---\ntitle: Quickstart\n---\n\n# Developer quickstart\n:::subtitle\nTake your first steps with the OpenAI API.\n:::\n\nThe OpenAI API provides a simple interface to state-of-the-art AI [models](/docs/models) for text generation, natural language processing, computer vision, and more. This example generates [text output](/docs/guides/text) from a prompt, as you might using [ChatGPT](https://chatgpt.com).\n\nGenerate text from a model\n\n```js\nimport OpenAI from \"openai\";\nconst client = new OpenAI();\n\nconst completion = await client.chat.completions.create({\n    model: \"gpt-4.1\",\n    messages: [\n        {\n            role: \"user\",\n            content: \"Write a one-sentence bedtime story about a unicorn.\",\n        },\n    ],\n});\n\nconsole.log(completion.choices[0].message.content);\n```"]
