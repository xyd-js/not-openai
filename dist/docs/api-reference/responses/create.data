[{"_1":2,"_777":778},"layout:/docs/api-reference",{"_3":4},"data",{"_5":6,"_763":764,"_769":-7,"_770":768,"_771":772},"sidebarGroups",[7,24,46,76,91,314,392,506,753],{"_8":9,"_10":11},"group","API Reference","items",[12],{"_13":14,"_15":16,"_17":18,"_19":20,"_21":22,"_23":22},"title","Introduction","href","/docs/api-reference/introduction","active",false,"uniqIndex",0,"icon","","sidebarTitle",{"_8":25,"_10":26},"Responses",[27],{"_13":25,"_15":22,"_17":18,"_19":28,"_21":-7,"_10":29},5,[30,34,38,42],{"_13":31,"_15":32,"_17":18,"_19":33,"_21":22,"_23":22},"Create a model response","/docs/api-reference/responses/create",1,{"_13":35,"_15":36,"_17":18,"_19":37,"_21":22,"_23":22},"Get a model response","/docs/api-reference/responses/get",2,{"_13":39,"_15":40,"_17":18,"_19":41,"_21":22,"_23":22},"Delete a model response","/docs/api-reference/responses/delete",3,{"_13":43,"_15":44,"_17":18,"_19":45,"_21":22,"_23":22},"List input items","/docs/api-reference/responses/input-items",4,{"_8":47,"_10":48},"Chat Completions",[49],{"_13":47,"_15":22,"_17":18,"_19":50,"_21":-7,"_10":51},12,[52,56,60,64,68,72],{"_13":53,"_15":54,"_17":18,"_19":55,"_21":22,"_23":22},"Create chat completion","/docs/api-reference/chat/create",6,{"_13":57,"_15":58,"_17":18,"_19":59,"_21":22,"_23":22},"Get chat completion","/docs/api-reference/chat/get",7,{"_13":61,"_15":62,"_17":18,"_19":63,"_21":22,"_23":22},"Get chat messages","/docs/api-reference/chat/getMessages",8,{"_13":65,"_15":66,"_17":18,"_19":67,"_21":22,"_23":22},"List Chat Completions","/docs/api-reference/chat/list",9,{"_13":69,"_15":70,"_17":18,"_19":71,"_21":22,"_23":22},"Update chat completion","/docs/api-reference/chat/update",10,{"_13":73,"_15":74,"_17":18,"_19":75,"_21":22,"_23":22},"Delete chat completion","/docs/api-reference/chat/delete",11,{"_8":77,"_10":78},"Realtime",[79],{"_13":80,"_15":22,"_17":18,"_19":81,"_21":-7,"_10":82},"Session tokens",15,[83,87],{"_13":84,"_15":85,"_17":18,"_19":86,"_21":22,"_23":22},"Create session","/docs/api-reference/realtime-sessions/create",13,{"_13":88,"_15":89,"_17":18,"_19":90,"_21":22,"_23":22},"Create transcription session","/docs/api-reference/realtime-sessions/create-transcription",14,{"_8":92,"_10":93},"Platform APIs",[94,110,126,134,186,226,246,270,290,306],{"_13":95,"_15":22,"_17":18,"_19":96,"_21":-7,"_10":97},"Audio",19,[98,102,106],{"_13":99,"_15":100,"_17":18,"_19":101,"_21":22,"_23":22},"Create speech","/docs/api-reference/audio/createSpeech",16,{"_13":103,"_15":104,"_17":18,"_19":105,"_21":22,"_23":22},"Create transcription","/docs/api-reference/audio/createTranscription",17,{"_13":107,"_15":108,"_17":18,"_19":109,"_21":22,"_23":22},"Create translation","/docs/api-reference/audio/createTranslation",18,{"_13":111,"_15":22,"_17":18,"_19":112,"_21":-7,"_10":113},"Images",23,[114,118,122],{"_13":115,"_15":116,"_17":18,"_19":117,"_21":22,"_23":22},"Create image","/docs/api-reference/images/create",20,{"_13":119,"_15":120,"_17":18,"_19":121,"_21":22,"_23":22},"Create image edit","/docs/api-reference/images/createEdit",21,{"_13":123,"_15":124,"_17":18,"_19":125,"_21":22,"_23":22},"Create image variation","/docs/api-reference/images/createVariation",22,{"_13":127,"_15":22,"_17":18,"_19":128,"_21":-7,"_10":129},"Embeddings",25,[130],{"_13":131,"_15":132,"_17":18,"_19":133,"_21":22,"_23":22},"Create embeddings","/docs/api-reference/embeddings/create",24,{"_13":135,"_15":22,"_17":18,"_19":136,"_21":-7,"_10":137},"Evals",38,[138,142,146,150,154,158,162,166,170,174,178,182],{"_13":139,"_15":140,"_17":18,"_19":141,"_21":22,"_23":22},"Create eval","/docs/api-reference/evals/create",26,{"_13":143,"_15":144,"_17":18,"_19":145,"_21":22,"_23":22},"Get an eval","/docs/api-reference/evals/get",27,{"_13":147,"_15":148,"_17":18,"_19":149,"_21":22,"_23":22},"Update an eval","/docs/api-reference/evals/update",28,{"_13":151,"_15":152,"_17":18,"_19":153,"_21":22,"_23":22},"Delete an eval","/docs/api-reference/evals/delete",29,{"_13":155,"_15":156,"_17":18,"_19":157,"_21":22,"_23":22},"List evals","/docs/api-reference/evals/list",30,{"_13":159,"_15":160,"_17":18,"_19":161,"_21":22,"_23":22},"Get eval runs","/docs/api-reference/evals/getRuns",31,{"_13":163,"_15":164,"_17":18,"_19":165,"_21":22,"_23":22},"Get an eval run","/docs/api-reference/evals/getRun",32,{"_13":167,"_15":168,"_17":18,"_19":169,"_21":22,"_23":22},"Create eval run","/docs/api-reference/evals/createRun",33,{"_13":171,"_15":172,"_17":18,"_19":173,"_21":22,"_23":22},"Cancel eval run","/docs/api-reference/evals/cancelRun",34,{"_13":175,"_15":176,"_17":18,"_19":177,"_21":22,"_23":22},"Delete eval run","/docs/api-reference/evals/deleteRun",35,{"_13":179,"_15":180,"_17":18,"_19":181,"_21":22,"_23":22},"Get an output item of an eval run","/docs/api-reference/evals/getRunOutputItem",36,{"_13":183,"_15":184,"_17":18,"_19":185,"_21":22,"_23":22},"Get eval run output items","/docs/api-reference/evals/getRunOutputItems",37,{"_13":187,"_15":22,"_17":18,"_19":188,"_21":-7,"_10":189},"Fine-tuning",48,[190,194,198,202,206,210,214,218,222],{"_13":191,"_15":192,"_17":18,"_19":193,"_21":22,"_23":22},"Create fine-tuning job","/docs/api-reference/fine-tuning/create",39,{"_13":195,"_15":196,"_17":18,"_19":197,"_21":22,"_23":22},"List fine-tuning jobs","/docs/api-reference/fine-tuning/list",40,{"_13":199,"_15":200,"_17":18,"_19":201,"_21":22,"_23":22},"List fine-tuning events","/docs/api-reference/fine-tuning/list-events",41,{"_13":203,"_15":204,"_17":18,"_19":205,"_21":22,"_23":22},"List fine-tuning checkpoints","/docs/api-reference/fine-tuning/list-checkpoints",42,{"_13":207,"_15":208,"_17":18,"_19":209,"_21":22,"_23":22},"List checkpoint permissions","/docs/api-reference/fine-tuning/list-permissions",43,{"_13":211,"_15":212,"_17":18,"_19":213,"_21":22,"_23":22},"Create checkpoint permissions","/docs/api-reference/fine-tuning/create-permission",44,{"_13":215,"_15":216,"_17":18,"_19":217,"_21":22,"_23":22},"Delete checkpoint permission","/docs/api-reference/fine-tuning/delete-permission",45,{"_13":219,"_15":220,"_17":18,"_19":221,"_21":22,"_23":22},"Retrieve fine-tuning job","/docs/api-reference/fine-tuning/retrieve",46,{"_13":223,"_15":224,"_17":18,"_19":225,"_21":22,"_23":22},"Cancel fine-tuning","/docs/api-reference/fine-tuning/cancel",47,{"_13":227,"_15":22,"_17":18,"_19":228,"_21":-7,"_10":229},"Batch",53,[230,234,238,242],{"_13":231,"_15":232,"_17":18,"_19":233,"_21":22,"_23":22},"Create batch","/docs/api-reference/batch/create",49,{"_13":235,"_15":236,"_17":18,"_19":237,"_21":22,"_23":22},"Retrieve batch","/docs/api-reference/batch/retrieve",50,{"_13":239,"_15":240,"_17":18,"_19":241,"_21":22,"_23":22},"Cancel batch","/docs/api-reference/batch/cancel",51,{"_13":243,"_15":244,"_17":18,"_19":245,"_21":22,"_23":22},"List batch","/docs/api-reference/batch/list",52,{"_13":247,"_15":22,"_17":18,"_19":248,"_21":-7,"_10":249},"Files",59,[250,254,258,262,266],{"_13":251,"_15":252,"_17":18,"_19":253,"_21":22,"_23":22},"Upload file","/docs/api-reference/files/create",54,{"_13":255,"_15":256,"_17":18,"_19":257,"_21":22,"_23":22},"List files","/docs/api-reference/files/list",55,{"_13":259,"_15":260,"_17":18,"_19":261,"_21":22,"_23":22},"Retrieve file","/docs/api-reference/files/retrieve",56,{"_13":263,"_15":264,"_17":18,"_19":265,"_21":22,"_23":22},"Delete file","/docs/api-reference/files/delete",57,{"_13":267,"_15":268,"_17":18,"_19":269,"_21":22,"_23":22},"Retrieve file content","/docs/api-reference/files/retrieve-contents",58,{"_13":271,"_15":22,"_17":18,"_19":272,"_21":-7,"_10":273},"Uploads",64,[274,278,282,286],{"_13":275,"_15":276,"_17":18,"_19":277,"_21":22,"_23":22},"Create upload","/docs/api-reference/uploads/create",60,{"_13":279,"_15":280,"_17":18,"_19":281,"_21":22,"_23":22},"Add upload part","/docs/api-reference/uploads/add-part",61,{"_13":283,"_15":284,"_17":18,"_19":285,"_21":22,"_23":22},"Complete upload","/docs/api-reference/uploads/complete",62,{"_13":287,"_15":288,"_17":18,"_19":289,"_21":22,"_23":22},"Cancel upload","/docs/api-reference/uploads/cancel",63,{"_13":291,"_15":22,"_17":18,"_19":292,"_21":-7,"_10":293},"Models",68,[294,298,302],{"_13":295,"_15":296,"_17":18,"_19":297,"_21":22,"_23":22},"List models","/docs/api-reference/models/list",65,{"_13":299,"_15":300,"_17":18,"_19":301,"_21":22,"_23":22},"Retrieve model","/docs/api-reference/models/retrieve",66,{"_13":303,"_15":304,"_17":18,"_19":305,"_21":22,"_23":22},"Delete a fine-tuned model","/docs/api-reference/models/delete",67,{"_13":307,"_15":22,"_17":18,"_19":308,"_21":-7,"_10":309},"Moderations",70,[310],{"_13":311,"_15":312,"_17":18,"_19":313,"_21":22,"_23":22},"Create moderation","/docs/api-reference/moderations/create",69,{"_8":315,"_10":316},"Vector stores",[317,344,372],{"_13":315,"_15":22,"_17":18,"_19":318,"_21":-7,"_10":319},77,[320,324,328,332,336,340],{"_13":321,"_15":322,"_17":18,"_19":323,"_21":22,"_23":22},"Create vector store","/docs/api-reference/vector-stores/create",71,{"_13":325,"_15":326,"_17":18,"_19":327,"_21":22,"_23":22},"List vector stores","/docs/api-reference/vector-stores/list",72,{"_13":329,"_15":330,"_17":18,"_19":331,"_21":22,"_23":22},"Retrieve vector store","/docs/api-reference/vector-stores/retrieve",73,{"_13":333,"_15":334,"_17":18,"_19":335,"_21":22,"_23":22},"Modify vector store","/docs/api-reference/vector-stores/modify",74,{"_13":337,"_15":338,"_17":18,"_19":339,"_21":22,"_23":22},"Delete vector store","/docs/api-reference/vector-stores/delete",75,{"_13":341,"_15":342,"_17":18,"_19":343,"_21":22,"_23":22},"Search vector store","/docs/api-reference/vector-stores/search",76,{"_13":345,"_15":22,"_17":18,"_19":346,"_21":-7,"_10":347},"Vector store files",84,[348,352,356,360,364,368],{"_13":349,"_15":350,"_17":18,"_19":351,"_21":22,"_23":22},"Create vector store file","/docs/api-reference/vector-stores-files/createFile",78,{"_13":353,"_15":354,"_17":18,"_19":355,"_21":22,"_23":22},"List vector store files","/docs/api-reference/vector-stores-files/listFiles",79,{"_13":357,"_15":358,"_17":18,"_19":359,"_21":22,"_23":22},"Retrieve vector store file","/docs/api-reference/vector-stores-files/getFile",80,{"_13":361,"_15":362,"_17":18,"_19":363,"_21":22,"_23":22},"Retrieve vector store file content","/docs/api-reference/vector-stores-files/getContent",81,{"_13":365,"_15":366,"_17":18,"_19":367,"_21":22,"_23":22},"Update vector store file attributes","/docs/api-reference/vector-stores-files/updateAttributes",82,{"_13":369,"_15":370,"_17":18,"_19":371,"_21":22,"_23":22},"Delete vector store file","/docs/api-reference/vector-stores-files/deleteFile",83,{"_13":373,"_15":22,"_17":18,"_19":374,"_21":-7,"_10":375},"Vector store file batches",89,[376,380,384,388],{"_13":377,"_15":378,"_17":18,"_19":379,"_21":22,"_23":22},"Create vector store file batch","/docs/api-reference/vector-stores-file-batches/createBatch",85,{"_13":381,"_15":382,"_17":18,"_19":383,"_21":22,"_23":22},"Retrieve vector store file batch","/docs/api-reference/vector-stores-file-batches/getBatch",86,{"_13":385,"_15":386,"_17":18,"_19":387,"_21":22,"_23":22},"Cancel vector store file batch","/docs/api-reference/vector-stores-file-batches/cancelBatch",87,{"_13":389,"_15":390,"_17":18,"_19":391,"_21":22,"_23":22},"List vector store files in a batch","/docs/api-reference/vector-stores-file-batches/listBatchFiles",88,{"_8":393,"_10":394},"Assistants",[395,418,438,462,494],{"_13":393,"_15":22,"_17":18,"_19":396,"_21":-7,"_10":397},95,[398,402,406,410,414],{"_13":399,"_15":400,"_17":18,"_19":401,"_21":22,"_23":22},"Create assistant","/docs/api-reference/assistants/createAssistant",90,{"_13":403,"_15":404,"_17":18,"_19":405,"_21":22,"_23":22},"List assistants","/docs/api-reference/assistants/listAssistants",91,{"_13":407,"_15":408,"_17":18,"_19":409,"_21":22,"_23":22},"Retrieve assistant","/docs/api-reference/assistants/getAssistant",92,{"_13":411,"_15":412,"_17":18,"_19":413,"_21":22,"_23":22},"Modify assistant","/docs/api-reference/assistants/modifyAssistant",93,{"_13":415,"_15":416,"_17":18,"_19":417,"_21":22,"_23":22},"Delete assistant","/docs/api-reference/assistants/deleteAssistant",94,{"_13":419,"_15":22,"_17":18,"_19":420,"_21":-7,"_10":421},"Threads",100,[422,426,430,434],{"_13":423,"_15":424,"_17":18,"_19":425,"_21":22,"_23":22},"Create thread","/docs/api-reference/threads/createThread",96,{"_13":427,"_15":428,"_17":18,"_19":429,"_21":22,"_23":22},"Retrieve thread","/docs/api-reference/threads/getThread",97,{"_13":431,"_15":432,"_17":18,"_19":433,"_21":22,"_23":22},"Modify thread","/docs/api-reference/threads/modifyThread",98,{"_13":435,"_15":436,"_17":18,"_19":437,"_21":22,"_23":22},"Delete thread","/docs/api-reference/threads/deleteThread",99,{"_13":439,"_15":22,"_17":18,"_19":440,"_21":-7,"_10":441},"Messages",106,[442,446,450,454,458],{"_13":443,"_15":444,"_17":18,"_19":445,"_21":22,"_23":22},"Create message","/docs/api-reference/messages/createMessage",101,{"_13":447,"_15":448,"_17":18,"_19":449,"_21":22,"_23":22},"List messages","/docs/api-reference/messages/listMessages",102,{"_13":451,"_15":452,"_17":18,"_19":453,"_21":22,"_23":22},"Retrieve message","/docs/api-reference/messages/getMessage",103,{"_13":455,"_15":456,"_17":18,"_19":457,"_21":22,"_23":22},"Modify message","/docs/api-reference/messages/modifyMessage",104,{"_13":459,"_15":460,"_17":18,"_19":461,"_21":22,"_23":22},"Delete message","/docs/api-reference/messages/deleteMessage",105,{"_13":463,"_15":22,"_17":18,"_19":464,"_21":-7,"_10":465},"Runs",114,[466,470,474,478,482,486,490],{"_13":467,"_15":468,"_17":18,"_19":469,"_21":22,"_23":22},"Create run","/docs/api-reference/runs/createRun",107,{"_13":471,"_15":472,"_17":18,"_19":473,"_21":22,"_23":22},"Create thread and run","/docs/api-reference/runs/createThreadAndRun",108,{"_13":475,"_15":476,"_17":18,"_19":477,"_21":22,"_23":22},"List runs","/docs/api-reference/runs/listRuns",109,{"_13":479,"_15":480,"_17":18,"_19":481,"_21":22,"_23":22},"Retrieve run","/docs/api-reference/runs/getRun",110,{"_13":483,"_15":484,"_17":18,"_19":485,"_21":22,"_23":22},"Modify run","/docs/api-reference/runs/modifyRun",111,{"_13":487,"_15":488,"_17":18,"_19":489,"_21":22,"_23":22},"Submit tool outputs to run","/docs/api-reference/runs/submitToolOutputs",112,{"_13":491,"_15":492,"_17":18,"_19":493,"_21":22,"_23":22},"Cancel a run","/docs/api-reference/runs/cancelRun",113,{"_13":495,"_15":22,"_17":18,"_19":496,"_21":-7,"_10":497},"Run steps",117,[498,502],{"_13":499,"_15":500,"_17":18,"_19":501,"_21":22,"_23":22},"List run steps","/docs/api-reference/run-steps/listRunSteps",115,{"_13":503,"_15":504,"_17":18,"_19":505,"_21":22,"_23":22},"Retrieve run step","/docs/api-reference/run-steps/getRunStep",116,{"_8":507,"_10":508},"Administration",[509,529,549,569,593,617,637,653,665,673,709],{"_13":510,"_15":22,"_17":18,"_19":511,"_21":-7,"_10":512},"Admin API Keys",122,[513,517,521,525],{"_13":514,"_15":515,"_17":18,"_19":516,"_21":22,"_23":22},"List all organization and project API keys.","/docs/api-reference/admin-api-keys/list",118,{"_13":518,"_15":519,"_17":18,"_19":520,"_21":22,"_23":22},"Create admin API key","/docs/api-reference/admin-api-keys/create",119,{"_13":522,"_15":523,"_17":18,"_19":524,"_21":22,"_23":22},"Retrieve admin API key","/docs/api-reference/admin-api-keys/listget",120,{"_13":526,"_15":527,"_17":18,"_19":528,"_21":22,"_23":22},"Delete admin API key","/docs/api-reference/admin-api-keys/delete",121,{"_13":530,"_15":22,"_17":18,"_19":531,"_21":-7,"_10":532},"Invites",127,[533,537,541,545],{"_13":534,"_15":535,"_17":18,"_19":536,"_21":22,"_23":22},"List invites","/docs/api-reference/invite/list",123,{"_13":538,"_15":539,"_17":18,"_19":540,"_21":22,"_23":22},"Create invite","/docs/api-reference/invite/create",124,{"_13":542,"_15":543,"_17":18,"_19":544,"_21":22,"_23":22},"Retrieve invite","/docs/api-reference/invite/retrieve",125,{"_13":546,"_15":547,"_17":18,"_19":548,"_21":22,"_23":22},"Delete invite","/docs/api-reference/invite/delete",126,{"_13":550,"_15":22,"_17":18,"_19":551,"_21":-7,"_10":552},"Users",132,[553,557,561,565],{"_13":554,"_15":555,"_17":18,"_19":556,"_21":22,"_23":22},"List users","/docs/api-reference/users/list",128,{"_13":558,"_15":559,"_17":18,"_19":560,"_21":22,"_23":22},"Modify user","/docs/api-reference/users/modify",129,{"_13":562,"_15":563,"_17":18,"_19":564,"_21":22,"_23":22},"Retrieve user","/docs/api-reference/users/retrieve",130,{"_13":566,"_15":567,"_17":18,"_19":568,"_21":22,"_23":22},"Delete user","/docs/api-reference/users/delete",131,{"_13":570,"_15":22,"_17":18,"_19":571,"_21":-7,"_10":572},"Projects",138,[573,577,581,585,589],{"_13":574,"_15":575,"_17":18,"_19":576,"_21":22,"_23":22},"List projects","/docs/api-reference/projects/list",133,{"_13":578,"_15":579,"_17":18,"_19":580,"_21":22,"_23":22},"Create project","/docs/api-reference/projects/create",134,{"_13":582,"_15":583,"_17":18,"_19":584,"_21":22,"_23":22},"Retrieve project","/docs/api-reference/projects/retrieve",135,{"_13":586,"_15":587,"_17":18,"_19":588,"_21":22,"_23":22},"Modify project","/docs/api-reference/projects/modify",136,{"_13":590,"_15":591,"_17":18,"_19":592,"_21":22,"_23":22},"Archive project","/docs/api-reference/projects/archive",137,{"_13":594,"_15":22,"_17":18,"_19":595,"_21":-7,"_10":596},"Project users",144,[597,601,605,609,613],{"_13":598,"_15":599,"_17":18,"_19":600,"_21":22,"_23":22},"List project users","/docs/api-reference/project-users/list",139,{"_13":602,"_15":603,"_17":18,"_19":604,"_21":22,"_23":22},"Create project user","/docs/api-reference/project-users/creeate",140,{"_13":606,"_15":607,"_17":18,"_19":608,"_21":22,"_23":22},"Retrieve project user","/docs/api-reference/project-users/retrieve",141,{"_13":610,"_15":611,"_17":18,"_19":612,"_21":22,"_23":22},"Modify project user","/docs/api-reference/project-users/modify",142,{"_13":614,"_15":615,"_17":18,"_19":616,"_21":22,"_23":22},"Delete project user","/docs/api-reference/project-users/delete",143,{"_13":618,"_15":22,"_17":18,"_19":619,"_21":-7,"_10":620},"Project service accounts",149,[621,625,629,633],{"_13":622,"_15":623,"_17":18,"_19":624,"_21":22,"_23":22},"List project service accounts","/docs/api-reference/project-service-accounts/list",145,{"_13":626,"_15":627,"_17":18,"_19":628,"_21":22,"_23":22},"Create project service account","/docs/api-reference/project-service-accounts/create",146,{"_13":630,"_15":631,"_17":18,"_19":632,"_21":22,"_23":22},"Retrieve project service account","/docs/api-reference/project-service-accounts/retrieve",147,{"_13":634,"_15":635,"_17":18,"_19":636,"_21":22,"_23":22},"Delete project service account","/docs/api-reference/project-service-accounts/delete",148,{"_13":638,"_15":22,"_17":18,"_19":639,"_21":-7,"_10":640},"Project API keys",153,[641,645,649],{"_13":642,"_15":643,"_17":18,"_19":644,"_21":22,"_23":22},"List project API keys","/docs/api-reference/project-api-keys/list",150,{"_13":646,"_15":647,"_17":18,"_19":648,"_21":22,"_23":22},"Retrieve project API key","/docs/api-reference/project-api-keys/retrieve",151,{"_13":650,"_15":651,"_17":18,"_19":652,"_21":22,"_23":22},"Delete project API key","/docs/api-reference/project-api-keys/delete",152,{"_13":654,"_15":22,"_17":18,"_19":655,"_21":-7,"_10":656},"Project rate limits",156,[657,661],{"_13":658,"_15":659,"_17":18,"_19":660,"_21":22,"_23":22},"List project rate limits","/docs/api-reference/project-rate-limits/list",154,{"_13":662,"_15":663,"_17":18,"_19":664,"_21":22,"_23":22},"Modify project rate limit","/docs/api-reference/project-rate-limits/update",155,{"_13":666,"_15":22,"_17":18,"_19":667,"_21":-7,"_10":668},"Audit logs",158,[669],{"_13":670,"_15":671,"_17":18,"_19":672,"_21":22,"_23":22},"List audit logs","/docs/api-reference/audit-logs/list",157,{"_13":674,"_15":22,"_17":18,"_19":675,"_21":-7,"_10":676},"Usage",168,[677,681,684,687,690,694,698,701,705],{"_13":678,"_15":679,"_17":18,"_19":680,"_21":22,"_23":22},"Completions","/docs/api-reference/usage/completions",159,{"_13":127,"_15":682,"_17":18,"_19":683,"_21":22,"_23":22},"/docs/api-reference/usage/embeddings",160,{"_13":307,"_15":685,"_17":18,"_19":686,"_21":22,"_23":22},"/docs/api-reference/usage/moderations",161,{"_13":111,"_15":688,"_17":18,"_19":689,"_21":22,"_23":22},"/docs/api-reference/usage/images",162,{"_13":691,"_15":692,"_17":18,"_19":693,"_21":22,"_23":22},"Audio speeches","/docs/api-reference/usage/audio_speeches",163,{"_13":695,"_15":696,"_17":18,"_19":697,"_21":22,"_23":22},"Audio transcriptions","/docs/api-reference/usage/audio_transcriptions",164,{"_13":315,"_15":699,"_17":18,"_19":700,"_21":22,"_23":22},"/docs/api-reference/usage/vector_stores",165,{"_13":702,"_15":703,"_17":18,"_19":704,"_21":22,"_23":22},"Code interpreter sessions","/docs/api-reference/usage/code_interpreter_sessions",166,{"_13":706,"_15":707,"_17":18,"_19":708,"_21":22,"_23":22},"Costs","/docs/api-reference/usage/costs",167,{"_13":710,"_15":22,"_17":18,"_19":711,"_21":-7,"_10":712},"Certificates",179,[713,717,721,725,729,733,737,741,745,749],{"_13":714,"_15":715,"_17":18,"_19":716,"_21":22,"_23":22},"Upload certificate","/docs/api-reference/certificates/uploadCertificate",169,{"_13":718,"_15":719,"_17":18,"_19":720,"_21":22,"_23":22},"Get certificate","/docs/api-reference/certificates/getCertificate",170,{"_13":722,"_15":723,"_17":18,"_19":724,"_21":22,"_23":22},"Modify certificate","/docs/api-reference/certificates/modifyCertificate",171,{"_13":726,"_15":727,"_17":18,"_19":728,"_21":22,"_23":22},"Delete certificate","/docs/api-reference/certificates/deleteCertificate",172,{"_13":730,"_15":731,"_17":18,"_19":732,"_21":22,"_23":22},"List organization certificates","/docs/api-reference/certificates/listOrganizationCertificates",173,{"_13":734,"_15":735,"_17":18,"_19":736,"_21":22,"_23":22},"List project certificates","/docs/api-reference/certificates/listProjectCertificates",174,{"_13":738,"_15":739,"_17":18,"_19":740,"_21":22,"_23":22},"Activate certificates for organization","/docs/api-reference/certificates/activateOrganizationCertificates",175,{"_13":742,"_15":743,"_17":18,"_19":744,"_21":22,"_23":22},"Deactivate certificates for organization","/docs/api-reference/certificates/deactivateOrganizationCertificates",176,{"_13":746,"_15":747,"_17":18,"_19":748,"_21":22,"_23":22},"Activate certificates for project","/docs/api-reference/certificates/activateProjectCertificates",177,{"_13":750,"_15":751,"_17":18,"_19":752,"_21":22,"_23":22},"Deactivate certificates for project","/docs/api-reference/certificates/deactivateProjectCertificates",178,{"_8":754,"_10":755},"Legacy",[756],{"_13":678,"_15":22,"_17":18,"_19":757,"_21":-7,"_10":758},181,[759],{"_13":760,"_15":761,"_17":18,"_19":762,"_21":22,"_23":22},"Create completion","/docs/api-reference/completions/create",180,"breadcrumbs",[765,766,767],{"_13":25,"_15":22},{"_13":25,"_15":22},{"_13":31,"_15":768},"docs/api-reference/responses/create","navlinks","slug","metadata",{"_13":31,"_773":774,"_775":776},"layout","wide","openapi","~/openapi.yaml#POST /responses","/docs/api-reference",{"_3":779},{"_5":780,"_763":1014,"_769":-7,"_770":768,"_1018":1019,"_771":1020,"_1021":1022},[781,784,792,802,808,875,899,934,1009],{"_8":9,"_10":782},[783],{"_13":14,"_15":16,"_17":18,"_19":20,"_21":22,"_23":22},{"_8":25,"_10":785},[786],{"_13":25,"_15":22,"_17":18,"_19":28,"_21":-7,"_10":787},[788,789,790,791],{"_13":31,"_15":32,"_17":18,"_19":33,"_21":22,"_23":22},{"_13":35,"_15":36,"_17":18,"_19":37,"_21":22,"_23":22},{"_13":39,"_15":40,"_17":18,"_19":41,"_21":22,"_23":22},{"_13":43,"_15":44,"_17":18,"_19":45,"_21":22,"_23":22},{"_8":47,"_10":793},[794],{"_13":47,"_15":22,"_17":18,"_19":50,"_21":-7,"_10":795},[796,797,798,799,800,801],{"_13":53,"_15":54,"_17":18,"_19":55,"_21":22,"_23":22},{"_13":57,"_15":58,"_17":18,"_19":59,"_21":22,"_23":22},{"_13":61,"_15":62,"_17":18,"_19":63,"_21":22,"_23":22},{"_13":65,"_15":66,"_17":18,"_19":67,"_21":22,"_23":22},{"_13":69,"_15":70,"_17":18,"_19":71,"_21":22,"_23":22},{"_13":73,"_15":74,"_17":18,"_19":75,"_21":22,"_23":22},{"_8":77,"_10":803},[804],{"_13":80,"_15":22,"_17":18,"_19":81,"_21":-7,"_10":805},[806,807],{"_13":84,"_15":85,"_17":18,"_19":86,"_21":22,"_23":22},{"_13":88,"_15":89,"_17":18,"_19":90,"_21":22,"_23":22},{"_8":92,"_10":809},[810,815,820,823,837,848,854,861,867,872],{"_13":95,"_15":22,"_17":18,"_19":96,"_21":-7,"_10":811},[812,813,814],{"_13":99,"_15":100,"_17":18,"_19":101,"_21":22,"_23":22},{"_13":103,"_15":104,"_17":18,"_19":105,"_21":22,"_23":22},{"_13":107,"_15":108,"_17":18,"_19":109,"_21":22,"_23":22},{"_13":111,"_15":22,"_17":18,"_19":112,"_21":-7,"_10":816},[817,818,819],{"_13":115,"_15":116,"_17":18,"_19":117,"_21":22,"_23":22},{"_13":119,"_15":120,"_17":18,"_19":121,"_21":22,"_23":22},{"_13":123,"_15":124,"_17":18,"_19":125,"_21":22,"_23":22},{"_13":127,"_15":22,"_17":18,"_19":128,"_21":-7,"_10":821},[822],{"_13":131,"_15":132,"_17":18,"_19":133,"_21":22,"_23":22},{"_13":135,"_15":22,"_17":18,"_19":136,"_21":-7,"_10":824},[825,826,827,828,829,830,831,832,833,834,835,836],{"_13":139,"_15":140,"_17":18,"_19":141,"_21":22,"_23":22},{"_13":143,"_15":144,"_17":18,"_19":145,"_21":22,"_23":22},{"_13":147,"_15":148,"_17":18,"_19":149,"_21":22,"_23":22},{"_13":151,"_15":152,"_17":18,"_19":153,"_21":22,"_23":22},{"_13":155,"_15":156,"_17":18,"_19":157,"_21":22,"_23":22},{"_13":159,"_15":160,"_17":18,"_19":161,"_21":22,"_23":22},{"_13":163,"_15":164,"_17":18,"_19":165,"_21":22,"_23":22},{"_13":167,"_15":168,"_17":18,"_19":169,"_21":22,"_23":22},{"_13":171,"_15":172,"_17":18,"_19":173,"_21":22,"_23":22},{"_13":175,"_15":176,"_17":18,"_19":177,"_21":22,"_23":22},{"_13":179,"_15":180,"_17":18,"_19":181,"_21":22,"_23":22},{"_13":183,"_15":184,"_17":18,"_19":185,"_21":22,"_23":22},{"_13":187,"_15":22,"_17":18,"_19":188,"_21":-7,"_10":838},[839,840,841,842,843,844,845,846,847],{"_13":191,"_15":192,"_17":18,"_19":193,"_21":22,"_23":22},{"_13":195,"_15":196,"_17":18,"_19":197,"_21":22,"_23":22},{"_13":199,"_15":200,"_17":18,"_19":201,"_21":22,"_23":22},{"_13":203,"_15":204,"_17":18,"_19":205,"_21":22,"_23":22},{"_13":207,"_15":208,"_17":18,"_19":209,"_21":22,"_23":22},{"_13":211,"_15":212,"_17":18,"_19":213,"_21":22,"_23":22},{"_13":215,"_15":216,"_17":18,"_19":217,"_21":22,"_23":22},{"_13":219,"_15":220,"_17":18,"_19":221,"_21":22,"_23":22},{"_13":223,"_15":224,"_17":18,"_19":225,"_21":22,"_23":22},{"_13":227,"_15":22,"_17":18,"_19":228,"_21":-7,"_10":849},[850,851,852,853],{"_13":231,"_15":232,"_17":18,"_19":233,"_21":22,"_23":22},{"_13":235,"_15":236,"_17":18,"_19":237,"_21":22,"_23":22},{"_13":239,"_15":240,"_17":18,"_19":241,"_21":22,"_23":22},{"_13":243,"_15":244,"_17":18,"_19":245,"_21":22,"_23":22},{"_13":247,"_15":22,"_17":18,"_19":248,"_21":-7,"_10":855},[856,857,858,859,860],{"_13":251,"_15":252,"_17":18,"_19":253,"_21":22,"_23":22},{"_13":255,"_15":256,"_17":18,"_19":257,"_21":22,"_23":22},{"_13":259,"_15":260,"_17":18,"_19":261,"_21":22,"_23":22},{"_13":263,"_15":264,"_17":18,"_19":265,"_21":22,"_23":22},{"_13":267,"_15":268,"_17":18,"_19":269,"_21":22,"_23":22},{"_13":271,"_15":22,"_17":18,"_19":272,"_21":-7,"_10":862},[863,864,865,866],{"_13":275,"_15":276,"_17":18,"_19":277,"_21":22,"_23":22},{"_13":279,"_15":280,"_17":18,"_19":281,"_21":22,"_23":22},{"_13":283,"_15":284,"_17":18,"_19":285,"_21":22,"_23":22},{"_13":287,"_15":288,"_17":18,"_19":289,"_21":22,"_23":22},{"_13":291,"_15":22,"_17":18,"_19":292,"_21":-7,"_10":868},[869,870,871],{"_13":295,"_15":296,"_17":18,"_19":297,"_21":22,"_23":22},{"_13":299,"_15":300,"_17":18,"_19":301,"_21":22,"_23":22},{"_13":303,"_15":304,"_17":18,"_19":305,"_21":22,"_23":22},{"_13":307,"_15":22,"_17":18,"_19":308,"_21":-7,"_10":873},[874],{"_13":311,"_15":312,"_17":18,"_19":313,"_21":22,"_23":22},{"_8":315,"_10":876},[877,885,893],{"_13":315,"_15":22,"_17":18,"_19":318,"_21":-7,"_10":878},[879,880,881,882,883,884],{"_13":321,"_15":322,"_17":18,"_19":323,"_21":22,"_23":22},{"_13":325,"_15":326,"_17":18,"_19":327,"_21":22,"_23":22},{"_13":329,"_15":330,"_17":18,"_19":331,"_21":22,"_23":22},{"_13":333,"_15":334,"_17":18,"_19":335,"_21":22,"_23":22},{"_13":337,"_15":338,"_17":18,"_19":339,"_21":22,"_23":22},{"_13":341,"_15":342,"_17":18,"_19":343,"_21":22,"_23":22},{"_13":345,"_15":22,"_17":18,"_19":346,"_21":-7,"_10":886},[887,888,889,890,891,892],{"_13":349,"_15":350,"_17":18,"_19":351,"_21":22,"_23":22},{"_13":353,"_15":354,"_17":18,"_19":355,"_21":22,"_23":22},{"_13":357,"_15":358,"_17":18,"_19":359,"_21":22,"_23":22},{"_13":361,"_15":362,"_17":18,"_19":363,"_21":22,"_23":22},{"_13":365,"_15":366,"_17":18,"_19":367,"_21":22,"_23":22},{"_13":369,"_15":370,"_17":18,"_19":371,"_21":22,"_23":22},{"_13":373,"_15":22,"_17":18,"_19":374,"_21":-7,"_10":894},[895,896,897,898],{"_13":377,"_15":378,"_17":18,"_19":379,"_21":22,"_23":22},{"_13":381,"_15":382,"_17":18,"_19":383,"_21":22,"_23":22},{"_13":385,"_15":386,"_17":18,"_19":387,"_21":22,"_23":22},{"_13":389,"_15":390,"_17":18,"_19":391,"_21":22,"_23":22},{"_8":393,"_10":900},[901,908,914,921,930],{"_13":393,"_15":22,"_17":18,"_19":396,"_21":-7,"_10":902},[903,904,905,906,907],{"_13":399,"_15":400,"_17":18,"_19":401,"_21":22,"_23":22},{"_13":403,"_15":404,"_17":18,"_19":405,"_21":22,"_23":22},{"_13":407,"_15":408,"_17":18,"_19":409,"_21":22,"_23":22},{"_13":411,"_15":412,"_17":18,"_19":413,"_21":22,"_23":22},{"_13":415,"_15":416,"_17":18,"_19":417,"_21":22,"_23":22},{"_13":419,"_15":22,"_17":18,"_19":420,"_21":-7,"_10":909},[910,911,912,913],{"_13":423,"_15":424,"_17":18,"_19":425,"_21":22,"_23":22},{"_13":427,"_15":428,"_17":18,"_19":429,"_21":22,"_23":22},{"_13":431,"_15":432,"_17":18,"_19":433,"_21":22,"_23":22},{"_13":435,"_15":436,"_17":18,"_19":437,"_21":22,"_23":22},{"_13":439,"_15":22,"_17":18,"_19":440,"_21":-7,"_10":915},[916,917,918,919,920],{"_13":443,"_15":444,"_17":18,"_19":445,"_21":22,"_23":22},{"_13":447,"_15":448,"_17":18,"_19":449,"_21":22,"_23":22},{"_13":451,"_15":452,"_17":18,"_19":453,"_21":22,"_23":22},{"_13":455,"_15":456,"_17":18,"_19":457,"_21":22,"_23":22},{"_13":459,"_15":460,"_17":18,"_19":461,"_21":22,"_23":22},{"_13":463,"_15":22,"_17":18,"_19":464,"_21":-7,"_10":922},[923,924,925,926,927,928,929],{"_13":467,"_15":468,"_17":18,"_19":469,"_21":22,"_23":22},{"_13":471,"_15":472,"_17":18,"_19":473,"_21":22,"_23":22},{"_13":475,"_15":476,"_17":18,"_19":477,"_21":22,"_23":22},{"_13":479,"_15":480,"_17":18,"_19":481,"_21":22,"_23":22},{"_13":483,"_15":484,"_17":18,"_19":485,"_21":22,"_23":22},{"_13":487,"_15":488,"_17":18,"_19":489,"_21":22,"_23":22},{"_13":491,"_15":492,"_17":18,"_19":493,"_21":22,"_23":22},{"_13":495,"_15":22,"_17":18,"_19":496,"_21":-7,"_10":931},[932,933],{"_13":499,"_15":500,"_17":18,"_19":501,"_21":22,"_23":22},{"_13":503,"_15":504,"_17":18,"_19":505,"_21":22,"_23":22},{"_8":507,"_10":935},[936,942,948,954,961,968,974,979,983,986,997],{"_13":510,"_15":22,"_17":18,"_19":511,"_21":-7,"_10":937},[938,939,940,941],{"_13":514,"_15":515,"_17":18,"_19":516,"_21":22,"_23":22},{"_13":518,"_15":519,"_17":18,"_19":520,"_21":22,"_23":22},{"_13":522,"_15":523,"_17":18,"_19":524,"_21":22,"_23":22},{"_13":526,"_15":527,"_17":18,"_19":528,"_21":22,"_23":22},{"_13":530,"_15":22,"_17":18,"_19":531,"_21":-7,"_10":943},[944,945,946,947],{"_13":534,"_15":535,"_17":18,"_19":536,"_21":22,"_23":22},{"_13":538,"_15":539,"_17":18,"_19":540,"_21":22,"_23":22},{"_13":542,"_15":543,"_17":18,"_19":544,"_21":22,"_23":22},{"_13":546,"_15":547,"_17":18,"_19":548,"_21":22,"_23":22},{"_13":550,"_15":22,"_17":18,"_19":551,"_21":-7,"_10":949},[950,951,952,953],{"_13":554,"_15":555,"_17":18,"_19":556,"_21":22,"_23":22},{"_13":558,"_15":559,"_17":18,"_19":560,"_21":22,"_23":22},{"_13":562,"_15":563,"_17":18,"_19":564,"_21":22,"_23":22},{"_13":566,"_15":567,"_17":18,"_19":568,"_21":22,"_23":22},{"_13":570,"_15":22,"_17":18,"_19":571,"_21":-7,"_10":955},[956,957,958,959,960],{"_13":574,"_15":575,"_17":18,"_19":576,"_21":22,"_23":22},{"_13":578,"_15":579,"_17":18,"_19":580,"_21":22,"_23":22},{"_13":582,"_15":583,"_17":18,"_19":584,"_21":22,"_23":22},{"_13":586,"_15":587,"_17":18,"_19":588,"_21":22,"_23":22},{"_13":590,"_15":591,"_17":18,"_19":592,"_21":22,"_23":22},{"_13":594,"_15":22,"_17":18,"_19":595,"_21":-7,"_10":962},[963,964,965,966,967],{"_13":598,"_15":599,"_17":18,"_19":600,"_21":22,"_23":22},{"_13":602,"_15":603,"_17":18,"_19":604,"_21":22,"_23":22},{"_13":606,"_15":607,"_17":18,"_19":608,"_21":22,"_23":22},{"_13":610,"_15":611,"_17":18,"_19":612,"_21":22,"_23":22},{"_13":614,"_15":615,"_17":18,"_19":616,"_21":22,"_23":22},{"_13":618,"_15":22,"_17":18,"_19":619,"_21":-7,"_10":969},[970,971,972,973],{"_13":622,"_15":623,"_17":18,"_19":624,"_21":22,"_23":22},{"_13":626,"_15":627,"_17":18,"_19":628,"_21":22,"_23":22},{"_13":630,"_15":631,"_17":18,"_19":632,"_21":22,"_23":22},{"_13":634,"_15":635,"_17":18,"_19":636,"_21":22,"_23":22},{"_13":638,"_15":22,"_17":18,"_19":639,"_21":-7,"_10":975},[976,977,978],{"_13":642,"_15":643,"_17":18,"_19":644,"_21":22,"_23":22},{"_13":646,"_15":647,"_17":18,"_19":648,"_21":22,"_23":22},{"_13":650,"_15":651,"_17":18,"_19":652,"_21":22,"_23":22},{"_13":654,"_15":22,"_17":18,"_19":655,"_21":-7,"_10":980},[981,982],{"_13":658,"_15":659,"_17":18,"_19":660,"_21":22,"_23":22},{"_13":662,"_15":663,"_17":18,"_19":664,"_21":22,"_23":22},{"_13":666,"_15":22,"_17":18,"_19":667,"_21":-7,"_10":984},[985],{"_13":670,"_15":671,"_17":18,"_19":672,"_21":22,"_23":22},{"_13":674,"_15":22,"_17":18,"_19":675,"_21":-7,"_10":987},[988,989,990,991,992,993,994,995,996],{"_13":678,"_15":679,"_17":18,"_19":680,"_21":22,"_23":22},{"_13":127,"_15":682,"_17":18,"_19":683,"_21":22,"_23":22},{"_13":307,"_15":685,"_17":18,"_19":686,"_21":22,"_23":22},{"_13":111,"_15":688,"_17":18,"_19":689,"_21":22,"_23":22},{"_13":691,"_15":692,"_17":18,"_19":693,"_21":22,"_23":22},{"_13":695,"_15":696,"_17":18,"_19":697,"_21":22,"_23":22},{"_13":315,"_15":699,"_17":18,"_19":700,"_21":22,"_23":22},{"_13":702,"_15":703,"_17":18,"_19":704,"_21":22,"_23":22},{"_13":706,"_15":707,"_17":18,"_19":708,"_21":22,"_23":22},{"_13":710,"_15":22,"_17":18,"_19":711,"_21":-7,"_10":998},[999,1000,1001,1002,1003,1004,1005,1006,1007,1008],{"_13":714,"_15":715,"_17":18,"_19":716,"_21":22,"_23":22},{"_13":718,"_15":719,"_17":18,"_19":720,"_21":22,"_23":22},{"_13":722,"_15":723,"_17":18,"_19":724,"_21":22,"_23":22},{"_13":726,"_15":727,"_17":18,"_19":728,"_21":22,"_23":22},{"_13":730,"_15":731,"_17":18,"_19":732,"_21":22,"_23":22},{"_13":734,"_15":735,"_17":18,"_19":736,"_21":22,"_23":22},{"_13":738,"_15":739,"_17":18,"_19":740,"_21":22,"_23":22},{"_13":742,"_15":743,"_17":18,"_19":744,"_21":22,"_23":22},{"_13":746,"_15":747,"_17":18,"_19":748,"_21":22,"_23":22},{"_13":750,"_15":751,"_17":18,"_19":752,"_21":22,"_23":22},{"_8":754,"_10":1010},[1011],{"_13":678,"_15":22,"_17":18,"_19":757,"_21":-7,"_10":1012},[1013],{"_13":760,"_15":761,"_17":18,"_19":762,"_21":22,"_23":22},[1015,1016,1017],{"_13":25,"_15":22},{"_13":25,"_15":22},{"_13":31,"_15":768},"code","\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst toc = [];\nconst frontmatter = {\n  \"title\": \"Create a model response\",\n  \"layout\": \"wide\",\n  \"openapi\": \"~/openapi.yaml#POST /responses\"\n};\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ...props.components\n  }, {Atlas} = _components;\n  if (!Atlas) _missingMdxReference(\"Atlas\", true);\n  return _jsx(Atlas, {\n    references: [{\n      __UNSAFE_selector: function noRefCheck() {},\n      canonical: 'createResponse',\n      category: 'rest',\n      context: {\n        fullPath: 'https:/api.openai.com/v1/responses',\n        group: ['responses'],\n        method: 'post',\n        path: '/responses',\n        scopes: []\n      },\n      definitions: [{\n        meta: [{\n          name: 'contentType',\n          value: 'application/json'\n        }, {\n          name: 'required',\n          value: 'true'\n        }],\n        properties: [{\n          description: 'Set of 16 key-value pairs that can be attached to an object. This can be\\nuseful for storing additional information about the object in a structured\\nformat, and querying for objects via API or the dashboard. \\n\\nKeys are strings with a maximum length of 64 characters. Values are strings\\nwith a maximum length of 512 characters.\\n',\n          meta: [{\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'metadata',\n          type: 'object'\n        }, {\n          description: _jsxs(_components.p, {\n            children: [\"What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. We generally recommend altering this or\", ' ', _jsx(_components.code, {\n              children: \"top_p\"\n            }), ' ', \"but not both.\"]\n          }),\n          meta: [{\n            name: 'defaults',\n            value: 1\n          }, {\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'temperature',\n          type: 'number'\n        }, {\n          description: _jsxs(_Fragment, {\n            children: [_jsx(_components.p, {\n              children: \"An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.\"\n            }), _jsxs(_components.p, {\n              children: [\"We generally recommend altering this or\", ' ', _jsx(_components.code, {\n                children: \"temperature\"\n              }), ' ', \"but not both.\"]\n            })]\n          }),\n          meta: [{\n            name: 'defaults',\n            value: 1\n          }, {\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'top_p',\n          type: 'number'\n        }, {\n          description: _jsxs(_components.p, {\n            children: [\"A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.\", ' ', _jsx(_components.a, {\n              href: \"/docs/guides/safety-best-practices#end-user-ids\",\n              children: \"Learn more\"\n            }), \".\"]\n          }),\n          meta: [],\n          name: 'user',\n          type: 'string'\n        }, {\n          description: _jsxs(_Fragment, {\n            children: [_jsx(_components.p, {\n              children: \"Specifies the latency tier to use for processing the request. This parameter is relevant for customers subscribed to the scale tier service:\"\n            }), _jsxs(_components.ul, {\n              children: [_jsx(_components.li, {\n                children: \"If set to 'auto', and the Project is Scale tier enabled, the system will utilize scale tier credits until they are exhausted.\"\n              }), _jsx(_components.li, {\n                children: \"If set to 'auto', and the Project is not Scale tier enabled, the request will be processed using the default service tier with a lower uptime SLA and no latency guarentee.\"\n              }), _jsx(_components.li, {\n                children: \"If set to 'default', the request will be processed using the default service tier with a lower uptime SLA and no latency guarentee.\"\n              }), _jsxs(_components.li, {\n                children: [\"If set to 'flex', the request will be processed with the Flex Processing service tier.\", ' ', _jsx(_components.a, {\n                  href: \"/docs/guides/flex-processing\",\n                  children: \"Learn more\"\n                }), \".\"]\n              }), _jsx(_components.li, {\n                children: \"When not set, the default behavior is 'auto'.\"\n              })]\n            }), _jsxs(_components.p, {\n              children: [\"When this parameter is set, the response body will include the\", ' ', _jsx(_components.code, {\n                children: \"service_tier\"\n              }), ' ', \"utilized.\"]\n            })]\n          }),\n          meta: [{\n            name: 'defaults',\n            value: 'auto'\n          }, {\n            name: 'nullable',\n            value: 'true'\n          }, {\n            name: 'enum-type',\n            value: 'string'\n          }],\n          name: 'service_tier',\n          properties: [{\n            description: '',\n            meta: [],\n            name: 'auto',\n            type: 'string'\n          }, {\n            description: '',\n            meta: [],\n            name: 'default',\n            type: 'string'\n          }, {\n            description: '',\n            meta: [],\n            name: 'flex',\n            type: 'string'\n          }],\n          type: '$$enum'\n        }, {\n          description: _jsxs(_components.p, {\n            children: [\"The unique ID of the previous response to the model. Use this to create multi-turn conversations. Learn more about\", ' ', _jsx(_components.a, {\n              href: \"/docs/guides/conversation-state\",\n              children: \"conversation state\"\n            }), \".\"]\n          }),\n          meta: [{\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'previous_response_id',\n          type: 'string'\n        }, {\n          description: _jsxs(_components.p, {\n            children: [\"Model ID used to generate the response, like\", ' ', _jsx(_components.code, {\n              children: \"gpt-4o\"\n            }), ' ', \"or\", ' ', _jsx(_components.code, {\n              children: \"o3\"\n            }), \". OpenAI offers a wide range of models with different capabilities, performance characteristics, and price points. Refer to the\", ' ', _jsx(_components.a, {\n              href: \"/docs/models\",\n              children: \"model guide\"\n            }), ' ', \"to browse and compare available models.\"]\n          }),\n          name: 'model',\n          properties: [{\n            description: '',\n            meta: [],\n            name: 'model',\n            type: 'string'\n          }, {\n            description: '',\n            meta: [{\n              name: 'enum-type',\n              value: 'string'\n            }],\n            name: 'model',\n            properties: [{\n              description: '',\n              meta: [],\n              name: 'gpt-4.1',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4.1-mini',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4.1-nano',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4.1-2025-04-14',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4.1-mini-2025-04-14',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4.1-nano-2025-04-14',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'o4-mini',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'o4-mini-2025-04-16',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'o3',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'o3-2025-04-16',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'o3-mini',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'o3-mini-2025-01-31',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'o1',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'o1-2024-12-17',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'o1-preview',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'o1-preview-2024-09-12',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'o1-mini',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'o1-mini-2024-09-12',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4o',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4o-2024-11-20',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4o-2024-08-06',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4o-2024-05-13',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4o-audio-preview',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4o-audio-preview-2024-10-01',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4o-audio-preview-2024-12-17',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4o-mini-audio-preview',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4o-mini-audio-preview-2024-12-17',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4o-search-preview',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4o-mini-search-preview',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4o-search-preview-2025-03-11',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4o-mini-search-preview-2025-03-11',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'chatgpt-4o-latest',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4o-mini',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4o-mini-2024-07-18',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4-turbo',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4-turbo-2024-04-09',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4-0125-preview',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4-turbo-preview',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4-1106-preview',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4-vision-preview',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4-0314',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4-0613',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4-32k',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4-32k-0314',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-4-32k-0613',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-3.5-turbo',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-3.5-turbo-16k',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-3.5-turbo-0301',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-3.5-turbo-0613',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-3.5-turbo-1106',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-3.5-turbo-0125',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'gpt-3.5-turbo-16k-0613',\n              type: 'string'\n            }],\n            type: '$$enum'\n          }, {\n            description: '',\n            meta: [{\n              name: 'enum-type',\n              value: 'string'\n            }],\n            name: 'ResponsesOnlyModel',\n            properties: [{\n              description: '',\n              meta: [],\n              name: 'o1-pro',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'o1-pro-2025-03-19',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'computer-use-preview',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'computer-use-preview-2025-03-11',\n              type: 'string'\n            }],\n            type: '$$enum'\n          }],\n          type: '$$union'\n        }, {\n          description: _jsxs(_Fragment, {\n            children: [_jsx(_components.p, {\n              children: _jsx(_components.strong, {\n                children: \"o-series models only\"\n              })\n            }), _jsxs(_components.p, {\n              children: [\"Configuration options for\", ' ', _jsx(_components.a, {\n                href: \"https://platform.openai.com/docs/guides/reasoning\",\n                children: \"reasoning models\"\n              }), \".\"]\n            })]\n          }),\n          meta: [{\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'reasoning',\n          properties: [{\n            description: _jsxs(_Fragment, {\n              children: [_jsx(_components.p, {\n                children: _jsx(_components.strong, {\n                  children: \"o-series models only\"\n                })\n              }), _jsxs(_components.p, {\n                children: [\"Constrains effort on reasoning for\", ' ', _jsx(_components.a, {\n                  href: \"https://platform.openai.com/docs/guides/reasoning\",\n                  children: \"reasoning models\"\n                }), \". Currently supported values are\", ' ', _jsx(_components.code, {\n                  children: \"low\"\n                }), \",\", ' ', _jsx(_components.code, {\n                  children: \"medium\"\n                }), \", and\", ' ', _jsx(_components.code, {\n                  children: \"high\"\n                }), \". Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.\"]\n              })]\n            }),\n            meta: [{\n              name: 'defaults',\n              value: 'medium'\n            }, {\n              name: 'nullable',\n              value: 'true'\n            }, {\n              name: 'enum-type',\n              value: 'string'\n            }],\n            name: 'effort',\n            properties: [{\n              description: '',\n              meta: [],\n              name: 'low',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'medium',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'high',\n              type: 'string'\n            }],\n            type: '$$enum'\n          }, {\n            description: _jsxs(_components.p, {\n              children: [\"A summary of the reasoning performed by the model. This can be useful for debugging and understanding the model's reasoning process. One of\", ' ', _jsx(_components.code, {\n                children: \"auto\"\n              }), \",\", ' ', _jsx(_components.code, {\n                children: \"concise\"\n              }), \", or\", ' ', _jsx(_components.code, {\n                children: \"detailed\"\n              }), \".\"]\n            }),\n            meta: [{\n              name: 'nullable',\n              value: 'true'\n            }, {\n              name: 'enum-type',\n              value: 'string'\n            }],\n            name: 'summary',\n            properties: [{\n              description: '',\n              meta: [],\n              name: 'auto',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'concise',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'detailed',\n              type: 'string'\n            }],\n            type: '$$enum'\n          }, {\n            description: _jsxs(_Fragment, {\n              children: [_jsxs(_components.p, {\n                children: [_jsx(_components.strong, {\n                  children: \"Deprecated:\"\n                }), ' ', \"use\", ' ', _jsx(_components.code, {\n                  children: \"summary\"\n                }), ' ', \"instead.\"]\n              }), _jsxs(_components.p, {\n                children: [\"A summary of the reasoning performed by the model. This can be useful for debugging and understanding the model's reasoning process. One of\", ' ', _jsx(_components.code, {\n                  children: \"auto\"\n                }), \",\", ' ', _jsx(_components.code, {\n                  children: \"concise\"\n                }), \", or\", ' ', _jsx(_components.code, {\n                  children: \"detailed\"\n                }), \".\"]\n              })]\n            }),\n            meta: [{\n              name: 'deprecated',\n              value: 'true'\n            }, {\n              name: 'nullable',\n              value: 'true'\n            }, {\n              name: 'enum-type',\n              value: 'string'\n            }],\n            name: 'generate_summary',\n            properties: [{\n              description: '',\n              meta: [],\n              name: 'auto',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'concise',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'detailed',\n              type: 'string'\n            }],\n            type: '$$enum'\n          }],\n          type: 'object'\n        }, {\n          description: _jsxs(_components.p, {\n            children: [\"An upper bound for the number of tokens that can be generated for a response, including visible output tokens and\", ' ', _jsx(_components.a, {\n              href: \"/docs/guides/reasoning\",\n              children: \"reasoning tokens\"\n            }), \".\"]\n          }),\n          meta: [{\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'max_output_tokens',\n          type: 'integer'\n        }, {\n          description: _jsxs(_Fragment, {\n            children: [_jsx(_components.p, {\n              children: \"Inserts a system (or developer) message as the first item in the model's context.\"\n            }), _jsxs(_components.p, {\n              children: [\"When using along with\", ' ', _jsx(_components.code, {\n                children: \"previous_response_id\"\n              }), \", the instructions from a previous response will not be carried over to the next response. This makes it simple to swap out system (or developer) messages in new responses.\"]\n            })]\n          }),\n          meta: [{\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'instructions',\n          type: 'string'\n        }, {\n          description: _jsxs(_Fragment, {\n            children: [_jsx(_components.p, {\n              children: \"Configuration options for a text response from the model. Can be plain text or structured JSON data. Learn more:\"\n            }), _jsxs(_components.ul, {\n              children: [_jsx(_components.li, {\n                children: _jsx(_components.a, {\n                  href: \"/docs/guides/text\",\n                  children: \"Text inputs and outputs\"\n                })\n              }), _jsx(_components.li, {\n                children: _jsx(_components.a, {\n                  href: \"/docs/guides/structured-outputs\",\n                  children: \"Structured Outputs\"\n                })\n              })]\n            })]\n          }),\n          meta: [],\n          name: 'text',\n          properties: [{\n            description: _jsxs(_Fragment, {\n              children: [_jsx(_components.p, {\n                children: \"An object specifying the format that the model must output.\"\n              }), _jsxs(_components.p, {\n                children: [\"Configuring\", ' ', _jsx(_components.code, {}), ' ', \"enables Structured Outputs, which ensures the model will match your supplied JSON schema. Learn more in the\", ' ', _jsx(_components.a, {\n                  href: \"/docs/guides/structured-outputs\",\n                  children: \"Structured Outputs guide\"\n                }), \".\"]\n              }), _jsxs(_components.p, {\n                children: [\"The default format is\", ' ', _jsx(_components.code, {}), ' ', \"with no additional options.\"]\n              }), _jsx(_components.p, {\n                children: _jsx(_components.strong, {\n                  children: \"Not recommended for gpt-4o and newer models:\"\n                })\n              }), _jsxs(_components.p, {\n                children: [\"Setting to\", ' ', _jsx(_components.code, {}), ' ', \"enables the older JSON mode, which ensures the message the model generates is valid JSON. Using\", ' ', _jsx(_components.code, {\n                  children: \"json_schema\"\n                }), ' ', \"is preferred for models that support it.\"]\n              })]\n            }),\n            name: 'format',\n            properties: [{\n              description: 'Default response format. Used to generate text responses.\\n',\n              meta: [],\n              name: 'Text',\n              properties: [{\n                description: _jsxs(_components.p, {\n                  children: [\"The type of response format being defined. Always\", ' ', _jsx(_components.code, {\n                    children: \"text\"\n                  }), \".\"]\n                }),\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }, {\n                  name: 'enum-type',\n                  value: 'string'\n                }],\n                name: 'type',\n                properties: [{\n                  description: '',\n                  meta: [],\n                  name: 'text',\n                  type: 'string'\n                }],\n                type: '$$enum'\n              }],\n              type: 'object'\n            }, {\n              description: _jsxs(_components.p, {\n                children: [\"JSON Schema response format. Used to generate structured JSON responses. Learn more about\", ' ', _jsx(_components.a, {\n                  href: \"/docs/guides/structured-outputs\",\n                  children: \"Structured Outputs\"\n                }), \".\"]\n              }),\n              meta: [],\n              name: 'JSON schema',\n              properties: [{\n                description: _jsxs(_components.p, {\n                  children: [\"The type of response format being defined. Always\", ' ', _jsx(_components.code, {\n                    children: \"json_schema\"\n                  }), \".\"]\n                }),\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }, {\n                  name: 'enum-type',\n                  value: 'string'\n                }],\n                name: 'type',\n                properties: [{\n                  description: '',\n                  meta: [],\n                  name: 'json_schema',\n                  type: 'string'\n                }],\n                type: '$$enum'\n              }, {\n                description: 'A description of what the response format is for, used by the model to\\ndetermine how to respond in the format.\\n',\n                meta: [],\n                name: 'description',\n                type: 'string'\n              }, {\n                description: 'The name of the response format. Must be a-z, A-Z, 0-9, or contain\\nunderscores and dashes, with a maximum length of 64.\\n',\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }],\n                name: 'name',\n                type: 'string'\n              }, {\n                description: _jsxs(_components.p, {\n                  children: [\"The schema for the response format, described as a JSON Schema object. Learn how to build JSON schemas\", ' ', _jsx(_components.a, {\n                    href: \"https://json-schema.org/\",\n                    children: \"here\"\n                  }), \".\"]\n                }),\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }],\n                name: 'schema',\n                type: 'object'\n              }, {\n                description: _jsxs(_components.p, {\n                  children: [\"Whether to enable strict schema adherence when generating the output. If set to true, the model will always follow the exact schema defined in the\", ' ', _jsx(_components.code, {\n                    children: \"schema\"\n                  }), ' ', \"field. Only a subset of JSON Schema is supported when\", ' ', _jsx(_components.code, {\n                    children: \"strict\"\n                  }), ' ', \"is\", ' ', _jsx(_components.code, {\n                    children: \"true\"\n                  }), \". To learn more, read the\", ' ', _jsx(_components.a, {\n                    href: \"/docs/guides/structured-outputs\",\n                    children: \"Structured Outputs guide\"\n                  }), \".\"]\n                }),\n                meta: [{\n                  name: 'defaults',\n                  value: false\n                }, {\n                  name: 'nullable',\n                  value: 'true'\n                }],\n                name: 'strict',\n                type: 'boolean'\n              }],\n              type: 'object'\n            }, {\n              description: _jsxs(_components.p, {\n                children: [\"JSON object response format. An older method of generating JSON responses. Using\", ' ', _jsx(_components.code, {\n                  children: \"json_schema\"\n                }), ' ', \"is recommended for models that support it. Note that the model will not generate JSON without a system or user message instructing it to do so.\"]\n              }),\n              meta: [],\n              name: 'JSON object',\n              properties: [{\n                description: _jsxs(_components.p, {\n                  children: [\"The type of response format being defined. Always\", ' ', _jsx(_components.code, {\n                    children: \"json_object\"\n                  }), \".\"]\n                }),\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }, {\n                  name: 'enum-type',\n                  value: 'string'\n                }],\n                name: 'type',\n                properties: [{\n                  description: '',\n                  meta: [],\n                  name: 'json_object',\n                  type: 'string'\n                }],\n                type: '$$enum'\n              }],\n              type: 'object'\n            }],\n            type: '$$xor'\n          }],\n          type: 'object'\n        }, {\n          description: _jsxs(_Fragment, {\n            children: [_jsxs(_components.p, {\n              children: [\"An array of tools the model may call while generating a response. You can specify which tool to use by setting the\", ' ', _jsx(_components.code, {\n                children: \"tool_choice\"\n              }), ' ', \"parameter.\"]\n            }), _jsx(_components.p, {\n              children: \"The two categories of tools you can provide the model are:\"\n            }), _jsxs(_components.ul, {\n              children: [_jsxs(_components.li, {\n                children: [_jsx(_components.strong, {\n                  children: \"Built-in tools\"\n                }), \": Tools that are provided by OpenAI that extend the model's capabilities, like\", ' ', _jsx(_components.a, {\n                  href: \"/docs/guides/tools-web-search\",\n                  children: \"web search\"\n                }), ' ', \"or\", ' ', _jsx(_components.a, {\n                  href: \"/docs/guides/tools-file-search\",\n                  children: \"file search\"\n                }), \". Learn more about\", ' ', _jsx(_components.a, {\n                  href: \"/docs/guides/tools\",\n                  children: \"built-in tools\"\n                }), \".\"]\n              }), _jsxs(_components.li, {\n                children: [_jsx(_components.strong, {\n                  children: \"Function calls (custom tools)\"\n                }), \": Functions that are defined by you, enabling the model to call your own code. Learn more about\", ' ', _jsx(_components.a, {\n                  href: \"/docs/guides/function-calling\",\n                  children: \"function calling\"\n                }), \".\"]\n              })]\n            })]\n          }),\n          meta: [],\n          name: 'tools',\n          properties: [{\n            description: _jsxs(_components.p, {\n              children: [\"A tool that searches for relevant content from uploaded files. Learn more about the\", ' ', _jsx(_components.a, {\n                href: \"https://platform.openai.com/docs/guides/tools-file-search\",\n                children: \"file search tool\"\n              }), \".\"]\n            }),\n            meta: [],\n            name: 'File search',\n            properties: [{\n              description: _jsxs(_components.p, {\n                children: [\"The type of the file search tool. Always\", ' ', _jsx(_components.code, {\n                  children: \"file_search\"\n                }), \".\"]\n              }),\n              meta: [{\n                name: 'required',\n                value: 'true'\n              }, {\n                name: 'defaults',\n                value: 'file_search'\n              }, {\n                name: 'enum-type',\n                value: 'string'\n              }],\n              name: 'type',\n              properties: [{\n                description: '',\n                meta: [],\n                name: 'file_search',\n                type: 'string'\n              }],\n              type: '$$enum'\n            }, {\n              description: 'The IDs of the vector stores to search.',\n              meta: [{\n                name: 'required',\n                value: 'true'\n              }],\n              name: 'vector_store_ids',\n              properties: [{\n                description: '',\n                meta: [],\n                name: 'items',\n                type: 'string'\n              }],\n              type: '$$array'\n            }, {\n              description: 'The maximum number of results to return. This number should be between 1 and 50 inclusive.',\n              meta: [],\n              name: 'max_num_results',\n              type: 'integer'\n            }, {\n              description: 'Ranking options for search.',\n              meta: [],\n              name: 'ranking_options',\n              properties: [{\n                description: 'The ranker to use for the file search.',\n                meta: [{\n                  name: 'enum-type',\n                  value: 'string'\n                }],\n                name: 'ranker',\n                properties: [{\n                  description: '',\n                  meta: [],\n                  name: 'auto',\n                  type: 'string'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'default-2024-11-15',\n                  type: 'string'\n                }],\n                type: '$$enum'\n              }, {\n                description: 'The score threshold for the file search, a number between 0 and 1. Numbers closer to 1 will attempt to return only the most relevant results, but may return fewer results.',\n                meta: [],\n                name: 'score_threshold',\n                type: 'number'\n              }],\n              type: 'object'\n            }, {\n              description: '',\n              name: 'filters',\n              properties: [{\n                description: 'A filter used to compare a specified attribute key to a given value using a defined comparison operation.\\n',\n                meta: [],\n                name: 'Comparison Filter',\n                properties: [{\n                  description: _jsxs(_Fragment, {\n                    children: [_jsxs(_components.p, {\n                      children: [\"Specifies the comparison operator:\", ' ', _jsx(_components.code, {\n                        children: \"eq\"\n                      }), \",\", ' ', _jsx(_components.code, {\n                        children: \"ne\"\n                      }), \",\", ' ', _jsx(_components.code, {\n                        children: \"gt\"\n                      }), \",\", ' ', _jsx(_components.code, {\n                        children: \"gte\"\n                      }), \",\", ' ', _jsx(_components.code, {\n                        children: \"lt\"\n                      }), \",\", ' ', _jsx(_components.code, {\n                        children: \"lte\"\n                      }), \".\"]\n                    }), _jsxs(_components.ul, {\n                      children: [_jsxs(_components.li, {\n                        children: [_jsx(_components.code, {\n                          children: \"eq\"\n                        }), \": equals\"]\n                      }), _jsxs(_components.li, {\n                        children: [_jsx(_components.code, {\n                          children: \"ne\"\n                        }), \": not equal\"]\n                      }), _jsxs(_components.li, {\n                        children: [_jsx(_components.code, {\n                          children: \"gt\"\n                        }), \": greater than\"]\n                      }), _jsxs(_components.li, {\n                        children: [_jsx(_components.code, {\n                          children: \"gte\"\n                        }), \": greater than or equal\"]\n                      }), _jsxs(_components.li, {\n                        children: [_jsx(_components.code, {\n                          children: \"lt\"\n                        }), \": less than\"]\n                      }), _jsxs(_components.li, {\n                        children: [_jsx(_components.code, {\n                          children: \"lte\"\n                        }), \": less than or equal\"]\n                      })]\n                    })]\n                  }),\n                  meta: [{\n                    name: 'required',\n                    value: 'true'\n                  }, {\n                    name: 'defaults',\n                    value: 'eq'\n                  }, {\n                    name: 'enum-type',\n                    value: 'string'\n                  }],\n                  name: 'type',\n                  properties: [{\n                    description: '',\n                    meta: [],\n                    name: 'eq',\n                    type: 'string'\n                  }, {\n                    description: '',\n                    meta: [],\n                    name: 'ne',\n                    type: 'string'\n                  }, {\n                    description: '',\n                    meta: [],\n                    name: 'gt',\n                    type: 'string'\n                  }, {\n                    description: '',\n                    meta: [],\n                    name: 'gte',\n                    type: 'string'\n                  }, {\n                    description: '',\n                    meta: [],\n                    name: 'lt',\n                    type: 'string'\n                  }, {\n                    description: '',\n                    meta: [],\n                    name: 'lte',\n                    type: 'string'\n                  }],\n                  type: '$$enum'\n                }, {\n                  description: 'The key to compare against the value.',\n                  meta: [{\n                    name: 'required',\n                    value: 'true'\n                  }],\n                  name: 'key',\n                  type: 'string'\n                }, {\n                  description: 'The value to compare against the attribute key; supports string, number, or boolean types.',\n                  name: 'value',\n                  properties: [{\n                    description: '',\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }],\n                    name: 'value',\n                    type: 'string'\n                  }, {\n                    description: '',\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }],\n                    name: 'value',\n                    type: 'number'\n                  }, {\n                    description: '',\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }],\n                    name: 'value',\n                    type: 'boolean'\n                  }],\n                  type: '$$xor'\n                }],\n                type: 'object'\n              }, {\n                description: _jsxs(_components.p, {\n                  children: [\"Combine multiple filters using\", ' ', _jsx(_components.code, {\n                    children: \"and\"\n                  }), ' ', \"or\", ' ', _jsx(_components.code, {\n                    children: \"or\"\n                  }), \".\"]\n                }),\n                meta: [],\n                name: 'Compound Filter',\n                properties: [{\n                  description: _jsxs(_components.p, {\n                    children: [\"Type of operation:\", ' ', _jsx(_components.code, {\n                      children: \"and\"\n                    }), ' ', \"or\", ' ', _jsx(_components.code, {\n                      children: \"or\"\n                    }), \".\"]\n                  }),\n                  meta: [{\n                    name: 'required',\n                    value: 'true'\n                  }, {\n                    name: 'enum-type',\n                    value: 'string'\n                  }],\n                  name: 'type',\n                  properties: [{\n                    description: '',\n                    meta: [],\n                    name: 'and',\n                    type: 'string'\n                  }, {\n                    description: '',\n                    meta: [],\n                    name: 'or',\n                    type: 'string'\n                  }],\n                  type: '$$enum'\n                }, {\n                  description: _jsxs(_components.p, {\n                    children: [\"Array of filters to combine. Items can be\", ' ', _jsx(_components.code, {\n                      children: \"ComparisonFilter\"\n                    }), ' ', \"or\", ' ', _jsx(_components.code, {\n                      children: \"CompoundFilter\"\n                    }), \".\"]\n                  }),\n                  meta: [{\n                    name: 'required',\n                    value: 'true'\n                  }],\n                  name: 'filters',\n                  properties: [{\n                    description: 'A filter used to compare a specified attribute key to a given value using a defined comparison operation.\\n',\n                    meta: [],\n                    name: 'Comparison Filter',\n                    properties: [{\n                      description: _jsxs(_Fragment, {\n                        children: [_jsxs(_components.p, {\n                          children: [\"Specifies the comparison operator:\", ' ', _jsx(_components.code, {\n                            children: \"eq\"\n                          }), \",\", ' ', _jsx(_components.code, {\n                            children: \"ne\"\n                          }), \",\", ' ', _jsx(_components.code, {\n                            children: \"gt\"\n                          }), \",\", ' ', _jsx(_components.code, {\n                            children: \"gte\"\n                          }), \",\", ' ', _jsx(_components.code, {\n                            children: \"lt\"\n                          }), \",\", ' ', _jsx(_components.code, {\n                            children: \"lte\"\n                          }), \".\"]\n                        }), _jsxs(_components.ul, {\n                          children: [_jsxs(_components.li, {\n                            children: [_jsx(_components.code, {\n                              children: \"eq\"\n                            }), \": equals\"]\n                          }), _jsxs(_components.li, {\n                            children: [_jsx(_components.code, {\n                              children: \"ne\"\n                            }), \": not equal\"]\n                          }), _jsxs(_components.li, {\n                            children: [_jsx(_components.code, {\n                              children: \"gt\"\n                            }), \": greater than\"]\n                          }), _jsxs(_components.li, {\n                            children: [_jsx(_components.code, {\n                              children: \"gte\"\n                            }), \": greater than or equal\"]\n                          }), _jsxs(_components.li, {\n                            children: [_jsx(_components.code, {\n                              children: \"lt\"\n                            }), \": less than\"]\n                          }), _jsxs(_components.li, {\n                            children: [_jsx(_components.code, {\n                              children: \"lte\"\n                            }), \": less than or equal\"]\n                          })]\n                        })]\n                      }),\n                      meta: [{\n                        name: 'required',\n                        value: 'true'\n                      }, {\n                        name: 'defaults',\n                        value: 'eq'\n                      }, {\n                        name: 'enum-type',\n                        value: 'string'\n                      }],\n                      name: 'type',\n                      properties: [{\n                        description: '',\n                        meta: [],\n                        name: 'eq',\n                        type: 'string'\n                      }, {\n                        description: '',\n                        meta: [],\n                        name: 'ne',\n                        type: 'string'\n                      }, {\n                        description: '',\n                        meta: [],\n                        name: 'gt',\n                        type: 'string'\n                      }, {\n                        description: '',\n                        meta: [],\n                        name: 'gte',\n                        type: 'string'\n                      }, {\n                        description: '',\n                        meta: [],\n                        name: 'lt',\n                        type: 'string'\n                      }, {\n                        description: '',\n                        meta: [],\n                        name: 'lte',\n                        type: 'string'\n                      }],\n                      type: '$$enum'\n                    }, {\n                      description: 'The key to compare against the value.',\n                      meta: [{\n                        name: 'required',\n                        value: 'true'\n                      }],\n                      name: 'key',\n                      type: 'string'\n                    }, {\n                      description: 'The value to compare against the attribute key; supports string, number, or boolean types.',\n                      name: 'value',\n                      properties: [{\n                        description: '',\n                        meta: [{\n                          name: 'required',\n                          value: 'true'\n                        }],\n                        name: 'value',\n                        type: 'string'\n                      }, {\n                        description: '',\n                        meta: [{\n                          name: 'required',\n                          value: 'true'\n                        }],\n                        name: 'value',\n                        type: 'number'\n                      }, {\n                        description: '',\n                        meta: [{\n                          name: 'required',\n                          value: 'true'\n                        }],\n                        name: 'value',\n                        type: 'boolean'\n                      }],\n                      type: '$$xor'\n                    }],\n                    type: 'object'\n                  }, {\n                    description: '',\n                    meta: [],\n                    name: 'items',\n                    type: 'object'\n                  }],\n                  type: '$$array'\n                }],\n                type: 'object'\n              }, {\n                description: '',\n                meta: [],\n                name: 'filters',\n                type: 'null'\n              }],\n              type: '$$union'\n            }],\n            type: 'object'\n          }, {\n            description: _jsxs(_components.p, {\n              children: [\"Defines a function in your own code the model can choose to call. Learn more about\", ' ', _jsx(_components.a, {\n                href: \"https://platform.openai.com/docs/guides/function-calling\",\n                children: \"function calling\"\n              }), \".\"]\n            }),\n            meta: [],\n            name: 'Function',\n            properties: [{\n              description: _jsxs(_components.p, {\n                children: [\"The type of the function tool. Always\", ' ', _jsx(_components.code, {\n                  children: \"function\"\n                }), \".\"]\n              }),\n              meta: [{\n                name: 'required',\n                value: 'true'\n              }, {\n                name: 'defaults',\n                value: 'function'\n              }, {\n                name: 'enum-type',\n                value: 'string'\n              }],\n              name: 'type',\n              properties: [{\n                description: '',\n                meta: [],\n                name: 'function',\n                type: 'string'\n              }],\n              type: '$$enum'\n            }, {\n              description: 'The name of the function to call.',\n              meta: [{\n                name: 'required',\n                value: 'true'\n              }],\n              name: 'name',\n              type: 'string'\n            }, {\n              description: '',\n              name: 'description',\n              properties: [{\n                description: 'A description of the function. Used by the model to determine whether or not to call the function.',\n                meta: [],\n                name: 'description',\n                type: 'string'\n              }, {\n                description: '',\n                meta: [],\n                name: 'description',\n                type: 'null'\n              }],\n              type: '$$union'\n            }, {\n              description: '',\n              name: 'parameters',\n              properties: [{\n                description: 'A JSON schema object describing the parameters of the function.',\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }],\n                name: 'parameters',\n                type: 'object'\n              }, {\n                description: '',\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }],\n                name: 'parameters',\n                type: 'null'\n              }],\n              type: '$$union'\n            }, {\n              description: '',\n              name: 'strict',\n              properties: [{\n                description: _jsxs(_components.p, {\n                  children: [\"Whether to enforce strict parameter validation. Default\", ' ', _jsx(_components.code, {\n                    children: \"true\"\n                  }), \".\"]\n                }),\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }],\n                name: 'strict',\n                type: 'boolean'\n              }, {\n                description: '',\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }],\n                name: 'strict',\n                type: 'null'\n              }],\n              type: '$$union'\n            }],\n            type: 'object'\n          }, {\n            description: _jsxs(_components.p, {\n              children: [\"This tool searches the web for relevant results to use in a response. Learn more about the\", ' ', _jsx(_components.a, {\n                href: \"https://platform.openai.com/docs/guides/tools-web-search\",\n                children: \"web search tool\"\n              }), \".\"]\n            }),\n            meta: [],\n            name: 'Web search preview',\n            properties: [{\n              description: _jsxs(_components.p, {\n                children: [\"The type of the web search tool. One of\", ' ', _jsx(_components.code, {\n                  children: \"web_search_preview\"\n                }), ' ', \"or\", ' ', _jsx(_components.code, {\n                  children: \"web_search_preview_2025_03_11\"\n                }), \".\"]\n              }),\n              meta: [{\n                name: 'required',\n                value: 'true'\n              }, {\n                name: 'defaults',\n                value: 'web_search_preview'\n              }, {\n                name: 'enum-type',\n                value: 'string'\n              }],\n              name: 'type',\n              properties: [{\n                description: '',\n                meta: [],\n                name: 'web_search_preview',\n                type: 'string'\n              }, {\n                description: '',\n                meta: [],\n                name: 'web_search_preview_2025_03_11',\n                type: 'string'\n              }],\n              type: '$$enum'\n            }, {\n              description: '',\n              name: 'user_location',\n              properties: [{\n                description: 'The user\\'s location.',\n                meta: [],\n                name: 'user_location',\n                properties: [{\n                  description: _jsxs(_components.p, {\n                    children: [\"The type of location approximation. Always\", ' ', _jsx(_components.code, {\n                      children: \"approximate\"\n                    }), \".\"]\n                  }),\n                  meta: [{\n                    name: 'required',\n                    value: 'true'\n                  }, {\n                    name: 'defaults',\n                    value: 'approximate'\n                  }, {\n                    name: 'enum-type',\n                    value: 'string'\n                  }],\n                  name: 'type',\n                  properties: [{\n                    description: '',\n                    meta: [],\n                    name: 'approximate',\n                    type: 'string'\n                  }],\n                  type: '$$enum'\n                }, {\n                  description: '',\n                  name: 'country',\n                  properties: [{\n                    description: _jsxs(_components.p, {\n                      children: [\"The two-letter\", ' ', _jsx(_components.a, {\n                        href: \"https://en.wikipedia.org/wiki/ISO_3166-1\",\n                        children: \"ISO country code\"\n                      }), ' ', \"of the user, e.g.\", ' ', _jsx(_components.code, {\n                        children: \"US\"\n                      }), \".\"]\n                    }),\n                    meta: [],\n                    name: 'country',\n                    type: 'string'\n                  }, {\n                    description: '',\n                    meta: [],\n                    name: 'country',\n                    type: 'null'\n                  }],\n                  type: '$$union'\n                }, {\n                  description: '',\n                  name: 'region',\n                  properties: [{\n                    description: _jsxs(_components.p, {\n                      children: [\"Free text input for the region of the user, e.g.\", ' ', _jsx(_components.code, {\n                        children: \"California\"\n                      }), \".\"]\n                    }),\n                    meta: [],\n                    name: 'region',\n                    type: 'string'\n                  }, {\n                    description: '',\n                    meta: [],\n                    name: 'region',\n                    type: 'null'\n                  }],\n                  type: '$$union'\n                }, {\n                  description: '',\n                  name: 'city',\n                  properties: [{\n                    description: _jsxs(_components.p, {\n                      children: [\"Free text input for the city of the user, e.g.\", ' ', _jsx(_components.code, {\n                        children: \"San Francisco\"\n                      }), \".\"]\n                    }),\n                    meta: [],\n                    name: 'city',\n                    type: 'string'\n                  }, {\n                    description: '',\n                    meta: [],\n                    name: 'city',\n                    type: 'null'\n                  }],\n                  type: '$$union'\n                }, {\n                  description: '',\n                  name: 'timezone',\n                  properties: [{\n                    description: _jsxs(_components.p, {\n                      children: [\"The\", ' ', _jsx(_components.a, {\n                        href: \"https://timeapi.io/documentation/iana-timezones\",\n                        children: \"IANA timezone\"\n                      }), ' ', \"of the user, e.g.\", ' ', _jsx(_components.code, {\n                        children: \"America/Los_Angeles\"\n                      }), \".\"]\n                    }),\n                    meta: [],\n                    name: 'timezone',\n                    type: 'string'\n                  }, {\n                    description: '',\n                    meta: [],\n                    name: 'timezone',\n                    type: 'null'\n                  }],\n                  type: '$$union'\n                }],\n                type: 'object'\n              }, {\n                description: '',\n                meta: [],\n                name: 'user_location',\n                type: 'null'\n              }],\n              type: '$$union'\n            }, {\n              description: _jsxs(_components.p, {\n                children: [\"High level guidance for the amount of context window space to use for the search. One of\", ' ', _jsx(_components.code, {\n                  children: \"low\"\n                }), \",\", ' ', _jsx(_components.code, {\n                  children: \"medium\"\n                }), \", or\", ' ', _jsx(_components.code, {\n                  children: \"high\"\n                }), \".\", ' ', _jsx(_components.code, {\n                  children: \"medium\"\n                }), ' ', \"is the default.\"]\n              }),\n              meta: [{\n                name: 'enum-type',\n                value: 'string'\n              }],\n              name: 'search_context_size',\n              properties: [{\n                description: '',\n                meta: [],\n                name: 'low',\n                type: 'string'\n              }, {\n                description: '',\n                meta: [],\n                name: 'medium',\n                type: 'string'\n              }, {\n                description: '',\n                meta: [],\n                name: 'high',\n                type: 'string'\n              }],\n              type: '$$enum'\n            }],\n            type: 'object'\n          }, {\n            description: _jsxs(_components.p, {\n              children: [\"A tool that controls a virtual computer. Learn more about the\", ' ', _jsx(_components.a, {\n                href: \"https://platform.openai.com/docs/guides/tools-computer-use\",\n                children: \"computer tool\"\n              }), \".\"]\n            }),\n            meta: [],\n            name: 'Computer use preview',\n            properties: [{\n              description: _jsxs(_components.p, {\n                children: [\"The type of the computer use tool. Always\", ' ', _jsx(_components.code, {\n                  children: \"computer_use_preview\"\n                }), \".\"]\n              }),\n              meta: [{\n                name: 'required',\n                value: 'true'\n              }, {\n                name: 'defaults',\n                value: 'computer_use_preview'\n              }, {\n                name: 'enum-type',\n                value: 'string'\n              }],\n              name: 'type',\n              properties: [{\n                description: '',\n                meta: [],\n                name: 'computer_use_preview',\n                type: 'string'\n              }],\n              type: '$$enum'\n            }, {\n              description: 'The type of computer environment to control.',\n              meta: [{\n                name: 'required',\n                value: 'true'\n              }, {\n                name: 'enum-type',\n                value: 'string'\n              }],\n              name: 'environment',\n              properties: [{\n                description: '',\n                meta: [],\n                name: 'windows',\n                type: 'string'\n              }, {\n                description: '',\n                meta: [],\n                name: 'mac',\n                type: 'string'\n              }, {\n                description: '',\n                meta: [],\n                name: 'linux',\n                type: 'string'\n              }, {\n                description: '',\n                meta: [],\n                name: 'ubuntu',\n                type: 'string'\n              }, {\n                description: '',\n                meta: [],\n                name: 'browser',\n                type: 'string'\n              }],\n              type: '$$enum'\n            }, {\n              description: 'The width of the computer display.',\n              meta: [{\n                name: 'required',\n                value: 'true'\n              }],\n              name: 'display_width',\n              type: 'integer'\n            }, {\n              description: 'The height of the computer display.',\n              meta: [{\n                name: 'required',\n                value: 'true'\n              }],\n              name: 'display_height',\n              type: 'integer'\n            }],\n            type: 'object'\n          }],\n          type: '$$array'\n        }, {\n          description: _jsxs(_components.p, {\n            children: [\"How the model should select which tool (or tools) to use when generating a response. See the\", ' ', _jsx(_components.code, {\n              children: \"tools\"\n            }), ' ', \"parameter to see how to specify which tools the model can call.\"]\n          }),\n          name: 'tool_choice',\n          properties: [{\n            description: _jsxs(_Fragment, {\n              children: [_jsx(_components.p, {\n                children: \"Controls which (if any) tool is called by the model.\"\n              }), _jsxs(_components.p, {\n                children: [_jsx(_components.code, {\n                  children: \"none\"\n                }), ' ', \"means the model will not call any tool and instead generates a message.\"]\n              }), _jsxs(_components.p, {\n                children: [_jsx(_components.code, {\n                  children: \"auto\"\n                }), ' ', \"means the model can pick between generating a message or calling one or more tools.\"]\n              }), _jsxs(_components.p, {\n                children: [_jsx(_components.code, {\n                  children: \"required\"\n                }), ' ', \"means the model must call one or more tools.\"]\n              })]\n            }),\n            meta: [{\n              name: 'enum-type',\n              value: 'string'\n            }],\n            name: 'Tool choice mode',\n            properties: [{\n              description: '',\n              meta: [],\n              name: 'none',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'auto',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'required',\n              type: 'string'\n            }],\n            type: '$$enum'\n          }, {\n            description: _jsxs(_components.p, {\n              children: [\"Indicates that the model should use a built-in tool to generate a response.\", ' ', _jsx(_components.a, {\n                href: \"/docs/guides/tools\",\n                children: \"Learn more about built-in tools\"\n              }), \".\"]\n            }),\n            meta: [],\n            name: 'Hosted tool',\n            properties: [{\n              description: _jsxs(_Fragment, {\n                children: [_jsxs(_components.p, {\n                  children: [\"The type of hosted tool the model should to use. Learn more about\", ' ', _jsx(_components.a, {\n                    href: \"/docs/guides/tools\",\n                    children: \"built-in tools\"\n                  }), \".\"]\n                }), _jsx(_components.p, {\n                  children: \"Allowed values are:\"\n                }), _jsxs(_components.ul, {\n                  children: [_jsx(_components.li, {\n                    children: _jsx(_components.code, {\n                      children: \"file_search\"\n                    })\n                  }), _jsx(_components.li, {\n                    children: _jsx(_components.code, {\n                      children: \"web_search_preview\"\n                    })\n                  }), _jsx(_components.li, {\n                    children: _jsx(_components.code, {\n                      children: \"computer_use_preview\"\n                    })\n                  })]\n                })]\n              }),\n              meta: [{\n                name: 'required',\n                value: 'true'\n              }, {\n                name: 'enum-type',\n                value: 'string'\n              }],\n              name: 'type',\n              properties: [{\n                description: '',\n                meta: [],\n                name: 'file_search',\n                type: 'string'\n              }, {\n                description: '',\n                meta: [],\n                name: 'web_search_preview',\n                type: 'string'\n              }, {\n                description: '',\n                meta: [],\n                name: 'computer_use_preview',\n                type: 'string'\n              }, {\n                description: '',\n                meta: [],\n                name: 'web_search_preview_2025_03_11',\n                type: 'string'\n              }],\n              type: '$$enum'\n            }],\n            type: 'object'\n          }, {\n            description: 'Use this option to force the model to call a specific function.\\n',\n            meta: [],\n            name: 'Function tool',\n            properties: [{\n              description: _jsxs(_components.p, {\n                children: [\"For function calling, the type is always\", ' ', _jsx(_components.code, {\n                  children: \"function\"\n                }), \".\"]\n              }),\n              meta: [{\n                name: 'required',\n                value: 'true'\n              }, {\n                name: 'enum-type',\n                value: 'string'\n              }],\n              name: 'type',\n              properties: [{\n                description: '',\n                meta: [],\n                name: 'function',\n                type: 'string'\n              }],\n              type: '$$enum'\n            }, {\n              description: 'The name of the function to call.',\n              meta: [{\n                name: 'required',\n                value: 'true'\n              }],\n              name: 'name',\n              type: 'string'\n            }],\n            type: 'object'\n          }],\n          type: '$$xor'\n        }, {\n          description: _jsxs(_Fragment, {\n            children: [_jsx(_components.p, {\n              children: \"The truncation strategy to use for the model response.\"\n            }), _jsxs(_components.ul, {\n              children: [_jsxs(_components.li, {\n                children: [_jsx(_components.code, {\n                  children: \"auto\"\n                }), \": If the context of this response and previous ones exceeds the model's context window size, the model will truncate the response to fit the context window by dropping input items in the middle of the conversation.\"]\n              }), _jsxs(_components.li, {\n                children: [_jsx(_components.code, {\n                  children: \"disabled\"\n                }), ' ', \"(default): If a model response will exceed the context window size for a model, the request will fail with a 400 error.\"]\n              })]\n            })]\n          }),\n          meta: [{\n            name: 'defaults',\n            value: 'disabled'\n          }, {\n            name: 'nullable',\n            value: 'true'\n          }, {\n            name: 'enum-type',\n            value: 'string'\n          }],\n          name: 'truncation',\n          properties: [{\n            description: '',\n            meta: [],\n            name: 'auto',\n            type: 'string'\n          }, {\n            description: '',\n            meta: [],\n            name: 'disabled',\n            type: 'string'\n          }],\n          type: '$$enum'\n        }, {\n          description: _jsxs(_Fragment, {\n            children: [_jsx(_components.p, {\n              children: \"Text, image, or file inputs to the model, used to generate a response.\"\n            }), _jsx(_components.p, {\n              children: \"Learn more:\"\n            }), _jsxs(_components.ul, {\n              children: [_jsx(_components.li, {\n                children: _jsx(_components.a, {\n                  href: \"/docs/guides/text\",\n                  children: \"Text inputs and outputs\"\n                })\n              }), _jsx(_components.li, {\n                children: _jsx(_components.a, {\n                  href: \"/docs/guides/images\",\n                  children: \"Image inputs\"\n                })\n              }), _jsx(_components.li, {\n                children: _jsx(_components.a, {\n                  href: \"/docs/guides/pdf-files\",\n                  children: \"File inputs\"\n                })\n              }), _jsx(_components.li, {\n                children: _jsx(_components.a, {\n                  href: \"/docs/guides/conversation-state\",\n                  children: \"Conversation state\"\n                })\n              }), _jsx(_components.li, {\n                children: _jsx(_components.a, {\n                  href: \"/docs/guides/function-calling\",\n                  children: \"Function calling\"\n                })\n              })]\n            })]\n          }),\n          name: 'input',\n          properties: [{\n            description: _jsxs(_components.p, {\n              children: [\"A text input to the model, equivalent to a text input with the\", ' ', _jsx(_components.code, {\n                children: \"user\"\n              }), ' ', \"role.\"]\n            }),\n            meta: [{\n              name: 'required',\n              value: 'true'\n            }],\n            name: 'Text input',\n            type: 'string'\n          }, {\n            description: 'A list of one or many input items to the model, containing \\ndifferent content types.\\n',\n            meta: [{\n              name: 'required',\n              value: 'true'\n            }],\n            name: 'Input item list',\n            properties: [{\n              description: _jsxs(_components.p, {\n                children: [\"A message input to the model with a role indicating instruction following hierarchy. Instructions given with the\", ' ', _jsx(_components.code, {\n                  children: \"developer\"\n                }), ' ', \"or\", ' ', _jsx(_components.code, {\n                  children: \"system\"\n                }), ' ', \"role take precedence over instructions given with the\", ' ', _jsx(_components.code, {\n                  children: \"user\"\n                }), ' ', \"role. Messages with the\", ' ', _jsx(_components.code, {\n                  children: \"assistant\"\n                }), ' ', \"role are presumed to have been generated by the model in previous interactions.\"]\n              }),\n              meta: [],\n              name: 'Input message',\n              properties: [{\n                description: _jsxs(_components.p, {\n                  children: [\"The role of the message input. One of\", ' ', _jsx(_components.code, {\n                    children: \"user\"\n                  }), \",\", ' ', _jsx(_components.code, {\n                    children: \"assistant\"\n                  }), \",\", ' ', _jsx(_components.code, {\n                    children: \"system\"\n                  }), \", or\", ' ', _jsx(_components.code, {\n                    children: \"developer\"\n                  }), \".\"]\n                }),\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }, {\n                  name: 'enum-type',\n                  value: 'string'\n                }],\n                name: 'role',\n                properties: [{\n                  description: '',\n                  meta: [],\n                  name: 'user',\n                  type: 'string'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'assistant',\n                  type: 'string'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'system',\n                  type: 'string'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'developer',\n                  type: 'string'\n                }],\n                type: '$$enum'\n              }, {\n                description: 'Text, image, or audio input to the model, used to generate a response.\\nCan also contain previous assistant responses.\\n',\n                name: 'content',\n                properties: [{\n                  description: 'A text input to the model.\\n',\n                  meta: [{\n                    name: 'required',\n                    value: 'true'\n                  }],\n                  name: 'Text input',\n                  type: 'string'\n                }, {\n                  description: 'A list of one or many input items to the model, containing different content \\ntypes.\\n',\n                  meta: [{\n                    name: 'required',\n                    value: 'true'\n                  }],\n                  name: 'Input item content list',\n                  properties: [{\n                    description: 'A text input to the model.',\n                    meta: [],\n                    name: 'Input text',\n                    properties: [{\n                      description: _jsxs(_components.p, {\n                        children: [\"The type of the input item. Always\", ' ', _jsx(_components.code, {\n                          children: \"input_text\"\n                        }), \".\"]\n                      }),\n                      meta: [{\n                        name: 'required',\n                        value: 'true'\n                      }, {\n                        name: 'defaults',\n                        value: 'input_text'\n                      }, {\n                        name: 'enum-type',\n                        value: 'string'\n                      }],\n                      name: 'type',\n                      properties: [{\n                        description: '',\n                        meta: [],\n                        name: 'input_text',\n                        type: 'string'\n                      }],\n                      type: '$$enum'\n                    }, {\n                      description: 'The text input to the model.',\n                      meta: [{\n                        name: 'required',\n                        value: 'true'\n                      }],\n                      name: 'text',\n                      type: 'string'\n                    }],\n                    type: 'object'\n                  }, {\n                    description: _jsxs(_components.p, {\n                      children: [\"An image input to the model. Learn about\", ' ', _jsx(_components.a, {\n                        href: \"/docs/guides/vision\",\n                        children: \"image inputs\"\n                      }), \".\"]\n                    }),\n                    meta: [],\n                    name: 'Input image',\n                    properties: [{\n                      description: _jsxs(_components.p, {\n                        children: [\"The type of the input item. Always\", ' ', _jsx(_components.code, {\n                          children: \"input_image\"\n                        }), \".\"]\n                      }),\n                      meta: [{\n                        name: 'required',\n                        value: 'true'\n                      }, {\n                        name: 'defaults',\n                        value: 'input_image'\n                      }, {\n                        name: 'enum-type',\n                        value: 'string'\n                      }],\n                      name: 'type',\n                      properties: [{\n                        description: '',\n                        meta: [],\n                        name: 'input_image',\n                        type: 'string'\n                      }],\n                      type: '$$enum'\n                    }, {\n                      description: '',\n                      name: 'image_url',\n                      properties: [{\n                        description: 'The URL of the image to be sent to the model. A fully qualified URL or base64 encoded image in a data URL.',\n                        meta: [],\n                        name: 'image_url',\n                        type: 'string'\n                      }, {\n                        description: '',\n                        meta: [],\n                        name: 'image_url',\n                        type: 'null'\n                      }],\n                      type: '$$union'\n                    }, {\n                      description: '',\n                      name: 'file_id',\n                      properties: [{\n                        description: 'The ID of the file to be sent to the model.',\n                        meta: [],\n                        name: 'file_id',\n                        type: 'string'\n                      }, {\n                        description: '',\n                        meta: [],\n                        name: 'file_id',\n                        type: 'null'\n                      }],\n                      type: '$$union'\n                    }, {\n                      description: _jsxs(_components.p, {\n                        children: [\"The detail level of the image to be sent to the model. One of\", ' ', _jsx(_components.code, {\n                          children: \"high\"\n                        }), \",\", ' ', _jsx(_components.code, {\n                          children: \"low\"\n                        }), \", or\", ' ', _jsx(_components.code, {\n                          children: \"auto\"\n                        }), \". Defaults to\", ' ', _jsx(_components.code, {\n                          children: \"auto\"\n                        }), \".\"]\n                      }),\n                      meta: [{\n                        name: 'required',\n                        value: 'true'\n                      }, {\n                        name: 'enum-type',\n                        value: 'string'\n                      }],\n                      name: 'detail',\n                      properties: [{\n                        description: '',\n                        meta: [],\n                        name: 'low',\n                        type: 'string'\n                      }, {\n                        description: '',\n                        meta: [],\n                        name: 'high',\n                        type: 'string'\n                      }, {\n                        description: '',\n                        meta: [],\n                        name: 'auto',\n                        type: 'string'\n                      }],\n                      type: '$$enum'\n                    }],\n                    type: 'object'\n                  }, {\n                    description: 'A file input to the model.',\n                    meta: [],\n                    name: 'Input file',\n                    properties: [{\n                      description: _jsxs(_components.p, {\n                        children: [\"The type of the input item. Always\", ' ', _jsx(_components.code, {\n                          children: \"input_file\"\n                        }), \".\"]\n                      }),\n                      meta: [{\n                        name: 'required',\n                        value: 'true'\n                      }, {\n                        name: 'defaults',\n                        value: 'input_file'\n                      }, {\n                        name: 'enum-type',\n                        value: 'string'\n                      }],\n                      name: 'type',\n                      properties: [{\n                        description: '',\n                        meta: [],\n                        name: 'input_file',\n                        type: 'string'\n                      }],\n                      type: '$$enum'\n                    }, {\n                      description: '',\n                      name: 'file_id',\n                      properties: [{\n                        description: 'The ID of the file to be sent to the model.',\n                        meta: [],\n                        name: 'file_id',\n                        type: 'string'\n                      }, {\n                        description: '',\n                        meta: [],\n                        name: 'file_id',\n                        type: 'null'\n                      }],\n                      type: '$$union'\n                    }, {\n                      description: 'The name of the file to be sent to the model.',\n                      meta: [],\n                      name: 'filename',\n                      type: 'string'\n                    }, {\n                      description: 'The content of the file to be sent to the model.\\n',\n                      meta: [],\n                      name: 'file_data',\n                      type: 'string'\n                    }],\n                    type: 'object'\n                  }],\n                  type: '$$array'\n                }],\n                type: '$$xor'\n              }, {\n                description: _jsxs(_components.p, {\n                  children: [\"The type of the message input. Always\", ' ', _jsx(_components.code, {\n                    children: \"message\"\n                  }), \".\"]\n                }),\n                meta: [{\n                  name: 'enum-type',\n                  value: 'string'\n                }],\n                name: 'type',\n                properties: [{\n                  description: '',\n                  meta: [],\n                  name: 'message',\n                  type: 'string'\n                }],\n                type: '$$enum'\n              }],\n              type: 'object'\n            }, {\n              description: _jsxs(_components.p, {\n                children: [\"A message input to the model with a role indicating instruction following hierarchy. Instructions given with the\", ' ', _jsx(_components.code, {\n                  children: \"developer\"\n                }), ' ', \"or\", ' ', _jsx(_components.code, {\n                  children: \"system\"\n                }), ' ', \"role take precedence over instructions given with the\", ' ', _jsx(_components.code, {\n                  children: \"user\"\n                }), ' ', \"role.\"]\n              }),\n              meta: [],\n              name: 'Input message',\n              properties: [{\n                description: _jsxs(_components.p, {\n                  children: [\"The type of the message input. Always set to\", ' ', _jsx(_components.code, {\n                    children: \"message\"\n                  }), \".\"]\n                }),\n                meta: [{\n                  name: 'enum-type',\n                  value: 'string'\n                }],\n                name: 'type',\n                properties: [{\n                  description: '',\n                  meta: [],\n                  name: 'message',\n                  type: 'string'\n                }],\n                type: '$$enum'\n              }, {\n                description: _jsxs(_components.p, {\n                  children: [\"The role of the message input. One of\", ' ', _jsx(_components.code, {\n                    children: \"user\"\n                  }), \",\", ' ', _jsx(_components.code, {\n                    children: \"system\"\n                  }), \", or\", ' ', _jsx(_components.code, {\n                    children: \"developer\"\n                  }), \".\"]\n                }),\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }, {\n                  name: 'enum-type',\n                  value: 'string'\n                }],\n                name: 'role',\n                properties: [{\n                  description: '',\n                  meta: [],\n                  name: 'user',\n                  type: 'string'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'system',\n                  type: 'string'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'developer',\n                  type: 'string'\n                }],\n                type: '$$enum'\n              }, {\n                description: _jsxs(_components.p, {\n                  children: [\"The status of item. One of\", ' ', _jsx(_components.code, {\n                    children: \"in_progress\"\n                  }), \",\", ' ', _jsx(_components.code, {\n                    children: \"completed\"\n                  }), \", or\", ' ', _jsx(_components.code, {\n                    children: \"incomplete\"\n                  }), \". Populated when items are returned via API.\"]\n                }),\n                meta: [{\n                  name: 'enum-type',\n                  value: 'string'\n                }],\n                name: 'status',\n                properties: [{\n                  description: '',\n                  meta: [],\n                  name: 'in_progress',\n                  type: 'string'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'completed',\n                  type: 'string'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'incomplete',\n                  type: 'string'\n                }],\n                type: '$$enum'\n              }, {\n                description: 'A list of one or many input items to the model, containing different content \\ntypes.\\n',\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }],\n                name: 'content',\n                properties: [{\n                  description: 'A text input to the model.',\n                  meta: [],\n                  name: 'Input text',\n                  properties: [{\n                    description: _jsxs(_components.p, {\n                      children: [\"The type of the input item. Always\", ' ', _jsx(_components.code, {\n                        children: \"input_text\"\n                      }), \".\"]\n                    }),\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }, {\n                      name: 'defaults',\n                      value: 'input_text'\n                    }, {\n                      name: 'enum-type',\n                      value: 'string'\n                    }],\n                    name: 'type',\n                    properties: [{\n                      description: '',\n                      meta: [],\n                      name: 'input_text',\n                      type: 'string'\n                    }],\n                    type: '$$enum'\n                  }, {\n                    description: 'The text input to the model.',\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }],\n                    name: 'text',\n                    type: 'string'\n                  }],\n                  type: 'object'\n                }, {\n                  description: _jsxs(_components.p, {\n                    children: [\"An image input to the model. Learn about\", ' ', _jsx(_components.a, {\n                      href: \"/docs/guides/vision\",\n                      children: \"image inputs\"\n                    }), \".\"]\n                  }),\n                  meta: [],\n                  name: 'Input image',\n                  properties: [{\n                    description: _jsxs(_components.p, {\n                      children: [\"The type of the input item. Always\", ' ', _jsx(_components.code, {\n                        children: \"input_image\"\n                      }), \".\"]\n                    }),\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }, {\n                      name: 'defaults',\n                      value: 'input_image'\n                    }, {\n                      name: 'enum-type',\n                      value: 'string'\n                    }],\n                    name: 'type',\n                    properties: [{\n                      description: '',\n                      meta: [],\n                      name: 'input_image',\n                      type: 'string'\n                    }],\n                    type: '$$enum'\n                  }, {\n                    description: '',\n                    name: 'image_url',\n                    properties: [{\n                      description: 'The URL of the image to be sent to the model. A fully qualified URL or base64 encoded image in a data URL.',\n                      meta: [],\n                      name: 'image_url',\n                      type: 'string'\n                    }, {\n                      description: '',\n                      meta: [],\n                      name: 'image_url',\n                      type: 'null'\n                    }],\n                    type: '$$union'\n                  }, {\n                    description: '',\n                    name: 'file_id',\n                    properties: [{\n                      description: 'The ID of the file to be sent to the model.',\n                      meta: [],\n                      name: 'file_id',\n                      type: 'string'\n                    }, {\n                      description: '',\n                      meta: [],\n                      name: 'file_id',\n                      type: 'null'\n                    }],\n                    type: '$$union'\n                  }, {\n                    description: _jsxs(_components.p, {\n                      children: [\"The detail level of the image to be sent to the model. One of\", ' ', _jsx(_components.code, {\n                        children: \"high\"\n                      }), \",\", ' ', _jsx(_components.code, {\n                        children: \"low\"\n                      }), \", or\", ' ', _jsx(_components.code, {\n                        children: \"auto\"\n                      }), \". Defaults to\", ' ', _jsx(_components.code, {\n                        children: \"auto\"\n                      }), \".\"]\n                    }),\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }, {\n                      name: 'enum-type',\n                      value: 'string'\n                    }],\n                    name: 'detail',\n                    properties: [{\n                      description: '',\n                      meta: [],\n                      name: 'low',\n                      type: 'string'\n                    }, {\n                      description: '',\n                      meta: [],\n                      name: 'high',\n                      type: 'string'\n                    }, {\n                      description: '',\n                      meta: [],\n                      name: 'auto',\n                      type: 'string'\n                    }],\n                    type: '$$enum'\n                  }],\n                  type: 'object'\n                }, {\n                  description: 'A file input to the model.',\n                  meta: [],\n                  name: 'Input file',\n                  properties: [{\n                    description: _jsxs(_components.p, {\n                      children: [\"The type of the input item. Always\", ' ', _jsx(_components.code, {\n                        children: \"input_file\"\n                      }), \".\"]\n                    }),\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }, {\n                      name: 'defaults',\n                      value: 'input_file'\n                    }, {\n                      name: 'enum-type',\n                      value: 'string'\n                    }],\n                    name: 'type',\n                    properties: [{\n                      description: '',\n                      meta: [],\n                      name: 'input_file',\n                      type: 'string'\n                    }],\n                    type: '$$enum'\n                  }, {\n                    description: '',\n                    name: 'file_id',\n                    properties: [{\n                      description: 'The ID of the file to be sent to the model.',\n                      meta: [],\n                      name: 'file_id',\n                      type: 'string'\n                    }, {\n                      description: '',\n                      meta: [],\n                      name: 'file_id',\n                      type: 'null'\n                    }],\n                    type: '$$union'\n                  }, {\n                    description: 'The name of the file to be sent to the model.',\n                    meta: [],\n                    name: 'filename',\n                    type: 'string'\n                  }, {\n                    description: 'The content of the file to be sent to the model.\\n',\n                    meta: [],\n                    name: 'file_data',\n                    type: 'string'\n                  }],\n                  type: 'object'\n                }],\n                type: '$$array'\n              }],\n              type: 'object'\n            }, {\n              description: 'An output message from the model.\\n',\n              meta: [],\n              name: 'Output message',\n              properties: [{\n                description: 'The unique ID of the output message.\\n',\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }],\n                name: 'id',\n                type: 'string'\n              }, {\n                description: _jsxs(_components.p, {\n                  children: [\"The type of the output message. Always\", ' ', _jsx(_components.code, {\n                    children: \"message\"\n                  }), \".\"]\n                }),\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }, {\n                  name: 'enum-type',\n                  value: 'string'\n                }],\n                name: 'type',\n                properties: [{\n                  description: '',\n                  meta: [],\n                  name: 'message',\n                  type: 'string'\n                }],\n                type: '$$enum'\n              }, {\n                description: _jsxs(_components.p, {\n                  children: [\"The role of the output message. Always\", ' ', _jsx(_components.code, {\n                    children: \"assistant\"\n                  }), \".\"]\n                }),\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }, {\n                  name: 'enum-type',\n                  value: 'string'\n                }],\n                name: 'role',\n                properties: [{\n                  description: '',\n                  meta: [],\n                  name: 'assistant',\n                  type: 'string'\n                }],\n                type: '$$enum'\n              }, {\n                description: 'The content of the output message.\\n',\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }],\n                name: 'content',\n                properties: [{\n                  description: 'A text output from the model.',\n                  meta: [],\n                  name: 'Output text',\n                  properties: [{\n                    description: _jsxs(_components.p, {\n                      children: [\"The type of the output text. Always\", ' ', _jsx(_components.code, {\n                        children: \"output_text\"\n                      }), \".\"]\n                    }),\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }, {\n                      name: 'defaults',\n                      value: 'output_text'\n                    }, {\n                      name: 'enum-type',\n                      value: 'string'\n                    }],\n                    name: 'type',\n                    properties: [{\n                      description: '',\n                      meta: [],\n                      name: 'output_text',\n                      type: 'string'\n                    }],\n                    type: '$$enum'\n                  }, {\n                    description: 'The text output from the model.',\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }],\n                    name: 'text',\n                    type: 'string'\n                  }, {\n                    description: 'The annotations of the text output.',\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }],\n                    name: 'annotations',\n                    properties: [{\n                      description: 'A citation to a file.',\n                      meta: [],\n                      name: 'File citation',\n                      properties: [{\n                        description: _jsxs(_components.p, {\n                          children: [\"The type of the file citation. Always\", ' ', _jsx(_components.code, {\n                            children: \"file_citation\"\n                          }), \".\"]\n                        }),\n                        meta: [{\n                          name: 'required',\n                          value: 'true'\n                        }, {\n                          name: 'defaults',\n                          value: 'file_citation'\n                        }, {\n                          name: 'enum-type',\n                          value: 'string'\n                        }],\n                        name: 'type',\n                        properties: [{\n                          description: '',\n                          meta: [],\n                          name: 'file_citation',\n                          type: 'string'\n                        }],\n                        type: '$$enum'\n                      }, {\n                        description: 'The ID of the file.',\n                        meta: [{\n                          name: 'required',\n                          value: 'true'\n                        }],\n                        name: 'file_id',\n                        type: 'string'\n                      }, {\n                        description: 'The index of the file in the list of files.',\n                        meta: [{\n                          name: 'required',\n                          value: 'true'\n                        }],\n                        name: 'index',\n                        type: 'integer'\n                      }],\n                      type: 'object'\n                    }, {\n                      description: 'A citation for a web resource used to generate a model response.',\n                      meta: [],\n                      name: 'URL citation',\n                      properties: [{\n                        description: _jsxs(_components.p, {\n                          children: [\"The type of the URL citation. Always\", ' ', _jsx(_components.code, {\n                            children: \"url_citation\"\n                          }), \".\"]\n                        }),\n                        meta: [{\n                          name: 'required',\n                          value: 'true'\n                        }, {\n                          name: 'defaults',\n                          value: 'url_citation'\n                        }, {\n                          name: 'enum-type',\n                          value: 'string'\n                        }],\n                        name: 'type',\n                        properties: [{\n                          description: '',\n                          meta: [],\n                          name: 'url_citation',\n                          type: 'string'\n                        }],\n                        type: '$$enum'\n                      }, {\n                        description: 'The URL of the web resource.',\n                        meta: [{\n                          name: 'required',\n                          value: 'true'\n                        }],\n                        name: 'url',\n                        type: 'string'\n                      }, {\n                        description: 'The index of the first character of the URL citation in the message.',\n                        meta: [{\n                          name: 'required',\n                          value: 'true'\n                        }],\n                        name: 'start_index',\n                        type: 'integer'\n                      }, {\n                        description: 'The index of the last character of the URL citation in the message.',\n                        meta: [{\n                          name: 'required',\n                          value: 'true'\n                        }],\n                        name: 'end_index',\n                        type: 'integer'\n                      }, {\n                        description: 'The title of the web resource.',\n                        meta: [{\n                          name: 'required',\n                          value: 'true'\n                        }],\n                        name: 'title',\n                        type: 'string'\n                      }],\n                      type: 'object'\n                    }, {\n                      description: 'A path to a file.\\n',\n                      meta: [],\n                      name: 'File path',\n                      properties: [{\n                        description: _jsxs(_components.p, {\n                          children: [\"The type of the file path. Always\", ' ', _jsx(_components.code, {\n                            children: \"file_path\"\n                          }), \".\"]\n                        }),\n                        meta: [{\n                          name: 'required',\n                          value: 'true'\n                        }, {\n                          name: 'enum-type',\n                          value: 'string'\n                        }],\n                        name: 'type',\n                        properties: [{\n                          description: '',\n                          meta: [],\n                          name: 'file_path',\n                          type: 'string'\n                        }],\n                        type: '$$enum'\n                      }, {\n                        description: 'The ID of the file.\\n',\n                        meta: [{\n                          name: 'required',\n                          value: 'true'\n                        }],\n                        name: 'file_id',\n                        type: 'string'\n                      }, {\n                        description: 'The index of the file in the list of files.\\n',\n                        meta: [{\n                          name: 'required',\n                          value: 'true'\n                        }],\n                        name: 'index',\n                        type: 'integer'\n                      }],\n                      type: 'object'\n                    }],\n                    type: '$$array'\n                  }],\n                  type: 'object'\n                }, {\n                  description: 'A refusal from the model.',\n                  meta: [],\n                  name: 'Refusal',\n                  properties: [{\n                    description: _jsxs(_components.p, {\n                      children: [\"The type of the refusal. Always\", ' ', _jsx(_components.code, {\n                        children: \"refusal\"\n                      }), \".\"]\n                    }),\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }, {\n                      name: 'defaults',\n                      value: 'refusal'\n                    }, {\n                      name: 'enum-type',\n                      value: 'string'\n                    }],\n                    name: 'type',\n                    properties: [{\n                      description: '',\n                      meta: [],\n                      name: 'refusal',\n                      type: 'string'\n                    }],\n                    type: '$$enum'\n                  }, {\n                    description: 'The refusal explanationfrom the model.',\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }],\n                    name: 'refusal',\n                    type: 'string'\n                  }],\n                  type: 'object'\n                }],\n                type: '$$array'\n              }, {\n                description: _jsxs(_components.p, {\n                  children: [\"The status of the message input. One of\", ' ', _jsx(_components.code, {\n                    children: \"in_progress\"\n                  }), \",\", ' ', _jsx(_components.code, {\n                    children: \"completed\"\n                  }), \", or\", ' ', _jsx(_components.code, {\n                    children: \"incomplete\"\n                  }), \". Populated when input items are returned via API.\"]\n                }),\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }, {\n                  name: 'enum-type',\n                  value: 'string'\n                }],\n                name: 'status',\n                properties: [{\n                  description: '',\n                  meta: [],\n                  name: 'in_progress',\n                  type: 'string'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'completed',\n                  type: 'string'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'incomplete',\n                  type: 'string'\n                }],\n                type: '$$enum'\n              }],\n              type: 'object'\n            }, {\n              description: _jsxs(_components.p, {\n                children: [\"The results of a file search tool call. See the\", ' ', _jsx(_components.a, {\n                  href: \"/docs/guides/tools-file-search\",\n                  children: \"file search guide\"\n                }), ' ', \"for more information.\"]\n              }),\n              meta: [],\n              name: 'File search tool call',\n              properties: [{\n                description: 'The unique ID of the file search tool call.\\n',\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }],\n                name: 'id',\n                type: 'string'\n              }, {\n                description: _jsxs(_components.p, {\n                  children: [\"The type of the file search tool call. Always\", ' ', _jsx(_components.code, {\n                    children: \"file_search_call\"\n                  }), \".\"]\n                }),\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }, {\n                  name: 'enum-type',\n                  value: 'string'\n                }],\n                name: 'type',\n                properties: [{\n                  description: '',\n                  meta: [],\n                  name: 'file_search_call',\n                  type: 'string'\n                }],\n                type: '$$enum'\n              }, {\n                description: _jsxs(_components.p, {\n                  children: [\"The status of the file search tool call. One of\", ' ', _jsx(_components.code, {\n                    children: \"in_progress\"\n                  }), \",\", ' ', _jsx(_components.code, {\n                    children: \"searching\"\n                  }), \",\", ' ', _jsx(_components.code, {\n                    children: \"incomplete\"\n                  }), ' ', \"or\", ' ', _jsx(_components.code, {\n                    children: \"failed\"\n                  }), \",\"]\n                }),\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }, {\n                  name: 'enum-type',\n                  value: 'string'\n                }],\n                name: 'status',\n                properties: [{\n                  description: '',\n                  meta: [],\n                  name: 'in_progress',\n                  type: 'string'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'searching',\n                  type: 'string'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'completed',\n                  type: 'string'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'incomplete',\n                  type: 'string'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'failed',\n                  type: 'string'\n                }],\n                type: '$$enum'\n              }, {\n                description: 'The queries used to search for files.\\n',\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }],\n                name: 'queries',\n                properties: [{\n                  description: '',\n                  meta: [],\n                  name: 'items',\n                  type: 'string'\n                }],\n                type: '$$array'\n              }, {\n                description: 'The results of the file search tool call.\\n',\n                meta: [{\n                  name: 'nullable',\n                  value: 'true'\n                }],\n                name: 'results',\n                properties: [{\n                  description: '',\n                  meta: [],\n                  name: 'items',\n                  properties: [{\n                    description: 'The unique ID of the file.\\n',\n                    meta: [],\n                    name: 'file_id',\n                    type: 'string'\n                  }, {\n                    description: 'The text that was retrieved from the file.\\n',\n                    meta: [],\n                    name: 'text',\n                    type: 'string'\n                  }, {\n                    description: 'The name of the file.\\n',\n                    meta: [],\n                    name: 'filename',\n                    type: 'string'\n                  }, {\n                    description: 'Set of 16 key-value pairs that can be attached to an object. This can be \\nuseful for storing additional information about the object in a structured \\nformat, and querying for objects via API or the dashboard. Keys are strings \\nwith a maximum length of 64 characters. Values are strings with a maximum \\nlength of 512 characters, booleans, or numbers.\\n',\n                    meta: [{\n                      name: 'nullable',\n                      value: 'true'\n                    }],\n                    name: 'attributes',\n                    type: 'object'\n                  }, {\n                    description: 'The relevance score of the file - a value between 0 and 1.\\n',\n                    meta: [],\n                    name: 'score',\n                    type: 'number'\n                  }],\n                  type: 'object'\n                }],\n                type: '$$array'\n              }],\n              type: 'object'\n            }, {\n              description: _jsxs(_components.p, {\n                children: [\"A tool call to a computer use tool. See the\", ' ', _jsx(_components.a, {\n                  href: \"/docs/guides/tools-computer-use\",\n                  children: \"computer use guide\"\n                }), ' ', \"for more information.\"]\n              }),\n              meta: [],\n              name: 'Computer tool call',\n              properties: [{\n                description: _jsxs(_components.p, {\n                  children: [\"The type of the computer call. Always\", ' ', _jsx(_components.code, {\n                    children: \"computer_call\"\n                  }), \".\"]\n                }),\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }, {\n                  name: 'defaults',\n                  value: 'computer_call'\n                }, {\n                  name: 'enum-type',\n                  value: 'string'\n                }],\n                name: 'type',\n                properties: [{\n                  description: '',\n                  meta: [],\n                  name: 'computer_call',\n                  type: 'string'\n                }],\n                type: '$$enum'\n              }, {\n                description: 'The unique ID of the computer call.',\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }],\n                name: 'id',\n                type: 'string'\n              }, {\n                description: 'An identifier used when responding to the tool call with output.\\n',\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }],\n                name: 'call_id',\n                type: 'string'\n              }, {\n                description: '',\n                name: 'action',\n                properties: [{\n                  description: 'A click action.\\n',\n                  meta: [{\n                    name: 'required',\n                    value: 'true'\n                  }],\n                  name: 'Click',\n                  properties: [{\n                    description: _jsxs(_components.p, {\n                      children: [\"Specifies the event type. For a click action, this property is always set to\", ' ', _jsx(_components.code, {\n                        children: \"click\"\n                      }), \".\"]\n                    }),\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }, {\n                      name: 'defaults',\n                      value: 'click'\n                    }, {\n                      name: 'enum-type',\n                      value: 'string'\n                    }],\n                    name: 'type',\n                    properties: [{\n                      description: '',\n                      meta: [],\n                      name: 'click',\n                      type: 'string'\n                    }],\n                    type: '$$enum'\n                  }, {\n                    description: _jsxs(_components.p, {\n                      children: [\"Indicates which mouse button was pressed during the click. One of\", ' ', _jsx(_components.code, {\n                        children: \"left\"\n                      }), \",\", ' ', _jsx(_components.code, {\n                        children: \"right\"\n                      }), \",\", ' ', _jsx(_components.code, {\n                        children: \"wheel\"\n                      }), \",\", ' ', _jsx(_components.code, {\n                        children: \"back\"\n                      }), \", or\", ' ', _jsx(_components.code, {\n                        children: \"forward\"\n                      }), \".\"]\n                    }),\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }, {\n                      name: 'enum-type',\n                      value: 'string'\n                    }],\n                    name: 'button',\n                    properties: [{\n                      description: '',\n                      meta: [],\n                      name: 'left',\n                      type: 'string'\n                    }, {\n                      description: '',\n                      meta: [],\n                      name: 'right',\n                      type: 'string'\n                    }, {\n                      description: '',\n                      meta: [],\n                      name: 'wheel',\n                      type: 'string'\n                    }, {\n                      description: '',\n                      meta: [],\n                      name: 'back',\n                      type: 'string'\n                    }, {\n                      description: '',\n                      meta: [],\n                      name: 'forward',\n                      type: 'string'\n                    }],\n                    type: '$$enum'\n                  }, {\n                    description: 'The x-coordinate where the click occurred.\\n',\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }],\n                    name: 'x',\n                    type: 'integer'\n                  }, {\n                    description: 'The y-coordinate where the click occurred.\\n',\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }],\n                    name: 'y',\n                    type: 'integer'\n                  }],\n                  type: 'object'\n                }, {\n                  description: 'A double click action.\\n',\n                  meta: [{\n                    name: 'required',\n                    value: 'true'\n                  }],\n                  name: 'DoubleClick',\n                  properties: [{\n                    description: _jsxs(_components.p, {\n                      children: [\"Specifies the event type. For a double click action, this property is always set to\", ' ', _jsx(_components.code, {\n                        children: \"double_click\"\n                      }), \".\"]\n                    }),\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }, {\n                      name: 'defaults',\n                      value: 'double_click'\n                    }, {\n                      name: 'enum-type',\n                      value: 'string'\n                    }],\n                    name: 'type',\n                    properties: [{\n                      description: '',\n                      meta: [],\n                      name: 'double_click',\n                      type: 'string'\n                    }],\n                    type: '$$enum'\n                  }, {\n                    description: 'The x-coordinate where the double click occurred.\\n',\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }],\n                    name: 'x',\n                    type: 'integer'\n                  }, {\n                    description: 'The y-coordinate where the double click occurred.\\n',\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }],\n                    name: 'y',\n                    type: 'integer'\n                  }],\n                  type: 'object'\n                }, {\n                  description: 'A drag action.\\n',\n                  meta: [{\n                    name: 'required',\n                    value: 'true'\n                  }],\n                  name: 'Drag',\n                  properties: [{\n                    description: _jsxs(_components.p, {\n                      children: [\"Specifies the event type. For a drag action, this property is always set to\", ' ', _jsx(_components.code, {\n                        children: \"drag\"\n                      }), \".\"]\n                    }),\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }, {\n                      name: 'defaults',\n                      value: 'drag'\n                    }, {\n                      name: 'enum-type',\n                      value: 'string'\n                    }],\n                    name: 'type',\n                    properties: [{\n                      description: '',\n                      meta: [],\n                      name: 'drag',\n                      type: 'string'\n                    }],\n                    type: '$$enum'\n                  }, {\n                    description: _jsxs(_Fragment, {\n                      children: [_jsx(_components.p, {\n                        children: \"An array of coordinates representing the path of the drag action. Coordinates will appear as an array of objects, eg\"\n                      }), _jsx(_components.pre, {\n                        children: _jsxs(_components.code, {\n                          children: [\"[ ,  ]\", ' ']\n                        })\n                      })]\n                    }),\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }],\n                    name: 'path',\n                    properties: [{\n                      description: 'A series of x/y coordinate pairs in the drag path.\\n',\n                      meta: [],\n                      name: 'items',\n                      properties: [{\n                        description: 'The x-coordinate.\\n',\n                        meta: [{\n                          name: 'required',\n                          value: 'true'\n                        }],\n                        name: 'x',\n                        type: 'integer'\n                      }, {\n                        description: 'The y-coordinate.\\n',\n                        meta: [{\n                          name: 'required',\n                          value: 'true'\n                        }],\n                        name: 'y',\n                        type: 'integer'\n                      }],\n                      type: 'object'\n                    }],\n                    type: '$$array'\n                  }],\n                  type: 'object'\n                }, {\n                  description: 'A collection of keypresses the model would like to perform.\\n',\n                  meta: [{\n                    name: 'required',\n                    value: 'true'\n                  }],\n                  name: 'KeyPress',\n                  properties: [{\n                    description: _jsxs(_components.p, {\n                      children: [\"Specifies the event type. For a keypress action, this property is always set to\", ' ', _jsx(_components.code, {\n                        children: \"keypress\"\n                      }), \".\"]\n                    }),\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }, {\n                      name: 'defaults',\n                      value: 'keypress'\n                    }, {\n                      name: 'enum-type',\n                      value: 'string'\n                    }],\n                    name: 'type',\n                    properties: [{\n                      description: '',\n                      meta: [],\n                      name: 'keypress',\n                      type: 'string'\n                    }],\n                    type: '$$enum'\n                  }, {\n                    description: 'The combination of keys the model is requesting to be pressed. This is an\\narray of strings, each representing a key.\\n',\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }],\n                    name: 'keys',\n                    properties: [{\n                      description: 'One of the keys the model is requesting to be pressed.\\n',\n                      meta: [],\n                      name: 'items',\n                      type: 'string'\n                    }],\n                    type: '$$array'\n                  }],\n                  type: 'object'\n                }, {\n                  description: 'A mouse move action.\\n',\n                  meta: [{\n                    name: 'required',\n                    value: 'true'\n                  }],\n                  name: 'Move',\n                  properties: [{\n                    description: _jsxs(_components.p, {\n                      children: [\"Specifies the event type. For a move action, this property is always set to\", ' ', _jsx(_components.code, {\n                        children: \"move\"\n                      }), \".\"]\n                    }),\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }, {\n                      name: 'defaults',\n                      value: 'move'\n                    }, {\n                      name: 'enum-type',\n                      value: 'string'\n                    }],\n                    name: 'type',\n                    properties: [{\n                      description: '',\n                      meta: [],\n                      name: 'move',\n                      type: 'string'\n                    }],\n                    type: '$$enum'\n                  }, {\n                    description: 'The x-coordinate to move to.\\n',\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }],\n                    name: 'x',\n                    type: 'integer'\n                  }, {\n                    description: 'The y-coordinate to move to.\\n',\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }],\n                    name: 'y',\n                    type: 'integer'\n                  }],\n                  type: 'object'\n                }, {\n                  description: 'A screenshot action.\\n',\n                  meta: [{\n                    name: 'required',\n                    value: 'true'\n                  }],\n                  name: 'Screenshot',\n                  properties: [{\n                    description: _jsxs(_components.p, {\n                      children: [\"Specifies the event type. For a screenshot action, this property is always set to\", ' ', _jsx(_components.code, {\n                        children: \"screenshot\"\n                      }), \".\"]\n                    }),\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }, {\n                      name: 'defaults',\n                      value: 'screenshot'\n                    }, {\n                      name: 'enum-type',\n                      value: 'string'\n                    }],\n                    name: 'type',\n                    properties: [{\n                      description: '',\n                      meta: [],\n                      name: 'screenshot',\n                      type: 'string'\n                    }],\n                    type: '$$enum'\n                  }],\n                  type: 'object'\n                }, {\n                  description: 'A scroll action.\\n',\n                  meta: [{\n                    name: 'required',\n                    value: 'true'\n                  }],\n                  name: 'Scroll',\n                  properties: [{\n                    description: _jsxs(_components.p, {\n                      children: [\"Specifies the event type. For a scroll action, this property is always set to\", ' ', _jsx(_components.code, {\n                        children: \"scroll\"\n                      }), \".\"]\n                    }),\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }, {\n                      name: 'defaults',\n                      value: 'scroll'\n                    }, {\n                      name: 'enum-type',\n                      value: 'string'\n                    }],\n                    name: 'type',\n                    properties: [{\n                      description: '',\n                      meta: [],\n                      name: 'scroll',\n                      type: 'string'\n                    }],\n                    type: '$$enum'\n                  }, {\n                    description: 'The x-coordinate where the scroll occurred.\\n',\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }],\n                    name: 'x',\n                    type: 'integer'\n                  }, {\n                    description: 'The y-coordinate where the scroll occurred.\\n',\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }],\n                    name: 'y',\n                    type: 'integer'\n                  }, {\n                    description: 'The horizontal scroll distance.\\n',\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }],\n                    name: 'scroll_x',\n                    type: 'integer'\n                  }, {\n                    description: 'The vertical scroll distance.\\n',\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }],\n                    name: 'scroll_y',\n                    type: 'integer'\n                  }],\n                  type: 'object'\n                }, {\n                  description: 'An action to type in text.\\n',\n                  meta: [{\n                    name: 'required',\n                    value: 'true'\n                  }],\n                  name: 'Type',\n                  properties: [{\n                    description: _jsxs(_components.p, {\n                      children: [\"Specifies the event type. For a type action, this property is always set to\", ' ', _jsx(_components.code, {\n                        children: \"type\"\n                      }), \".\"]\n                    }),\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }, {\n                      name: 'defaults',\n                      value: 'type'\n                    }, {\n                      name: 'enum-type',\n                      value: 'string'\n                    }],\n                    name: 'type',\n                    properties: [{\n                      description: '',\n                      meta: [],\n                      name: 'type',\n                      type: 'string'\n                    }],\n                    type: '$$enum'\n                  }, {\n                    description: 'The text to type.\\n',\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }],\n                    name: 'text',\n                    type: 'string'\n                  }],\n                  type: 'object'\n                }, {\n                  description: 'A wait action.\\n',\n                  meta: [{\n                    name: 'required',\n                    value: 'true'\n                  }],\n                  name: 'Wait',\n                  properties: [{\n                    description: _jsxs(_components.p, {\n                      children: [\"Specifies the event type. For a wait action, this property is always set to\", ' ', _jsx(_components.code, {\n                        children: \"wait\"\n                      }), \".\"]\n                    }),\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }, {\n                      name: 'defaults',\n                      value: 'wait'\n                    }, {\n                      name: 'enum-type',\n                      value: 'string'\n                    }],\n                    name: 'type',\n                    properties: [{\n                      description: '',\n                      meta: [],\n                      name: 'wait',\n                      type: 'string'\n                    }],\n                    type: '$$enum'\n                  }],\n                  type: 'object'\n                }],\n                type: '$$xor'\n              }, {\n                description: 'The pending safety checks for the computer call.\\n',\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }],\n                name: 'pending_safety_checks',\n                properties: [{\n                  description: 'A pending safety check for the computer call.\\n',\n                  meta: [],\n                  name: 'items',\n                  properties: [{\n                    description: 'The ID of the pending safety check.',\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }],\n                    name: 'id',\n                    type: 'string'\n                  }, {\n                    description: 'The type of the pending safety check.',\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }],\n                    name: 'code',\n                    type: 'string'\n                  }, {\n                    description: 'Details about the pending safety check.',\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }],\n                    name: 'message',\n                    type: 'string'\n                  }],\n                  type: 'object'\n                }],\n                type: '$$array'\n              }, {\n                description: _jsxs(_components.p, {\n                  children: [\"The status of the item. One of\", ' ', _jsx(_components.code, {\n                    children: \"in_progress\"\n                  }), \",\", ' ', _jsx(_components.code, {\n                    children: \"completed\"\n                  }), \", or\", ' ', _jsx(_components.code, {\n                    children: \"incomplete\"\n                  }), \". Populated when items are returned via API.\"]\n                }),\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }, {\n                  name: 'enum-type',\n                  value: 'string'\n                }],\n                name: 'status',\n                properties: [{\n                  description: '',\n                  meta: [],\n                  name: 'in_progress',\n                  type: 'string'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'completed',\n                  type: 'string'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'incomplete',\n                  type: 'string'\n                }],\n                type: '$$enum'\n              }],\n              type: 'object'\n            }, {\n              description: 'The output of a computer tool call.',\n              meta: [],\n              name: 'Computer tool call output',\n              properties: [{\n                description: '',\n                name: 'id',\n                properties: [{\n                  description: 'The ID of the computer tool call output.',\n                  meta: [],\n                  name: 'id',\n                  type: 'string'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'id',\n                  type: 'null'\n                }],\n                type: '$$union'\n              }, {\n                description: 'The ID of the computer tool call that produced the output.',\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }],\n                name: 'call_id',\n                type: 'string'\n              }, {\n                description: _jsxs(_components.p, {\n                  children: [\"The type of the computer tool call output. Always\", ' ', _jsx(_components.code, {\n                    children: \"computer_call_output\"\n                  }), \".\"]\n                }),\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }, {\n                  name: 'defaults',\n                  value: 'computer_call_output'\n                }, {\n                  name: 'enum-type',\n                  value: 'string'\n                }],\n                name: 'type',\n                properties: [{\n                  description: '',\n                  meta: [],\n                  name: 'computer_call_output',\n                  type: 'string'\n                }],\n                type: '$$enum'\n              }, {\n                description: 'A computer screenshot image used with the computer use tool.\\n',\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }],\n                name: 'output',\n                properties: [{\n                  description: _jsxs(_components.p, {\n                    children: [\"Specifies the event type. For a computer screenshot, this property is always set to\", ' ', _jsx(_components.code, {\n                      children: \"computer_screenshot\"\n                    }), \".\"]\n                  }),\n                  meta: [{\n                    name: 'required',\n                    value: 'true'\n                  }, {\n                    name: 'defaults',\n                    value: 'computer_screenshot'\n                  }, {\n                    name: 'enum-type',\n                    value: 'string'\n                  }],\n                  name: 'type',\n                  properties: [{\n                    description: '',\n                    meta: [],\n                    name: 'computer_screenshot',\n                    type: 'string'\n                  }],\n                  type: '$$enum'\n                }, {\n                  description: 'The URL of the screenshot image.',\n                  meta: [],\n                  name: 'image_url',\n                  type: 'string'\n                }, {\n                  description: 'The identifier of an uploaded file that contains the screenshot.',\n                  meta: [],\n                  name: 'file_id',\n                  type: 'string'\n                }],\n                type: 'object'\n              }, {\n                description: '',\n                name: 'acknowledged_safety_checks',\n                properties: [{\n                  description: 'The safety checks reported by the API that have been acknowledged by the developer.',\n                  meta: [],\n                  name: 'acknowledged_safety_checks',\n                  properties: [{\n                    description: 'A pending safety check for the computer call.',\n                    meta: [],\n                    name: 'items',\n                    properties: [{\n                      description: 'The ID of the pending safety check.',\n                      meta: [{\n                        name: 'required',\n                        value: 'true'\n                      }],\n                      name: 'id',\n                      type: 'string'\n                    }, {\n                      description: '',\n                      name: 'code',\n                      properties: [{\n                        description: 'The type of the pending safety check.',\n                        meta: [],\n                        name: 'code',\n                        type: 'string'\n                      }, {\n                        description: '',\n                        meta: [],\n                        name: 'code',\n                        type: 'null'\n                      }],\n                      type: '$$union'\n                    }, {\n                      description: '',\n                      name: 'message',\n                      properties: [{\n                        description: 'Details about the pending safety check.',\n                        meta: [],\n                        name: 'message',\n                        type: 'string'\n                      }, {\n                        description: '',\n                        meta: [],\n                        name: 'message',\n                        type: 'null'\n                      }],\n                      type: '$$union'\n                    }],\n                    type: 'object'\n                  }],\n                  type: '$$array'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'acknowledged_safety_checks',\n                  type: 'null'\n                }],\n                type: '$$union'\n              }, {\n                description: '',\n                name: 'status',\n                properties: [{\n                  description: _jsxs(_components.p, {\n                    children: [\"The status of the message input. One of\", ' ', _jsx(_components.code, {\n                      children: \"in_progress\"\n                    }), \",\", ' ', _jsx(_components.code, {\n                      children: \"completed\"\n                    }), \", or\", ' ', _jsx(_components.code, {\n                      children: \"incomplete\"\n                    }), \". Populated when input items are returned via API.\"]\n                  }),\n                  meta: [{\n                    name: 'enum-type',\n                    value: 'string'\n                  }],\n                  name: 'status',\n                  properties: [{\n                    description: '',\n                    meta: [],\n                    name: 'in_progress',\n                    type: 'string'\n                  }, {\n                    description: '',\n                    meta: [],\n                    name: 'completed',\n                    type: 'string'\n                  }, {\n                    description: '',\n                    meta: [],\n                    name: 'incomplete',\n                    type: 'string'\n                  }],\n                  type: '$$enum'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'status',\n                  type: 'null'\n                }],\n                type: '$$union'\n              }],\n              type: 'object'\n            }, {\n              description: _jsxs(_components.p, {\n                children: [\"The results of a web search tool call. See the\", ' ', _jsx(_components.a, {\n                  href: \"/docs/guides/tools-web-search\",\n                  children: \"web search guide\"\n                }), ' ', \"for more information.\"]\n              }),\n              meta: [],\n              name: 'Web search tool call',\n              properties: [{\n                description: 'The unique ID of the web search tool call.\\n',\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }],\n                name: 'id',\n                type: 'string'\n              }, {\n                description: _jsxs(_components.p, {\n                  children: [\"The type of the web search tool call. Always\", ' ', _jsx(_components.code, {\n                    children: \"web_search_call\"\n                  }), \".\"]\n                }),\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }, {\n                  name: 'enum-type',\n                  value: 'string'\n                }],\n                name: 'type',\n                properties: [{\n                  description: '',\n                  meta: [],\n                  name: 'web_search_call',\n                  type: 'string'\n                }],\n                type: '$$enum'\n              }, {\n                description: 'The status of the web search tool call.\\n',\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }, {\n                  name: 'enum-type',\n                  value: 'string'\n                }],\n                name: 'status',\n                properties: [{\n                  description: '',\n                  meta: [],\n                  name: 'in_progress',\n                  type: 'string'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'searching',\n                  type: 'string'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'completed',\n                  type: 'string'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'failed',\n                  type: 'string'\n                }],\n                type: '$$enum'\n              }],\n              type: 'object'\n            }, {\n              description: _jsxs(_components.p, {\n                children: [\"A tool call to run a function. See the\", ' ', _jsx(_components.a, {\n                  href: \"/docs/guides/function-calling\",\n                  children: \"function calling guide\"\n                }), ' ', \"for more information.\"]\n              }),\n              meta: [],\n              name: 'Function tool call',\n              properties: [{\n                description: 'The unique ID of the function tool call.\\n',\n                meta: [],\n                name: 'id',\n                type: 'string'\n              }, {\n                description: _jsxs(_components.p, {\n                  children: [\"The type of the function tool call. Always\", ' ', _jsx(_components.code, {\n                    children: \"function_call\"\n                  }), \".\"]\n                }),\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }, {\n                  name: 'enum-type',\n                  value: 'string'\n                }],\n                name: 'type',\n                properties: [{\n                  description: '',\n                  meta: [],\n                  name: 'function_call',\n                  type: 'string'\n                }],\n                type: '$$enum'\n              }, {\n                description: 'The unique ID of the function tool call generated by the model.\\n',\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }],\n                name: 'call_id',\n                type: 'string'\n              }, {\n                description: 'The name of the function to run.\\n',\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }],\n                name: 'name',\n                type: 'string'\n              }, {\n                description: 'A JSON string of the arguments to pass to the function.\\n',\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }],\n                name: 'arguments',\n                type: 'string'\n              }, {\n                description: _jsxs(_components.p, {\n                  children: [\"The status of the item. One of\", ' ', _jsx(_components.code, {\n                    children: \"in_progress\"\n                  }), \",\", ' ', _jsx(_components.code, {\n                    children: \"completed\"\n                  }), \", or\", ' ', _jsx(_components.code, {\n                    children: \"incomplete\"\n                  }), \". Populated when items are returned via API.\"]\n                }),\n                meta: [{\n                  name: 'enum-type',\n                  value: 'string'\n                }],\n                name: 'status',\n                properties: [{\n                  description: '',\n                  meta: [],\n                  name: 'in_progress',\n                  type: 'string'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'completed',\n                  type: 'string'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'incomplete',\n                  type: 'string'\n                }],\n                type: '$$enum'\n              }],\n              type: 'object'\n            }, {\n              description: 'The output of a function tool call.',\n              meta: [],\n              name: 'Function tool call output',\n              properties: [{\n                description: '',\n                name: 'id',\n                properties: [{\n                  description: 'The unique ID of the function tool call output. Populated when this item is returned via API.',\n                  meta: [],\n                  name: 'id',\n                  type: 'string'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'id',\n                  type: 'null'\n                }],\n                type: '$$union'\n              }, {\n                description: 'The unique ID of the function tool call generated by the model.',\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }],\n                name: 'call_id',\n                type: 'string'\n              }, {\n                description: _jsxs(_components.p, {\n                  children: [\"The type of the function tool call output. Always\", ' ', _jsx(_components.code, {\n                    children: \"function_call_output\"\n                  }), \".\"]\n                }),\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }, {\n                  name: 'defaults',\n                  value: 'function_call_output'\n                }, {\n                  name: 'enum-type',\n                  value: 'string'\n                }],\n                name: 'type',\n                properties: [{\n                  description: '',\n                  meta: [],\n                  name: 'function_call_output',\n                  type: 'string'\n                }],\n                type: '$$enum'\n              }, {\n                description: 'A JSON string of the output of the function tool call.',\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }],\n                name: 'output',\n                type: 'string'\n              }, {\n                description: '',\n                name: 'status',\n                properties: [{\n                  description: _jsxs(_components.p, {\n                    children: [\"The status of the item. One of\", ' ', _jsx(_components.code, {\n                      children: \"in_progress\"\n                    }), \",\", ' ', _jsx(_components.code, {\n                      children: \"completed\"\n                    }), \", or\", ' ', _jsx(_components.code, {\n                      children: \"incomplete\"\n                    }), \". Populated when items are returned via API.\"]\n                  }),\n                  meta: [{\n                    name: 'enum-type',\n                    value: 'string'\n                  }],\n                  name: 'status',\n                  properties: [{\n                    description: '',\n                    meta: [],\n                    name: 'in_progress',\n                    type: 'string'\n                  }, {\n                    description: '',\n                    meta: [],\n                    name: 'completed',\n                    type: 'string'\n                  }, {\n                    description: '',\n                    meta: [],\n                    name: 'incomplete',\n                    type: 'string'\n                  }],\n                  type: '$$enum'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'status',\n                  type: 'null'\n                }],\n                type: '$$union'\n              }],\n              type: 'object'\n            }, {\n              description: 'A description of the chain of thought used by a reasoning model while generating\\na response.\\n',\n              meta: [],\n              name: 'Reasoning',\n              properties: [{\n                description: _jsxs(_components.p, {\n                  children: [\"The type of the object. Always\", ' ', _jsx(_components.code, {\n                    children: \"reasoning\"\n                  }), \".\"]\n                }),\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }, {\n                  name: 'enum-type',\n                  value: 'string'\n                }],\n                name: 'type',\n                properties: [{\n                  description: '',\n                  meta: [],\n                  name: 'reasoning',\n                  type: 'string'\n                }],\n                type: '$$enum'\n              }, {\n                description: 'The unique identifier of the reasoning content.\\n',\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }],\n                name: 'id',\n                type: 'string'\n              }, {\n                description: 'Reasoning text contents.\\n',\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }],\n                name: 'summary',\n                properties: [{\n                  description: '',\n                  meta: [],\n                  name: 'items',\n                  properties: [{\n                    description: _jsxs(_components.p, {\n                      children: [\"The type of the object. Always\", ' ', _jsx(_components.code, {\n                        children: \"summary_text\"\n                      }), \".\"]\n                    }),\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }, {\n                      name: 'enum-type',\n                      value: 'string'\n                    }],\n                    name: 'type',\n                    properties: [{\n                      description: '',\n                      meta: [],\n                      name: 'summary_text',\n                      type: 'string'\n                    }],\n                    type: '$$enum'\n                  }, {\n                    description: 'A short summary of the reasoning used by the model when generating\\nthe response.\\n',\n                    meta: [{\n                      name: 'required',\n                      value: 'true'\n                    }],\n                    name: 'text',\n                    type: 'string'\n                  }],\n                  type: 'object'\n                }],\n                type: '$$array'\n              }, {\n                description: _jsxs(_components.p, {\n                  children: [\"The status of the item. One of\", ' ', _jsx(_components.code, {\n                    children: \"in_progress\"\n                  }), \",\", ' ', _jsx(_components.code, {\n                    children: \"completed\"\n                  }), \", or\", ' ', _jsx(_components.code, {\n                    children: \"incomplete\"\n                  }), \". Populated when items are returned via API.\"]\n                }),\n                meta: [{\n                  name: 'enum-type',\n                  value: 'string'\n                }],\n                name: 'status',\n                properties: [{\n                  description: '',\n                  meta: [],\n                  name: 'in_progress',\n                  type: 'string'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'completed',\n                  type: 'string'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'incomplete',\n                  type: 'string'\n                }],\n                type: '$$enum'\n              }],\n              type: 'object'\n            }, {\n              description: 'An internal identifier for an item to reference.',\n              meta: [],\n              name: 'Item reference',\n              properties: [{\n                description: '',\n                name: 'type',\n                properties: [{\n                  description: _jsxs(_components.p, {\n                    children: [\"The type of item to reference. Always\", ' ', _jsx(_components.code, {\n                      children: \"item_reference\"\n                    }), \".\"]\n                  }),\n                  meta: [{\n                    name: 'defaults',\n                    value: 'item_reference'\n                  }, {\n                    name: 'enum-type',\n                    value: 'string'\n                  }],\n                  name: 'type',\n                  properties: [{\n                    description: '',\n                    meta: [],\n                    name: 'item_reference',\n                    type: 'string'\n                  }],\n                  type: '$$enum'\n                }, {\n                  description: '',\n                  meta: [],\n                  name: 'type',\n                  type: 'null'\n                }],\n                type: '$$union'\n              }, {\n                description: 'The ID of the item to reference.',\n                meta: [{\n                  name: 'required',\n                  value: 'true'\n                }],\n                name: 'id',\n                type: 'string'\n              }],\n              type: 'object'\n            }],\n            type: '$$array'\n          }],\n          type: '$$xor'\n        }, {\n          description: _jsxs(_Fragment, {\n            children: [_jsx(_components.p, {\n              children: \"Specify additional output data to include in the model response. Currently supported values are:\"\n            }), _jsxs(_components.ul, {\n              children: [_jsxs(_components.li, {\n                children: [_jsx(_components.code, {\n                  children: \"file_search_call.results\"\n                }), \": Include the search results of the file search tool call.\"]\n              }), _jsxs(_components.li, {\n                children: [_jsx(_components.code, {\n                  children: \"message.input_image.image_url\"\n                }), \": Include image urls from the input message.\"]\n              }), _jsxs(_components.li, {\n                children: [_jsx(_components.code, {\n                  children: \"computer_call_output.output.image_url\"\n                }), \": Include image urls from the computer call output.\"]\n              })]\n            })]\n          }),\n          meta: [{\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'include',\n          properties: [{\n            description: _jsxs(_Fragment, {\n              children: [_jsx(_components.p, {\n                children: \"Specify additional output data to include in the model response. Currently supported values are:\"\n              }), _jsxs(_components.ul, {\n                children: [_jsxs(_components.li, {\n                  children: [_jsx(_components.code, {\n                    children: \"file_search_call.results\"\n                  }), \": Include the search results of the file search tool call.\"]\n                }), _jsxs(_components.li, {\n                  children: [_jsx(_components.code, {\n                    children: \"message.input_image.image_url\"\n                  }), \": Include image urls from the input message.\"]\n                }), _jsxs(_components.li, {\n                  children: [_jsx(_components.code, {\n                    children: \"computer_call_output.output.image_url\"\n                  }), \": Include image urls from the computer call output.\"]\n                })]\n              })]\n            }),\n            meta: [{\n              name: 'enum-type',\n              value: 'string'\n            }],\n            name: 'items',\n            properties: [{\n              description: '',\n              meta: [],\n              name: 'file_search_call.results',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'message.input_image.image_url',\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'computer_call_output.output.image_url',\n              type: 'string'\n            }],\n            type: '$$enum'\n          }],\n          type: '$$array'\n        }, {\n          description: 'Whether to allow the model to run tool calls in parallel.\\n',\n          meta: [{\n            name: 'defaults',\n            value: true\n          }, {\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'parallel_tool_calls',\n          type: 'boolean'\n        }, {\n          description: 'Whether to store the generated model response for later retrieval via\\nAPI.\\n',\n          meta: [{\n            name: 'defaults',\n            value: true\n          }, {\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'store',\n          type: 'boolean'\n        }, {\n          description: _jsxs(_components.p, {\n            children: [\"If set to true, the model response data will be streamed to the client as it is generated using\", ' ', _jsx(_components.a, {\n              href: \"https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format\",\n              children: \"server-sent events\"\n            }), \". See the\", ' ', _jsx(_components.a, {\n              href: \"/docs/api-reference/responses-streaming\",\n              children: \"Streaming section below\"\n            }), ' ', \"for more information.\"]\n          }),\n          meta: [{\n            name: 'defaults',\n            value: false\n          }, {\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'stream',\n          type: 'boolean'\n        }],\n        rootProperty: undefined,\n        symbolDef: undefined,\n        title: 'Request body'\n      }, {\n        description: _jsxs(_components.p, {\n          children: [\"Returns a\", ' ', _jsx(_components.a, {\n            href: \"/docs/api-reference/responses/object\",\n            children: \"Response\"\n          }), ' ', \"object.\"]\n        }),\n        properties: [],\n        title: 'Response'\n      }],\n      description: _jsxs(_components.p, {\n        children: [\"Creates a model response. Provide\", ' ', _jsx(_components.a, {\n          href: \"/docs/guides/text\",\n          children: \"text\"\n        }), ' ', \"or\", ' ', _jsx(_components.a, {\n          href: \"/docs/guides/images\",\n          children: \"image\"\n        }), ' ', \"inputs to generate\", ' ', _jsx(_components.a, {\n          href: \"/docs/guides/text\",\n          children: \"text\"\n        }), ' ', \"or\", ' ', _jsx(_components.a, {\n          href: \"/docs/guides/structured-outputs\",\n          children: \"JSON\"\n        }), ' ', \"outputs. Have the model call your own\", ' ', _jsx(_components.a, {\n          href: \"/docs/guides/function-calling\",\n          children: \"custom code\"\n        }), ' ', \"or use built-in\", ' ', _jsx(_components.a, {\n          href: \"/docs/guides/tools\",\n          children: \"tools\"\n        }), ' ', \"like\", ' ', _jsx(_components.a, {\n          href: \"/docs/guides/tools-web-search\",\n          children: \"web search\"\n        }), ' ', \"or\", ' ', _jsx(_components.a, {\n          href: \"/docs/guides/tools-file-search\",\n          children: \"file search\"\n        }), ' ', \"to use your own data as input for the model's response.\"]\n      }),\n      examples: {\n        groups: [{\n          description: 'Example request',\n          examples: [{\n            codeblock: {\n              tabs: [{\n                code: 'curl https://api.openai.com/v1/responses \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"gpt-4.1\",\\n    \"input\": \"Tell me a three sentence bedtime story about a unicorn.\"\\n  }\\'\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'curl https://api.openai.com/v1/responses \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"gpt-4.1\",\\n    \"input\": \"Tell me a three sentence bedtime story about a unicorn.\"\\n  }\\'\\n',\n                  lang: 'shellscript',\n                  meta: 'curl',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['curl', '#DCDCAA'], ' ', ['https://api.openai.com/v1/responses', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-H \"Content-Type: application/json\"', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-H \"Authorization: Bearer', '#CE9178'], ' ', ['$OPENAI_API_KEY', '#9CDCFE'], ['\"', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-d \\'{', '#CE9178'], '\\n    ', ['\"model\": \"gpt-4.1\",', '#CE9178'], '\\n    ', ['\"input\": \"Tell me a three sentence bedtime story about a unicorn.\"', '#CE9178'], '\\n  ', ['}\\'', '#CE9178'], '\\n'],\n                  value: 'curl https://api.openai.com/v1/responses \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"gpt-4.1\",\\n    \"input\": \"Tell me a three sentence bedtime story about a unicorn.\"\\n  }\\'\\n'\n                },\n                language: 'bash',\n                title: 'curl'\n              }, {\n                code: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nconst response = await openai.responses.create({\\n    model: \"gpt-4.1\",\\n    input: \"Tell me a three sentence bedtime story about a unicorn.\"\\n});\\n\\nconsole.log(response);\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nconst response = await openai.responses.create({\\n    model: \"gpt-4.1\",\\n    input: \"Tell me a three sentence bedtime story about a unicorn.\"\\n});\\n\\nconsole.log(response);\\n',\n                  lang: 'javascript',\n                  meta: 'javascript',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['import', '#C586C0'], ' ', ['OpenAI', '#9CDCFE'], ' ', ['from', '#C586C0'], ' ', ['\"openai\"', '#CE9178'], [';', '#D4D4D4'], '\\n\\n', ['const', '#569CD6'], ' ', ['openai', '#4FC1FF'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ' ', ['OpenAI', '#DCDCAA'], ['();', '#D4D4D4'], '\\n\\n', ['const', '#569CD6'], ' ', ['response', '#4FC1FF'], ' ', ['=', '#D4D4D4'], ' ', ['await', '#C586C0'], ' ', ['openai', '#9CDCFE'], ['.', '#D4D4D4'], ['responses', '#9CDCFE'], ['.', '#D4D4D4'], ['create', '#DCDCAA'], ['({', '#D4D4D4'], '\\n    ', ['model:', '#9CDCFE'], ' ', ['\"gpt-4.1\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['input:', '#9CDCFE'], ' ', ['\"Tell me a three sentence bedtime story about a unicorn.\"', '#CE9178'], '\\n', ['});', '#D4D4D4'], '\\n\\n', ['console', '#9CDCFE'], ['.', '#D4D4D4'], ['log', '#DCDCAA'], ['(', '#D4D4D4'], ['response', '#9CDCFE'], [');', '#D4D4D4'], '\\n'],\n                  value: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nconst response = await openai.responses.create({\\n    model: \"gpt-4.1\",\\n    input: \"Tell me a three sentence bedtime story about a unicorn.\"\\n});\\n\\nconsole.log(response);\\n'\n                },\n                language: 'javascript',\n                title: 'javascript'\n              }, {\n                code: 'from openai import OpenAI\\n\\nclient = OpenAI()\\n\\nresponse = client.responses.create(\\n  model=\"gpt-4.1\",\\n  input=\"Tell me a three sentence bedtime story about a unicorn.\"\\n)\\n\\nprint(response)\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'from openai import OpenAI\\n\\nclient = OpenAI()\\n\\nresponse = client.responses.create(\\n  model=\"gpt-4.1\",\\n  input=\"Tell me a three sentence bedtime story about a unicorn.\"\\n)\\n\\nprint(response)\\n',\n                  lang: 'python',\n                  meta: 'python',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['from', '#C586C0'], ' ', ['openai', '#D4D4D4'], ' ', ['import', '#C586C0'], ' ', ['OpenAI', '#D4D4D4'], '\\n\\n', ['client = OpenAI()', '#D4D4D4'], '\\n\\n', ['response = client.responses.create(', '#D4D4D4'], '\\n  ', ['model', '#9CDCFE'], ['=', '#D4D4D4'], ['\"gpt-4.1\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['input', '#9CDCFE'], ['=', '#D4D4D4'], ['\"Tell me a three sentence bedtime story about a unicorn.\"', '#CE9178'], '\\n', [')', '#D4D4D4'], '\\n\\n', ['print', '#DCDCAA'], ['(response)', '#D4D4D4'], '\\n'],\n                  value: 'from openai import OpenAI\\n\\nclient = OpenAI()\\n\\nresponse = client.responses.create(\\n  model=\"gpt-4.1\",\\n  input=\"Tell me a three sentence bedtime story about a unicorn.\"\\n)\\n\\nprint(response)\\n'\n                },\n                language: 'python',\n                title: 'python'\n              }, {\n                code: 'using System;\\nusing OpenAI.Responses;\\n\\nOpenAIResponseClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nOpenAIResponse response = client.CreateResponse(\"Tell me a three sentence bedtime story about a unicorn.\");\\n\\nConsole.WriteLine(response.GetOutputText());\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'using System;\\nusing OpenAI.Responses;\\n\\nOpenAIResponseClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nOpenAIResponse response = client.CreateResponse(\"Tell me a three sentence bedtime story about a unicorn.\");\\n\\nConsole.WriteLine(response.GetOutputText());\\n',\n                  lang: 'csharp',\n                  meta: 'csharp',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['using', '#569CD6'], ' ', ['System', '#4EC9B0'], [';', '#D4D4D4'], '\\n', ['using', '#569CD6'], ' ', ['OpenAI', '#4EC9B0'], ['.', '#D4D4D4'], ['Responses', '#4EC9B0'], [';', '#D4D4D4'], '\\n\\n', ['OpenAIResponseClient', '#4EC9B0'], ' ', ['client', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ['(', '#D4D4D4'], '\\n    ', ['model', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"gpt-4.1\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['apiKey', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['Environment', '#9CDCFE'], ['.', '#D4D4D4'], ['GetEnvironmentVariable', '#DCDCAA'], ['(', '#D4D4D4'], ['\"OPENAI_API_KEY\"', '#CE9178'], [')', '#D4D4D4'], '\\n', [');', '#D4D4D4'], '\\n\\n', ['OpenAIResponse', '#4EC9B0'], ' ', ['response', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['client', '#9CDCFE'], ['.', '#D4D4D4'], ['CreateResponse', '#DCDCAA'], ['(', '#D4D4D4'], ['\"Tell me a three sentence bedtime story about a unicorn.\"', '#CE9178'], [');', '#D4D4D4'], '\\n\\n', ['Console', '#9CDCFE'], ['.', '#D4D4D4'], ['WriteLine', '#DCDCAA'], ['(', '#D4D4D4'], ['response', '#9CDCFE'], ['.', '#D4D4D4'], ['GetOutputText', '#DCDCAA'], ['());', '#D4D4D4'], '\\n'],\n                  value: 'using System;\\nusing OpenAI.Responses;\\n\\nOpenAIResponseClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nOpenAIResponse response = client.CreateResponse(\"Tell me a three sentence bedtime story about a unicorn.\");\\n\\nConsole.WriteLine(response.GetOutputText());\\n'\n                },\n                language: 'csharp',\n                title: 'csharp'\n              }],\n              title: 'Text input'\n            },\n            description: 'Text input'\n          }, {\n            codeblock: {\n              tabs: [{\n                code: 'curl https://api.openai.com/v1/responses \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"gpt-4.1\",\\n    \"input\": [\\n      {\\n        \"role\": \"user\",\\n        \"content\": [\\n          {\"type\": \"input_text\", \"text\": \"what is in this image?\"},\\n          {\\n            \"type\": \"input_image\",\\n            \"image_url\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\"\\n          }\\n        ]\\n      }\\n    ]\\n  }\\'\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'curl https://api.openai.com/v1/responses \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"gpt-4.1\",\\n    \"input\": [\\n      {\\n        \"role\": \"user\",\\n        \"content\": [\\n          {\"type\": \"input_text\", \"text\": \"what is in this image?\"},\\n          {\\n            \"type\": \"input_image\",\\n            \"image_url\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\"\\n          }\\n        ]\\n      }\\n    ]\\n  }\\'\\n',\n                  lang: 'shellscript',\n                  meta: 'curl',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['curl', '#DCDCAA'], ' ', ['https://api.openai.com/v1/responses', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-H \"Content-Type: application/json\"', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-H \"Authorization: Bearer', '#CE9178'], ' ', ['$OPENAI_API_KEY', '#9CDCFE'], ['\"', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-d \\'{', '#CE9178'], '\\n    ', ['\"model\": \"gpt-4.1\",', '#CE9178'], '\\n    ', ['\"input\": [', '#CE9178'], '\\n      ', ['{', '#CE9178'], '\\n        ', ['\"role\": \"user\",', '#CE9178'], '\\n        ', ['\"content\": [', '#CE9178'], '\\n          ', ['{\"type\": \"input_text\", \"text\": \"what is in this image?\"},', '#CE9178'], '\\n          ', ['{', '#CE9178'], '\\n            ', ['\"type\": \"input_image\",', '#CE9178'], '\\n            ', ['\"image_url\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\"', '#CE9178'], '\\n          ', ['}', '#CE9178'], '\\n        ', [']', '#CE9178'], '\\n      ', ['}', '#CE9178'], '\\n    ', [']', '#CE9178'], '\\n  ', ['}\\'', '#CE9178'], '\\n'],\n                  value: 'curl https://api.openai.com/v1/responses \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"gpt-4.1\",\\n    \"input\": [\\n      {\\n        \"role\": \"user\",\\n        \"content\": [\\n          {\"type\": \"input_text\", \"text\": \"what is in this image?\"},\\n          {\\n            \"type\": \"input_image\",\\n            \"image_url\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\"\\n          }\\n        ]\\n      }\\n    ]\\n  }\\'\\n'\n                },\n                language: 'bash',\n                title: 'curl'\n              }, {\n                code: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nconst response = await openai.responses.create({\\n    model: \"gpt-4.1\",\\n    input: [\\n        {\\n            role: \"user\",\\n            content: [\\n                { type: \"input_text\", text: \"what is in this image?\" },\\n                {\\n                    type: \"input_image\",\\n                    image_url:\\n                        \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\",\\n                },\\n            ],\\n        },\\n    ],\\n});\\n\\nconsole.log(response);\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nconst response = await openai.responses.create({\\n    model: \"gpt-4.1\",\\n    input: [\\n        {\\n            role: \"user\",\\n            content: [\\n                { type: \"input_text\", text: \"what is in this image?\" },\\n                {\\n                    type: \"input_image\",\\n                    image_url:\\n                        \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\",\\n                },\\n            ],\\n        },\\n    ],\\n});\\n\\nconsole.log(response);\\n',\n                  lang: 'javascript',\n                  meta: 'javascript',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['import', '#C586C0'], ' ', ['OpenAI', '#9CDCFE'], ' ', ['from', '#C586C0'], ' ', ['\"openai\"', '#CE9178'], [';', '#D4D4D4'], '\\n\\n', ['const', '#569CD6'], ' ', ['openai', '#4FC1FF'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ' ', ['OpenAI', '#DCDCAA'], ['();', '#D4D4D4'], '\\n\\n', ['const', '#569CD6'], ' ', ['response', '#4FC1FF'], ' ', ['=', '#D4D4D4'], ' ', ['await', '#C586C0'], ' ', ['openai', '#9CDCFE'], ['.', '#D4D4D4'], ['responses', '#9CDCFE'], ['.', '#D4D4D4'], ['create', '#DCDCAA'], ['({', '#D4D4D4'], '\\n    ', ['model:', '#9CDCFE'], ' ', ['\"gpt-4.1\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['input:', '#9CDCFE'], ' ', ['[', '#D4D4D4'], '\\n        ', ['{', '#D4D4D4'], '\\n            ', ['role:', '#9CDCFE'], ' ', ['\"user\"', '#CE9178'], [',', '#D4D4D4'], '\\n            ', ['content:', '#9CDCFE'], ' ', ['[', '#D4D4D4'], '\\n                ', ['{', '#D4D4D4'], ' ', ['type:', '#9CDCFE'], ' ', ['\"input_text\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['text:', '#9CDCFE'], ' ', ['\"what is in this image?\"', '#CE9178'], ' ', ['},', '#D4D4D4'], '\\n                ', ['{', '#D4D4D4'], '\\n                    ', ['type:', '#9CDCFE'], ' ', ['\"input_image\"', '#CE9178'], [',', '#D4D4D4'], '\\n                    ', ['image_url:', '#9CDCFE'], '\\n                        ', ['\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\"', '#CE9178'], [',', '#D4D4D4'], '\\n                ', ['},', '#D4D4D4'], '\\n            ', ['],', '#D4D4D4'], '\\n        ', ['},', '#D4D4D4'], '\\n    ', ['],', '#D4D4D4'], '\\n', ['});', '#D4D4D4'], '\\n\\n', ['console', '#9CDCFE'], ['.', '#D4D4D4'], ['log', '#DCDCAA'], ['(', '#D4D4D4'], ['response', '#9CDCFE'], [');', '#D4D4D4'], '\\n'],\n                  value: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nconst response = await openai.responses.create({\\n    model: \"gpt-4.1\",\\n    input: [\\n        {\\n            role: \"user\",\\n            content: [\\n                { type: \"input_text\", text: \"what is in this image?\" },\\n                {\\n                    type: \"input_image\",\\n                    image_url:\\n                        \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\",\\n                },\\n            ],\\n        },\\n    ],\\n});\\n\\nconsole.log(response);\\n'\n                },\n                language: 'javascript',\n                title: 'javascript'\n              }, {\n                code: 'from openai import OpenAI\\n\\nclient = OpenAI()\\n\\nresponse = client.responses.create(\\n    model=\"gpt-4.1\",\\n    input=[\\n        {\\n            \"role\": \"user\",\\n            \"content\": [\\n                { \"type\": \"input_text\", \"text\": \"what is in this image?\" },\\n                {\\n                    \"type\": \"input_image\",\\n                    \"image_url\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\"\\n                }\\n            ]\\n        }\\n    ]\\n)\\n\\nprint(response)\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'from openai import OpenAI\\n\\nclient = OpenAI()\\n\\nresponse = client.responses.create(\\n    model=\"gpt-4.1\",\\n    input=[\\n        {\\n            \"role\": \"user\",\\n            \"content\": [\\n                { \"type\": \"input_text\", \"text\": \"what is in this image?\" },\\n                {\\n                    \"type\": \"input_image\",\\n                    \"image_url\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\"\\n                }\\n            ]\\n        }\\n    ]\\n)\\n\\nprint(response)\\n',\n                  lang: 'python',\n                  meta: 'python',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['from', '#C586C0'], ' ', ['openai', '#D4D4D4'], ' ', ['import', '#C586C0'], ' ', ['OpenAI', '#D4D4D4'], '\\n\\n', ['client = OpenAI()', '#D4D4D4'], '\\n\\n', ['response = client.responses.create(', '#D4D4D4'], '\\n    ', ['model', '#9CDCFE'], ['=', '#D4D4D4'], ['\"gpt-4.1\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['input', '#9CDCFE'], ['=[', '#D4D4D4'], '\\n        ', ['{', '#D4D4D4'], '\\n            ', ['\"role\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"user\"', '#CE9178'], [',', '#D4D4D4'], '\\n            ', ['\"content\"', '#CE9178'], [': [', '#D4D4D4'], '\\n                ', ['{', '#D4D4D4'], ' ', ['\"type\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"input_text\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['\"text\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"what is in this image?\"', '#CE9178'], ' ', ['},', '#D4D4D4'], '\\n                ', ['{', '#D4D4D4'], '\\n                    ', ['\"type\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"input_image\"', '#CE9178'], [',', '#D4D4D4'], '\\n                    ', ['\"image_url\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\"', '#CE9178'], '\\n                ', ['}', '#D4D4D4'], '\\n            ', [']', '#D4D4D4'], '\\n        ', ['}', '#D4D4D4'], '\\n    ', [']', '#D4D4D4'], '\\n', [')', '#D4D4D4'], '\\n\\n', ['print', '#DCDCAA'], ['(response)', '#D4D4D4'], '\\n'],\n                  value: 'from openai import OpenAI\\n\\nclient = OpenAI()\\n\\nresponse = client.responses.create(\\n    model=\"gpt-4.1\",\\n    input=[\\n        {\\n            \"role\": \"user\",\\n            \"content\": [\\n                { \"type\": \"input_text\", \"text\": \"what is in this image?\" },\\n                {\\n                    \"type\": \"input_image\",\\n                    \"image_url\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\"\\n                }\\n            ]\\n        }\\n    ]\\n)\\n\\nprint(response)\\n'\n                },\n                language: 'python',\n                title: 'python'\n              }, {\n                code: 'using System;\\nusing System.Collections.Generic;\\n\\nusing OpenAI.Responses;\\n\\nOpenAIResponseClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nList<ResponseItem> inputItems =\\n[\\n    ResponseItem.CreateUserMessageItem(\\n        [\\n            ResponseContentPart.CreateInputTextPart(\"What is in this image?\"),\\n            ResponseContentPart.CreateInputImagePart(new Uri(\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\"))\\n        ]\\n    )\\n];\\n\\nOpenAIResponse response = client.CreateResponse(inputItems);\\n\\nConsole.WriteLine(response.GetOutputText());\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'using System;\\nusing System.Collections.Generic;\\n\\nusing OpenAI.Responses;\\n\\nOpenAIResponseClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nList<ResponseItem> inputItems =\\n[\\n    ResponseItem.CreateUserMessageItem(\\n        [\\n            ResponseContentPart.CreateInputTextPart(\"What is in this image?\"),\\n            ResponseContentPart.CreateInputImagePart(new Uri(\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\"))\\n        ]\\n    )\\n];\\n\\nOpenAIResponse response = client.CreateResponse(inputItems);\\n\\nConsole.WriteLine(response.GetOutputText());\\n',\n                  lang: 'csharp',\n                  meta: 'csharp',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['using', '#569CD6'], ' ', ['System', '#4EC9B0'], [';', '#D4D4D4'], '\\n', ['using', '#569CD6'], ' ', ['System', '#4EC9B0'], ['.', '#D4D4D4'], ['Collections', '#4EC9B0'], ['.', '#D4D4D4'], ['Generic', '#4EC9B0'], [';', '#D4D4D4'], '\\n\\n', ['using', '#569CD6'], ' ', ['OpenAI', '#4EC9B0'], ['.', '#D4D4D4'], ['Responses', '#4EC9B0'], [';', '#D4D4D4'], '\\n\\n', ['OpenAIResponseClient', '#4EC9B0'], ' ', ['client', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ['(', '#D4D4D4'], '\\n    ', ['model', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"gpt-4.1\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['apiKey', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['Environment', '#9CDCFE'], ['.', '#D4D4D4'], ['GetEnvironmentVariable', '#DCDCAA'], ['(', '#D4D4D4'], ['\"OPENAI_API_KEY\"', '#CE9178'], [')', '#D4D4D4'], '\\n', [');', '#D4D4D4'], '\\n\\n', ['List', '#4EC9B0'], ['<', '#D4D4D4'], ['ResponseItem', '#4EC9B0'], ['>', '#D4D4D4'], ' ', ['inputItems', '#9CDCFE'], ' ', ['=', '#D4D4D4'], '\\n', ['[', '#D4D4D4'], '\\n    ', ['ResponseItem', '#9CDCFE'], ['.', '#D4D4D4'], ['CreateUserMessageItem', '#DCDCAA'], ['(', '#D4D4D4'], '\\n        ', ['[', '#D4D4D4'], '\\n            ', ['ResponseContentPart', '#9CDCFE'], ['.', '#D4D4D4'], ['CreateInputTextPart', '#DCDCAA'], ['(', '#D4D4D4'], ['\"What is in this image?\"', '#CE9178'], ['),', '#D4D4D4'], '\\n            ', ['ResponseContentPart', '#9CDCFE'], ['.', '#D4D4D4'], ['CreateInputImagePart', '#DCDCAA'], ['(', '#D4D4D4'], ['new', '#569CD6'], ' ', ['Uri', '#4EC9B0'], ['(', '#D4D4D4'], ['\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\"', '#CE9178'], ['))', '#D4D4D4'], '\\n        ', [']', '#D4D4D4'], '\\n    ', [')', '#D4D4D4'], '\\n', ['];', '#D4D4D4'], '\\n\\n', ['OpenAIResponse', '#4EC9B0'], ' ', ['response', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['client', '#9CDCFE'], ['.', '#D4D4D4'], ['CreateResponse', '#DCDCAA'], ['(', '#D4D4D4'], ['inputItems', '#9CDCFE'], [');', '#D4D4D4'], '\\n\\n', ['Console', '#9CDCFE'], ['.', '#D4D4D4'], ['WriteLine', '#DCDCAA'], ['(', '#D4D4D4'], ['response', '#9CDCFE'], ['.', '#D4D4D4'], ['GetOutputText', '#DCDCAA'], ['());', '#D4D4D4'], '\\n'],\n                  value: 'using System;\\nusing System.Collections.Generic;\\n\\nusing OpenAI.Responses;\\n\\nOpenAIResponseClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nList<ResponseItem> inputItems =\\n[\\n    ResponseItem.CreateUserMessageItem(\\n        [\\n            ResponseContentPart.CreateInputTextPart(\"What is in this image?\"),\\n            ResponseContentPart.CreateInputImagePart(new Uri(\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\"))\\n        ]\\n    )\\n];\\n\\nOpenAIResponse response = client.CreateResponse(inputItems);\\n\\nConsole.WriteLine(response.GetOutputText());\\n'\n                },\n                language: 'csharp',\n                title: 'csharp'\n              }],\n              title: 'Image input'\n            },\n            description: 'Image input'\n          }, {\n            codeblock: {\n              tabs: [{\n                code: 'curl https://api.openai.com/v1/responses \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"gpt-4.1\",\\n    \"tools\": [{ \"type\": \"web_search_preview\" }],\\n    \"input\": \"What was a positive news story from today?\"\\n  }\\'\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'curl https://api.openai.com/v1/responses \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"gpt-4.1\",\\n    \"tools\": [{ \"type\": \"web_search_preview\" }],\\n    \"input\": \"What was a positive news story from today?\"\\n  }\\'\\n',\n                  lang: 'shellscript',\n                  meta: 'curl',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['curl', '#DCDCAA'], ' ', ['https://api.openai.com/v1/responses', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-H \"Content-Type: application/json\"', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-H \"Authorization: Bearer', '#CE9178'], ' ', ['$OPENAI_API_KEY', '#9CDCFE'], ['\"', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-d \\'{', '#CE9178'], '\\n    ', ['\"model\": \"gpt-4.1\",', '#CE9178'], '\\n    ', ['\"tools\": [{ \"type\": \"web_search_preview\" }],', '#CE9178'], '\\n    ', ['\"input\": \"What was a positive news story from today?\"', '#CE9178'], '\\n  ', ['}\\'', '#CE9178'], '\\n'],\n                  value: 'curl https://api.openai.com/v1/responses \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"gpt-4.1\",\\n    \"tools\": [{ \"type\": \"web_search_preview\" }],\\n    \"input\": \"What was a positive news story from today?\"\\n  }\\'\\n'\n                },\n                language: 'bash',\n                title: 'curl'\n              }, {\n                code: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nconst response = await openai.responses.create({\\n    model: \"gpt-4.1\",\\n    tools: [{ type: \"web_search_preview\" }],\\n    input: \"What was a positive news story from today?\",\\n});\\n\\nconsole.log(response);\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nconst response = await openai.responses.create({\\n    model: \"gpt-4.1\",\\n    tools: [{ type: \"web_search_preview\" }],\\n    input: \"What was a positive news story from today?\",\\n});\\n\\nconsole.log(response);\\n',\n                  lang: 'javascript',\n                  meta: 'javascript',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['import', '#C586C0'], ' ', ['OpenAI', '#9CDCFE'], ' ', ['from', '#C586C0'], ' ', ['\"openai\"', '#CE9178'], [';', '#D4D4D4'], '\\n\\n', ['const', '#569CD6'], ' ', ['openai', '#4FC1FF'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ' ', ['OpenAI', '#DCDCAA'], ['();', '#D4D4D4'], '\\n\\n', ['const', '#569CD6'], ' ', ['response', '#4FC1FF'], ' ', ['=', '#D4D4D4'], ' ', ['await', '#C586C0'], ' ', ['openai', '#9CDCFE'], ['.', '#D4D4D4'], ['responses', '#9CDCFE'], ['.', '#D4D4D4'], ['create', '#DCDCAA'], ['({', '#D4D4D4'], '\\n    ', ['model:', '#9CDCFE'], ' ', ['\"gpt-4.1\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['tools:', '#9CDCFE'], ' ', ['[{', '#D4D4D4'], ' ', ['type:', '#9CDCFE'], ' ', ['\"web_search_preview\"', '#CE9178'], ' ', ['}],', '#D4D4D4'], '\\n    ', ['input:', '#9CDCFE'], ' ', ['\"What was a positive news story from today?\"', '#CE9178'], [',', '#D4D4D4'], '\\n', ['});', '#D4D4D4'], '\\n\\n', ['console', '#9CDCFE'], ['.', '#D4D4D4'], ['log', '#DCDCAA'], ['(', '#D4D4D4'], ['response', '#9CDCFE'], [');', '#D4D4D4'], '\\n'],\n                  value: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nconst response = await openai.responses.create({\\n    model: \"gpt-4.1\",\\n    tools: [{ type: \"web_search_preview\" }],\\n    input: \"What was a positive news story from today?\",\\n});\\n\\nconsole.log(response);\\n'\n                },\n                language: 'javascript',\n                title: 'javascript'\n              }, {\n                code: 'from openai import OpenAI\\n\\nclient = OpenAI()\\n\\nresponse = client.responses.create(\\n    model=\"gpt-4.1\",\\n    tools=[{ \"type\": \"web_search_preview\" }],\\n    input=\"What was a positive news story from today?\",\\n)\\n\\nprint(response)\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'from openai import OpenAI\\n\\nclient = OpenAI()\\n\\nresponse = client.responses.create(\\n    model=\"gpt-4.1\",\\n    tools=[{ \"type\": \"web_search_preview\" }],\\n    input=\"What was a positive news story from today?\",\\n)\\n\\nprint(response)\\n',\n                  lang: 'python',\n                  meta: 'python',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['from', '#C586C0'], ' ', ['openai', '#D4D4D4'], ' ', ['import', '#C586C0'], ' ', ['OpenAI', '#D4D4D4'], '\\n\\n', ['client = OpenAI()', '#D4D4D4'], '\\n\\n', ['response = client.responses.create(', '#D4D4D4'], '\\n    ', ['model', '#9CDCFE'], ['=', '#D4D4D4'], ['\"gpt-4.1\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['tools', '#9CDCFE'], ['=[{', '#D4D4D4'], ' ', ['\"type\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"web_search_preview\"', '#CE9178'], ' ', ['}],', '#D4D4D4'], '\\n    ', ['input', '#9CDCFE'], ['=', '#D4D4D4'], ['\"What was a positive news story from today?\"', '#CE9178'], [',', '#D4D4D4'], '\\n', [')', '#D4D4D4'], '\\n\\n', ['print', '#DCDCAA'], ['(response)', '#D4D4D4'], '\\n'],\n                  value: 'from openai import OpenAI\\n\\nclient = OpenAI()\\n\\nresponse = client.responses.create(\\n    model=\"gpt-4.1\",\\n    tools=[{ \"type\": \"web_search_preview\" }],\\n    input=\"What was a positive news story from today?\",\\n)\\n\\nprint(response)\\n'\n                },\n                language: 'python',\n                title: 'python'\n              }, {\n                code: 'using System;\\n\\nusing OpenAI.Responses;\\n\\nOpenAIResponseClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nstring userInputText = \"What was a positive news story from today?\";\\n\\nResponseCreationOptions options = new()\\n{\\n    Tools =\\n    {\\n        ResponseTool.CreateWebSearchTool()\\n    },\\n};\\n\\nOpenAIResponse response = client.CreateResponse(userInputText, options);\\n\\nConsole.WriteLine(response.GetOutputText());\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'using System;\\n\\nusing OpenAI.Responses;\\n\\nOpenAIResponseClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nstring userInputText = \"What was a positive news story from today?\";\\n\\nResponseCreationOptions options = new()\\n{\\n    Tools =\\n    {\\n        ResponseTool.CreateWebSearchTool()\\n    },\\n};\\n\\nOpenAIResponse response = client.CreateResponse(userInputText, options);\\n\\nConsole.WriteLine(response.GetOutputText());\\n',\n                  lang: 'csharp',\n                  meta: 'csharp',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['using', '#569CD6'], ' ', ['System', '#4EC9B0'], [';', '#D4D4D4'], '\\n\\n', ['using', '#569CD6'], ' ', ['OpenAI', '#4EC9B0'], ['.', '#D4D4D4'], ['Responses', '#4EC9B0'], [';', '#D4D4D4'], '\\n\\n', ['OpenAIResponseClient', '#4EC9B0'], ' ', ['client', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ['(', '#D4D4D4'], '\\n    ', ['model', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"gpt-4.1\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['apiKey', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['Environment', '#9CDCFE'], ['.', '#D4D4D4'], ['GetEnvironmentVariable', '#DCDCAA'], ['(', '#D4D4D4'], ['\"OPENAI_API_KEY\"', '#CE9178'], [')', '#D4D4D4'], '\\n', [');', '#D4D4D4'], '\\n\\n', ['string', '#569CD6'], ' ', ['userInputText', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['\"What was a positive news story from today?\"', '#CE9178'], [';', '#D4D4D4'], '\\n\\n', ['ResponseCreationOptions', '#4EC9B0'], ' ', ['options', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ['()', '#D4D4D4'], '\\n', ['{', '#D4D4D4'], '\\n    ', ['Tools', '#9CDCFE'], ' ', ['=', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], '\\n        ', ['ResponseTool', '#9CDCFE'], ['.', '#D4D4D4'], ['CreateWebSearchTool', '#DCDCAA'], ['()', '#D4D4D4'], '\\n    ', ['},', '#D4D4D4'], '\\n', ['};', '#D4D4D4'], '\\n\\n', ['OpenAIResponse', '#4EC9B0'], ' ', ['response', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['client', '#9CDCFE'], ['.', '#D4D4D4'], ['CreateResponse', '#DCDCAA'], ['(', '#D4D4D4'], ['userInputText', '#9CDCFE'], [',', '#D4D4D4'], ' ', ['options', '#9CDCFE'], [');', '#D4D4D4'], '\\n\\n', ['Console', '#9CDCFE'], ['.', '#D4D4D4'], ['WriteLine', '#DCDCAA'], ['(', '#D4D4D4'], ['response', '#9CDCFE'], ['.', '#D4D4D4'], ['GetOutputText', '#DCDCAA'], ['());', '#D4D4D4'], '\\n'],\n                  value: 'using System;\\n\\nusing OpenAI.Responses;\\n\\nOpenAIResponseClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nstring userInputText = \"What was a positive news story from today?\";\\n\\nResponseCreationOptions options = new()\\n{\\n    Tools =\\n    {\\n        ResponseTool.CreateWebSearchTool()\\n    },\\n};\\n\\nOpenAIResponse response = client.CreateResponse(userInputText, options);\\n\\nConsole.WriteLine(response.GetOutputText());\\n'\n                },\n                language: 'csharp',\n                title: 'csharp'\n              }],\n              title: 'Web search'\n            },\n            description: 'Web search'\n          }, {\n            codeblock: {\n              tabs: [{\n                code: 'curl https://api.openai.com/v1/responses \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"gpt-4.1\",\\n    \"tools\": [{\\n      \"type\": \"file_search\",\\n      \"vector_store_ids\": [\"vs_1234567890\"],\\n      \"max_num_results\": 20\\n    }],\\n    \"input\": \"What are the attributes of an ancient brown dragon?\"\\n  }\\'\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'curl https://api.openai.com/v1/responses \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"gpt-4.1\",\\n    \"tools\": [{\\n      \"type\": \"file_search\",\\n      \"vector_store_ids\": [\"vs_1234567890\"],\\n      \"max_num_results\": 20\\n    }],\\n    \"input\": \"What are the attributes of an ancient brown dragon?\"\\n  }\\'\\n',\n                  lang: 'shellscript',\n                  meta: 'curl',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['curl', '#DCDCAA'], ' ', ['https://api.openai.com/v1/responses', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-H \"Content-Type: application/json\"', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-H \"Authorization: Bearer', '#CE9178'], ' ', ['$OPENAI_API_KEY', '#9CDCFE'], ['\"', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-d \\'{', '#CE9178'], '\\n    ', ['\"model\": \"gpt-4.1\",', '#CE9178'], '\\n    ', ['\"tools\": [{', '#CE9178'], '\\n      ', ['\"type\": \"file_search\",', '#CE9178'], '\\n      ', ['\"vector_store_ids\": [\"vs_1234567890\"],', '#CE9178'], '\\n      ', ['\"max_num_results\": 20', '#CE9178'], '\\n    ', ['}],', '#CE9178'], '\\n    ', ['\"input\": \"What are the attributes of an ancient brown dragon?\"', '#CE9178'], '\\n  ', ['}\\'', '#CE9178'], '\\n'],\n                  value: 'curl https://api.openai.com/v1/responses \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"gpt-4.1\",\\n    \"tools\": [{\\n      \"type\": \"file_search\",\\n      \"vector_store_ids\": [\"vs_1234567890\"],\\n      \"max_num_results\": 20\\n    }],\\n    \"input\": \"What are the attributes of an ancient brown dragon?\"\\n  }\\'\\n'\n                },\n                language: 'bash',\n                title: 'curl'\n              }, {\n                code: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nconst response = await openai.responses.create({\\n    model: \"gpt-4.1\",\\n    tools: [{\\n      type: \"file_search\",\\n      vector_store_ids: [\"vs_1234567890\"],\\n      max_num_results: 20\\n    }],\\n    input: \"What are the attributes of an ancient brown dragon?\",\\n});\\n\\nconsole.log(response);\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nconst response = await openai.responses.create({\\n    model: \"gpt-4.1\",\\n    tools: [{\\n      type: \"file_search\",\\n      vector_store_ids: [\"vs_1234567890\"],\\n      max_num_results: 20\\n    }],\\n    input: \"What are the attributes of an ancient brown dragon?\",\\n});\\n\\nconsole.log(response);\\n',\n                  lang: 'javascript',\n                  meta: 'javascript',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['import', '#C586C0'], ' ', ['OpenAI', '#9CDCFE'], ' ', ['from', '#C586C0'], ' ', ['\"openai\"', '#CE9178'], [';', '#D4D4D4'], '\\n\\n', ['const', '#569CD6'], ' ', ['openai', '#4FC1FF'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ' ', ['OpenAI', '#DCDCAA'], ['();', '#D4D4D4'], '\\n\\n', ['const', '#569CD6'], ' ', ['response', '#4FC1FF'], ' ', ['=', '#D4D4D4'], ' ', ['await', '#C586C0'], ' ', ['openai', '#9CDCFE'], ['.', '#D4D4D4'], ['responses', '#9CDCFE'], ['.', '#D4D4D4'], ['create', '#DCDCAA'], ['({', '#D4D4D4'], '\\n    ', ['model:', '#9CDCFE'], ' ', ['\"gpt-4.1\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['tools:', '#9CDCFE'], ' ', ['[{', '#D4D4D4'], '\\n      ', ['type:', '#9CDCFE'], ' ', ['\"file_search\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['vector_store_ids:', '#9CDCFE'], ' ', ['[', '#D4D4D4'], ['\"vs_1234567890\"', '#CE9178'], ['],', '#D4D4D4'], '\\n      ', ['max_num_results:', '#9CDCFE'], ' ', ['20', '#B5CEA8'], '\\n    ', ['}],', '#D4D4D4'], '\\n    ', ['input:', '#9CDCFE'], ' ', ['\"What are the attributes of an ancient brown dragon?\"', '#CE9178'], [',', '#D4D4D4'], '\\n', ['});', '#D4D4D4'], '\\n\\n', ['console', '#9CDCFE'], ['.', '#D4D4D4'], ['log', '#DCDCAA'], ['(', '#D4D4D4'], ['response', '#9CDCFE'], [');', '#D4D4D4'], '\\n'],\n                  value: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nconst response = await openai.responses.create({\\n    model: \"gpt-4.1\",\\n    tools: [{\\n      type: \"file_search\",\\n      vector_store_ids: [\"vs_1234567890\"],\\n      max_num_results: 20\\n    }],\\n    input: \"What are the attributes of an ancient brown dragon?\",\\n});\\n\\nconsole.log(response);\\n'\n                },\n                language: 'javascript',\n                title: 'javascript'\n              }, {\n                code: 'from openai import OpenAI\\n\\nclient = OpenAI()\\n\\nresponse = client.responses.create(\\n    model=\"gpt-4.1\",\\n    tools=[{\\n      \"type\": \"file_search\",\\n      \"vector_store_ids\": [\"vs_1234567890\"],\\n      \"max_num_results\": 20\\n    }],\\n    input=\"What are the attributes of an ancient brown dragon?\",\\n)\\n\\nprint(response)\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'from openai import OpenAI\\n\\nclient = OpenAI()\\n\\nresponse = client.responses.create(\\n    model=\"gpt-4.1\",\\n    tools=[{\\n      \"type\": \"file_search\",\\n      \"vector_store_ids\": [\"vs_1234567890\"],\\n      \"max_num_results\": 20\\n    }],\\n    input=\"What are the attributes of an ancient brown dragon?\",\\n)\\n\\nprint(response)\\n',\n                  lang: 'python',\n                  meta: 'python',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['from', '#C586C0'], ' ', ['openai', '#D4D4D4'], ' ', ['import', '#C586C0'], ' ', ['OpenAI', '#D4D4D4'], '\\n\\n', ['client = OpenAI()', '#D4D4D4'], '\\n\\n', ['response = client.responses.create(', '#D4D4D4'], '\\n    ', ['model', '#9CDCFE'], ['=', '#D4D4D4'], ['\"gpt-4.1\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['tools', '#9CDCFE'], ['=[{', '#D4D4D4'], '\\n      ', ['\"type\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"file_search\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"vector_store_ids\"', '#CE9178'], [': [', '#D4D4D4'], ['\"vs_1234567890\"', '#CE9178'], ['],', '#D4D4D4'], '\\n      ', ['\"max_num_results\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['20', '#B5CEA8'], '\\n    ', ['}],', '#D4D4D4'], '\\n    ', ['input', '#9CDCFE'], ['=', '#D4D4D4'], ['\"What are the attributes of an ancient brown dragon?\"', '#CE9178'], [',', '#D4D4D4'], '\\n', [')', '#D4D4D4'], '\\n\\n', ['print', '#DCDCAA'], ['(response)', '#D4D4D4'], '\\n'],\n                  value: 'from openai import OpenAI\\n\\nclient = OpenAI()\\n\\nresponse = client.responses.create(\\n    model=\"gpt-4.1\",\\n    tools=[{\\n      \"type\": \"file_search\",\\n      \"vector_store_ids\": [\"vs_1234567890\"],\\n      \"max_num_results\": 20\\n    }],\\n    input=\"What are the attributes of an ancient brown dragon?\",\\n)\\n\\nprint(response)\\n'\n                },\n                language: 'python',\n                title: 'python'\n              }, {\n                code: 'using System;\\n\\nusing OpenAI.Responses;\\n\\nOpenAIResponseClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nstring userInputText = \"What are the attributes of an ancient brown dragon?\";\\n\\nResponseCreationOptions options = new()\\n{\\n    Tools =\\n    {\\n        ResponseTool.CreateFileSearchTool(\\n            vectorStoreIds: [\"vs_1234567890\"],\\n            maxResultCount: 20\\n        )\\n    },\\n};\\n\\nOpenAIResponse response = client.CreateResponse(userInputText, options);\\n\\nConsole.WriteLine(response.GetOutputText());\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'using System;\\n\\nusing OpenAI.Responses;\\n\\nOpenAIResponseClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nstring userInputText = \"What are the attributes of an ancient brown dragon?\";\\n\\nResponseCreationOptions options = new()\\n{\\n    Tools =\\n    {\\n        ResponseTool.CreateFileSearchTool(\\n            vectorStoreIds: [\"vs_1234567890\"],\\n            maxResultCount: 20\\n        )\\n    },\\n};\\n\\nOpenAIResponse response = client.CreateResponse(userInputText, options);\\n\\nConsole.WriteLine(response.GetOutputText());\\n',\n                  lang: 'csharp',\n                  meta: 'csharp',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['using', '#569CD6'], ' ', ['System', '#4EC9B0'], [';', '#D4D4D4'], '\\n\\n', ['using', '#569CD6'], ' ', ['OpenAI', '#4EC9B0'], ['.', '#D4D4D4'], ['Responses', '#4EC9B0'], [';', '#D4D4D4'], '\\n\\n', ['OpenAIResponseClient', '#4EC9B0'], ' ', ['client', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ['(', '#D4D4D4'], '\\n    ', ['model', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"gpt-4.1\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['apiKey', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['Environment', '#9CDCFE'], ['.', '#D4D4D4'], ['GetEnvironmentVariable', '#DCDCAA'], ['(', '#D4D4D4'], ['\"OPENAI_API_KEY\"', '#CE9178'], [')', '#D4D4D4'], '\\n', [');', '#D4D4D4'], '\\n\\n', ['string', '#569CD6'], ' ', ['userInputText', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['\"What are the attributes of an ancient brown dragon?\"', '#CE9178'], [';', '#D4D4D4'], '\\n\\n', ['ResponseCreationOptions', '#4EC9B0'], ' ', ['options', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ['()', '#D4D4D4'], '\\n', ['{', '#D4D4D4'], '\\n    ', ['Tools', '#9CDCFE'], ' ', ['=', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], '\\n        ', ['ResponseTool', '#9CDCFE'], ['.', '#D4D4D4'], ['CreateFileSearchTool', '#DCDCAA'], ['(', '#D4D4D4'], '\\n            ', ['vectorStoreIds', '#9CDCFE'], [': [', '#D4D4D4'], ['\"vs_1234567890\"', '#CE9178'], ['],', '#D4D4D4'], '\\n            ', ['maxResultCount', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['20', '#B5CEA8'], '\\n        ', [')', '#D4D4D4'], '\\n    ', ['},', '#D4D4D4'], '\\n', ['};', '#D4D4D4'], '\\n\\n', ['OpenAIResponse', '#4EC9B0'], ' ', ['response', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['client', '#9CDCFE'], ['.', '#D4D4D4'], ['CreateResponse', '#DCDCAA'], ['(', '#D4D4D4'], ['userInputText', '#9CDCFE'], [',', '#D4D4D4'], ' ', ['options', '#9CDCFE'], [');', '#D4D4D4'], '\\n\\n', ['Console', '#9CDCFE'], ['.', '#D4D4D4'], ['WriteLine', '#DCDCAA'], ['(', '#D4D4D4'], ['response', '#9CDCFE'], ['.', '#D4D4D4'], ['GetOutputText', '#DCDCAA'], ['());', '#D4D4D4'], '\\n'],\n                  value: 'using System;\\n\\nusing OpenAI.Responses;\\n\\nOpenAIResponseClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nstring userInputText = \"What are the attributes of an ancient brown dragon?\";\\n\\nResponseCreationOptions options = new()\\n{\\n    Tools =\\n    {\\n        ResponseTool.CreateFileSearchTool(\\n            vectorStoreIds: [\"vs_1234567890\"],\\n            maxResultCount: 20\\n        )\\n    },\\n};\\n\\nOpenAIResponse response = client.CreateResponse(userInputText, options);\\n\\nConsole.WriteLine(response.GetOutputText());\\n'\n                },\n                language: 'csharp',\n                title: 'csharp'\n              }],\n              title: 'File search'\n            },\n            description: 'File search'\n          }, {\n            codeblock: {\n              tabs: [{\n                code: 'curl https://api.openai.com/v1/responses \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"gpt-4.1\",\\n    \"instructions\": \"You are a helpful assistant.\",\\n    \"input\": \"Hello!\",\\n    \"stream\": true\\n  }\\'\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'curl https://api.openai.com/v1/responses \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"gpt-4.1\",\\n    \"instructions\": \"You are a helpful assistant.\",\\n    \"input\": \"Hello!\",\\n    \"stream\": true\\n  }\\'\\n',\n                  lang: 'shellscript',\n                  meta: 'curl',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['curl', '#DCDCAA'], ' ', ['https://api.openai.com/v1/responses', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-H \"Content-Type: application/json\"', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-H \"Authorization: Bearer', '#CE9178'], ' ', ['$OPENAI_API_KEY', '#9CDCFE'], ['\"', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-d \\'{', '#CE9178'], '\\n    ', ['\"model\": \"gpt-4.1\",', '#CE9178'], '\\n    ', ['\"instructions\": \"You are a helpful assistant.\",', '#CE9178'], '\\n    ', ['\"input\": \"Hello!\",', '#CE9178'], '\\n    ', ['\"stream\": true', '#CE9178'], '\\n  ', ['}\\'', '#CE9178'], '\\n'],\n                  value: 'curl https://api.openai.com/v1/responses \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"gpt-4.1\",\\n    \"instructions\": \"You are a helpful assistant.\",\\n    \"input\": \"Hello!\",\\n    \"stream\": true\\n  }\\'\\n'\n                },\n                language: 'bash',\n                title: 'curl'\n              }, {\n                code: 'from openai import OpenAI\\n\\nclient = OpenAI()\\n\\nresponse = client.responses.create(\\n  model=\"gpt-4.1\",\\n  instructions=\"You are a helpful assistant.\",\\n  input=\"Hello!\",\\n  stream=True\\n)\\n\\nfor event in response:\\n  print(event)\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'from openai import OpenAI\\n\\nclient = OpenAI()\\n\\nresponse = client.responses.create(\\n  model=\"gpt-4.1\",\\n  instructions=\"You are a helpful assistant.\",\\n  input=\"Hello!\",\\n  stream=True\\n)\\n\\nfor event in response:\\n  print(event)\\n',\n                  lang: 'python',\n                  meta: 'python',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['from', '#C586C0'], ' ', ['openai', '#D4D4D4'], ' ', ['import', '#C586C0'], ' ', ['OpenAI', '#D4D4D4'], '\\n\\n', ['client = OpenAI()', '#D4D4D4'], '\\n\\n', ['response = client.responses.create(', '#D4D4D4'], '\\n  ', ['model', '#9CDCFE'], ['=', '#D4D4D4'], ['\"gpt-4.1\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['instructions', '#9CDCFE'], ['=', '#D4D4D4'], ['\"You are a helpful assistant.\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['input', '#9CDCFE'], ['=', '#D4D4D4'], ['\"Hello!\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['stream', '#9CDCFE'], ['=', '#D4D4D4'], ['True', '#569CD6'], '\\n', [')', '#D4D4D4'], '\\n\\n', ['for', '#C586C0'], ' ', ['event', '#D4D4D4'], ' ', ['in', '#C586C0'], ' ', ['response:', '#D4D4D4'], '\\n  ', ['print', '#DCDCAA'], ['(event)', '#D4D4D4'], '\\n'],\n                  value: 'from openai import OpenAI\\n\\nclient = OpenAI()\\n\\nresponse = client.responses.create(\\n  model=\"gpt-4.1\",\\n  instructions=\"You are a helpful assistant.\",\\n  input=\"Hello!\",\\n  stream=True\\n)\\n\\nfor event in response:\\n  print(event)\\n'\n                },\n                language: 'python',\n                title: 'python'\n              }, {\n                code: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nconst response = await openai.responses.create({\\n    model: \"gpt-4.1\",\\n    instructions: \"You are a helpful assistant.\",\\n    input: \"Hello!\",\\n    stream: true,\\n});\\n\\nfor await (const event of response) {\\n    console.log(event);\\n}\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nconst response = await openai.responses.create({\\n    model: \"gpt-4.1\",\\n    instructions: \"You are a helpful assistant.\",\\n    input: \"Hello!\",\\n    stream: true,\\n});\\n\\nfor await (const event of response) {\\n    console.log(event);\\n}\\n',\n                  lang: 'javascript',\n                  meta: 'javascript',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['import', '#C586C0'], ' ', ['OpenAI', '#9CDCFE'], ' ', ['from', '#C586C0'], ' ', ['\"openai\"', '#CE9178'], [';', '#D4D4D4'], '\\n\\n', ['const', '#569CD6'], ' ', ['openai', '#4FC1FF'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ' ', ['OpenAI', '#DCDCAA'], ['();', '#D4D4D4'], '\\n\\n', ['const', '#569CD6'], ' ', ['response', '#4FC1FF'], ' ', ['=', '#D4D4D4'], ' ', ['await', '#C586C0'], ' ', ['openai', '#9CDCFE'], ['.', '#D4D4D4'], ['responses', '#9CDCFE'], ['.', '#D4D4D4'], ['create', '#DCDCAA'], ['({', '#D4D4D4'], '\\n    ', ['model:', '#9CDCFE'], ' ', ['\"gpt-4.1\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['instructions:', '#9CDCFE'], ' ', ['\"You are a helpful assistant.\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['input:', '#9CDCFE'], ' ', ['\"Hello!\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['stream:', '#9CDCFE'], ' ', ['true', '#569CD6'], [',', '#D4D4D4'], '\\n', ['});', '#D4D4D4'], '\\n\\n', ['for await', '#C586C0'], ' ', ['(', '#D4D4D4'], ['const', '#569CD6'], ' ', ['event', '#4FC1FF'], ' ', ['of', '#569CD6'], ' ', ['response', '#9CDCFE'], [') {', '#D4D4D4'], '\\n    ', ['console', '#9CDCFE'], ['.', '#D4D4D4'], ['log', '#DCDCAA'], ['(', '#D4D4D4'], ['event', '#9CDCFE'], [');', '#D4D4D4'], '\\n', ['}', '#D4D4D4'], '\\n'],\n                  value: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nconst response = await openai.responses.create({\\n    model: \"gpt-4.1\",\\n    instructions: \"You are a helpful assistant.\",\\n    input: \"Hello!\",\\n    stream: true,\\n});\\n\\nfor await (const event of response) {\\n    console.log(event);\\n}\\n'\n                },\n                language: 'javascript',\n                title: 'javascript'\n              }, {\n                code: 'using System;\\nusing System.ClientModel;\\nusing System.Threading.Tasks;\\n\\nusing OpenAI.Responses;\\n\\nOpenAIResponseClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nstring userInputText = \"Hello!\";\\n\\nResponseCreationOptions options = new()\\n{\\n    Instructions = \"You are a helpful assistant.\",\\n};\\n\\nAsyncCollectionResult<StreamingResponseUpdate> responseUpdates = client.CreateResponseStreamingAsync(userInputText, options);\\n\\nawait foreach (StreamingResponseUpdate responseUpdate in responseUpdates)\\n{\\n    if (responseUpdate is StreamingResponseOutputTextDeltaUpdate outputTextDeltaUpdate)\\n    {\\n        Console.Write(outputTextDeltaUpdate.Delta);\\n    }\\n}\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'using System;\\nusing System.ClientModel;\\nusing System.Threading.Tasks;\\n\\nusing OpenAI.Responses;\\n\\nOpenAIResponseClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nstring userInputText = \"Hello!\";\\n\\nResponseCreationOptions options = new()\\n{\\n    Instructions = \"You are a helpful assistant.\",\\n};\\n\\nAsyncCollectionResult<StreamingResponseUpdate> responseUpdates = client.CreateResponseStreamingAsync(userInputText, options);\\n\\nawait foreach (StreamingResponseUpdate responseUpdate in responseUpdates)\\n{\\n    if (responseUpdate is StreamingResponseOutputTextDeltaUpdate outputTextDeltaUpdate)\\n    {\\n        Console.Write(outputTextDeltaUpdate.Delta);\\n    }\\n}\\n',\n                  lang: 'csharp',\n                  meta: 'csharp',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['using', '#569CD6'], ' ', ['System', '#4EC9B0'], [';', '#D4D4D4'], '\\n', ['using', '#569CD6'], ' ', ['System', '#4EC9B0'], ['.', '#D4D4D4'], ['ClientModel', '#4EC9B0'], [';', '#D4D4D4'], '\\n', ['using', '#569CD6'], ' ', ['System', '#4EC9B0'], ['.', '#D4D4D4'], ['Threading', '#4EC9B0'], ['.', '#D4D4D4'], ['Tasks', '#4EC9B0'], [';', '#D4D4D4'], '\\n\\n', ['using', '#569CD6'], ' ', ['OpenAI', '#4EC9B0'], ['.', '#D4D4D4'], ['Responses', '#4EC9B0'], [';', '#D4D4D4'], '\\n\\n', ['OpenAIResponseClient', '#4EC9B0'], ' ', ['client', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ['(', '#D4D4D4'], '\\n    ', ['model', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"gpt-4.1\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['apiKey', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['Environment', '#9CDCFE'], ['.', '#D4D4D4'], ['GetEnvironmentVariable', '#DCDCAA'], ['(', '#D4D4D4'], ['\"OPENAI_API_KEY\"', '#CE9178'], [')', '#D4D4D4'], '\\n', [');', '#D4D4D4'], '\\n\\n', ['string', '#569CD6'], ' ', ['userInputText', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['\"Hello!\"', '#CE9178'], [';', '#D4D4D4'], '\\n\\n', ['ResponseCreationOptions', '#4EC9B0'], ' ', ['options', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ['()', '#D4D4D4'], '\\n', ['{', '#D4D4D4'], '\\n    ', ['Instructions', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['\"You are a helpful assistant.\"', '#CE9178'], [',', '#D4D4D4'], '\\n', ['};', '#D4D4D4'], '\\n\\n', ['AsyncCollectionResult', '#4EC9B0'], ['<', '#D4D4D4'], ['StreamingResponseUpdate', '#4EC9B0'], ['>', '#D4D4D4'], ' ', ['responseUpdates', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['client', '#9CDCFE'], ['.', '#D4D4D4'], ['CreateResponseStreamingAsync', '#DCDCAA'], ['(', '#D4D4D4'], ['userInputText', '#9CDCFE'], [',', '#D4D4D4'], ' ', ['options', '#9CDCFE'], [');', '#D4D4D4'], '\\n\\n', ['await', '#569CD6'], ' ', ['foreach', '#C586C0'], ' ', ['(', '#D4D4D4'], ['StreamingResponseUpdate', '#4EC9B0'], ' ', ['responseUpdate', '#9CDCFE'], ' ', ['in', '#C586C0'], ' ', ['responseUpdates', '#9CDCFE'], [')', '#D4D4D4'], '\\n', ['{', '#D4D4D4'], '\\n    ', ['if', '#DCDCAA'], ' ', ['(', '#D4D4D4'], ['responseUpdate', '#9CDCFE'], ' ', ['is', '#569CD6'], ' ', ['StreamingResponseOutputTextDeltaUpdate', '#4EC9B0'], ' ', ['outputTextDeltaUpdate', '#9CDCFE'], [')', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], '\\n        ', ['Console', '#9CDCFE'], ['.', '#D4D4D4'], ['Write', '#DCDCAA'], ['(', '#D4D4D4'], ['outputTextDeltaUpdate', '#9CDCFE'], ['.', '#D4D4D4'], ['Delta', '#9CDCFE'], [');', '#D4D4D4'], '\\n    ', ['}', '#D4D4D4'], '\\n', ['}', '#D4D4D4'], '\\n'],\n                  value: 'using System;\\nusing System.ClientModel;\\nusing System.Threading.Tasks;\\n\\nusing OpenAI.Responses;\\n\\nOpenAIResponseClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nstring userInputText = \"Hello!\";\\n\\nResponseCreationOptions options = new()\\n{\\n    Instructions = \"You are a helpful assistant.\",\\n};\\n\\nAsyncCollectionResult<StreamingResponseUpdate> responseUpdates = client.CreateResponseStreamingAsync(userInputText, options);\\n\\nawait foreach (StreamingResponseUpdate responseUpdate in responseUpdates)\\n{\\n    if (responseUpdate is StreamingResponseOutputTextDeltaUpdate outputTextDeltaUpdate)\\n    {\\n        Console.Write(outputTextDeltaUpdate.Delta);\\n    }\\n}\\n'\n                },\n                language: 'csharp',\n                title: 'csharp'\n              }],\n              title: 'Streaming'\n            },\n            description: 'Streaming'\n          }, {\n            codeblock: {\n              tabs: [{\n                code: 'curl https://api.openai.com/v1/responses \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"gpt-4.1\",\\n    \"input\": \"What is the weather like in Boston today?\",\\n    \"tools\": [\\n      {\\n        \"type\": \"function\",\\n        \"name\": \"get_current_weather\",\\n        \"description\": \"Get the current weather in a given location\",\\n        \"parameters\": {\\n          \"type\": \"object\",\\n          \"properties\": {\\n            \"location\": {\\n              \"type\": \"string\",\\n              \"description\": \"The city and state, e.g. San Francisco, CA\"\\n            },\\n            \"unit\": {\\n              \"type\": \"string\",\\n              \"enum\": [\"celsius\", \"fahrenheit\"]\\n            }\\n          },\\n          \"required\": [\"location\", \"unit\"]\\n        }\\n      }\\n    ],\\n    \"tool_choice\": \"auto\"\\n  }\\'\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'curl https://api.openai.com/v1/responses \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"gpt-4.1\",\\n    \"input\": \"What is the weather like in Boston today?\",\\n    \"tools\": [\\n      {\\n        \"type\": \"function\",\\n        \"name\": \"get_current_weather\",\\n        \"description\": \"Get the current weather in a given location\",\\n        \"parameters\": {\\n          \"type\": \"object\",\\n          \"properties\": {\\n            \"location\": {\\n              \"type\": \"string\",\\n              \"description\": \"The city and state, e.g. San Francisco, CA\"\\n            },\\n            \"unit\": {\\n              \"type\": \"string\",\\n              \"enum\": [\"celsius\", \"fahrenheit\"]\\n            }\\n          },\\n          \"required\": [\"location\", \"unit\"]\\n        }\\n      }\\n    ],\\n    \"tool_choice\": \"auto\"\\n  }\\'\\n',\n                  lang: 'shellscript',\n                  meta: 'curl',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['curl', '#DCDCAA'], ' ', ['https://api.openai.com/v1/responses', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-H \"Content-Type: application/json\"', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-H \"Authorization: Bearer', '#CE9178'], ' ', ['$OPENAI_API_KEY', '#9CDCFE'], ['\"', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-d \\'{', '#CE9178'], '\\n    ', ['\"model\": \"gpt-4.1\",', '#CE9178'], '\\n    ', ['\"input\": \"What is the weather like in Boston today?\",', '#CE9178'], '\\n    ', ['\"tools\": [', '#CE9178'], '\\n      ', ['{', '#CE9178'], '\\n        ', ['\"type\": \"function\",', '#CE9178'], '\\n        ', ['\"name\": \"get_current_weather\",', '#CE9178'], '\\n        ', ['\"description\": \"Get the current weather in a given location\",', '#CE9178'], '\\n        ', ['\"parameters\": {', '#CE9178'], '\\n          ', ['\"type\": \"object\",', '#CE9178'], '\\n          ', ['\"properties\": {', '#CE9178'], '\\n            ', ['\"location\": {', '#CE9178'], '\\n              ', ['\"type\": \"string\",', '#CE9178'], '\\n              ', ['\"description\": \"The city and state, e.g. San Francisco, CA\"', '#CE9178'], '\\n            ', ['},', '#CE9178'], '\\n            ', ['\"unit\": {', '#CE9178'], '\\n              ', ['\"type\": \"string\",', '#CE9178'], '\\n              ', ['\"enum\": [\"celsius\", \"fahrenheit\"]', '#CE9178'], '\\n            ', ['}', '#CE9178'], '\\n          ', ['},', '#CE9178'], '\\n          ', ['\"required\": [\"location\", \"unit\"]', '#CE9178'], '\\n        ', ['}', '#CE9178'], '\\n      ', ['}', '#CE9178'], '\\n    ', ['],', '#CE9178'], '\\n    ', ['\"tool_choice\": \"auto\"', '#CE9178'], '\\n  ', ['}\\'', '#CE9178'], '\\n'],\n                  value: 'curl https://api.openai.com/v1/responses \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"gpt-4.1\",\\n    \"input\": \"What is the weather like in Boston today?\",\\n    \"tools\": [\\n      {\\n        \"type\": \"function\",\\n        \"name\": \"get_current_weather\",\\n        \"description\": \"Get the current weather in a given location\",\\n        \"parameters\": {\\n          \"type\": \"object\",\\n          \"properties\": {\\n            \"location\": {\\n              \"type\": \"string\",\\n              \"description\": \"The city and state, e.g. San Francisco, CA\"\\n            },\\n            \"unit\": {\\n              \"type\": \"string\",\\n              \"enum\": [\"celsius\", \"fahrenheit\"]\\n            }\\n          },\\n          \"required\": [\"location\", \"unit\"]\\n        }\\n      }\\n    ],\\n    \"tool_choice\": \"auto\"\\n  }\\'\\n'\n                },\n                language: 'bash',\n                title: 'curl'\n              }, {\n                code: 'from openai import OpenAI\\n\\nclient = OpenAI()\\n\\ntools = [\\n    {\\n        \"type\": \"function\",\\n        \"name\": \"get_current_weather\",\\n        \"description\": \"Get the current weather in a given location\",\\n        \"parameters\": {\\n          \"type\": \"object\",\\n          \"properties\": {\\n              \"location\": {\\n                  \"type\": \"string\",\\n                  \"description\": \"The city and state, e.g. San Francisco, CA\",\\n              },\\n              \"unit\": {\"type\": \"string\", \"enum\": [\"celsius\", \"fahrenheit\"]},\\n          },\\n          \"required\": [\"location\", \"unit\"],\\n        }\\n    }\\n]\\n\\nresponse = client.responses.create(\\n  model=\"gpt-4.1\",\\n  tools=tools,\\n  input=\"What is the weather like in Boston today?\",\\n  tool_choice=\"auto\"\\n)\\n\\nprint(response)\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'from openai import OpenAI\\n\\nclient = OpenAI()\\n\\ntools = [\\n    {\\n        \"type\": \"function\",\\n        \"name\": \"get_current_weather\",\\n        \"description\": \"Get the current weather in a given location\",\\n        \"parameters\": {\\n          \"type\": \"object\",\\n          \"properties\": {\\n              \"location\": {\\n                  \"type\": \"string\",\\n                  \"description\": \"The city and state, e.g. San Francisco, CA\",\\n              },\\n              \"unit\": {\"type\": \"string\", \"enum\": [\"celsius\", \"fahrenheit\"]},\\n          },\\n          \"required\": [\"location\", \"unit\"],\\n        }\\n    }\\n]\\n\\nresponse = client.responses.create(\\n  model=\"gpt-4.1\",\\n  tools=tools,\\n  input=\"What is the weather like in Boston today?\",\\n  tool_choice=\"auto\"\\n)\\n\\nprint(response)\\n',\n                  lang: 'python',\n                  meta: 'python',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['from', '#C586C0'], ' ', ['openai', '#D4D4D4'], ' ', ['import', '#C586C0'], ' ', ['OpenAI', '#D4D4D4'], '\\n\\n', ['client = OpenAI()', '#D4D4D4'], '\\n\\n', ['tools = [', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], '\\n        ', ['\"type\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"function\"', '#CE9178'], [',', '#D4D4D4'], '\\n        ', ['\"name\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"get_current_weather\"', '#CE9178'], [',', '#D4D4D4'], '\\n        ', ['\"description\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"Get the current weather in a given location\"', '#CE9178'], [',', '#D4D4D4'], '\\n        ', ['\"parameters\"', '#CE9178'], [': {', '#D4D4D4'], '\\n          ', ['\"type\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"object\"', '#CE9178'], [',', '#D4D4D4'], '\\n          ', ['\"properties\"', '#CE9178'], [': {', '#D4D4D4'], '\\n              ', ['\"location\"', '#CE9178'], [': {', '#D4D4D4'], '\\n                  ', ['\"type\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"string\"', '#CE9178'], [',', '#D4D4D4'], '\\n                  ', ['\"description\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"The city and state, e.g. San Francisco, CA\"', '#CE9178'], [',', '#D4D4D4'], '\\n              ', ['},', '#D4D4D4'], '\\n              ', ['\"unit\"', '#CE9178'], [': {', '#D4D4D4'], ['\"type\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"string\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['\"enum\"', '#CE9178'], [': [', '#D4D4D4'], ['\"celsius\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['\"fahrenheit\"', '#CE9178'], [']},', '#D4D4D4'], '\\n          ', ['},', '#D4D4D4'], '\\n          ', ['\"required\"', '#CE9178'], [': [', '#D4D4D4'], ['\"location\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['\"unit\"', '#CE9178'], ['],', '#D4D4D4'], '\\n        ', ['}', '#D4D4D4'], '\\n    ', ['}', '#D4D4D4'], '\\n', [']', '#D4D4D4'], '\\n\\n', ['response = client.responses.create(', '#D4D4D4'], '\\n  ', ['model', '#9CDCFE'], ['=', '#D4D4D4'], ['\"gpt-4.1\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['tools', '#9CDCFE'], ['=tools,', '#D4D4D4'], '\\n  ', ['input', '#9CDCFE'], ['=', '#D4D4D4'], ['\"What is the weather like in Boston today?\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['tool_choice', '#9CDCFE'], ['=', '#D4D4D4'], ['\"auto\"', '#CE9178'], '\\n', [')', '#D4D4D4'], '\\n\\n', ['print', '#DCDCAA'], ['(response)', '#D4D4D4'], '\\n'],\n                  value: 'from openai import OpenAI\\n\\nclient = OpenAI()\\n\\ntools = [\\n    {\\n        \"type\": \"function\",\\n        \"name\": \"get_current_weather\",\\n        \"description\": \"Get the current weather in a given location\",\\n        \"parameters\": {\\n          \"type\": \"object\",\\n          \"properties\": {\\n              \"location\": {\\n                  \"type\": \"string\",\\n                  \"description\": \"The city and state, e.g. San Francisco, CA\",\\n              },\\n              \"unit\": {\"type\": \"string\", \"enum\": [\"celsius\", \"fahrenheit\"]},\\n          },\\n          \"required\": [\"location\", \"unit\"],\\n        }\\n    }\\n]\\n\\nresponse = client.responses.create(\\n  model=\"gpt-4.1\",\\n  tools=tools,\\n  input=\"What is the weather like in Boston today?\",\\n  tool_choice=\"auto\"\\n)\\n\\nprint(response)\\n'\n                },\n                language: 'python',\n                title: 'python'\n              }, {\n                code: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nconst tools = [\\n    {\\n        type: \"function\",\\n        name: \"get_current_weather\",\\n        description: \"Get the current weather in a given location\",\\n        parameters: {\\n            type: \"object\",\\n            properties: {\\n                location: {\\n                    type: \"string\",\\n                    description: \"The city and state, e.g. San Francisco, CA\",\\n                },\\n                unit: { type: \"string\", enum: [\"celsius\", \"fahrenheit\"] },\\n            },\\n            required: [\"location\", \"unit\"],\\n        },\\n    },\\n];\\n\\nconst response = await openai.responses.create({\\n    model: \"gpt-4.1\",\\n    tools: tools,\\n    input: \"What is the weather like in Boston today?\",\\n    tool_choice: \"auto\",\\n});\\n\\nconsole.log(response);\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nconst tools = [\\n    {\\n        type: \"function\",\\n        name: \"get_current_weather\",\\n        description: \"Get the current weather in a given location\",\\n        parameters: {\\n            type: \"object\",\\n            properties: {\\n                location: {\\n                    type: \"string\",\\n                    description: \"The city and state, e.g. San Francisco, CA\",\\n                },\\n                unit: { type: \"string\", enum: [\"celsius\", \"fahrenheit\"] },\\n            },\\n            required: [\"location\", \"unit\"],\\n        },\\n    },\\n];\\n\\nconst response = await openai.responses.create({\\n    model: \"gpt-4.1\",\\n    tools: tools,\\n    input: \"What is the weather like in Boston today?\",\\n    tool_choice: \"auto\",\\n});\\n\\nconsole.log(response);\\n',\n                  lang: 'javascript',\n                  meta: 'javascript',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['import', '#C586C0'], ' ', ['OpenAI', '#9CDCFE'], ' ', ['from', '#C586C0'], ' ', ['\"openai\"', '#CE9178'], [';', '#D4D4D4'], '\\n\\n', ['const', '#569CD6'], ' ', ['openai', '#4FC1FF'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ' ', ['OpenAI', '#DCDCAA'], ['();', '#D4D4D4'], '\\n\\n', ['const', '#569CD6'], ' ', ['tools', '#4FC1FF'], ' ', ['= [', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], '\\n        ', ['type:', '#9CDCFE'], ' ', ['\"function\"', '#CE9178'], [',', '#D4D4D4'], '\\n        ', ['name:', '#9CDCFE'], ' ', ['\"get_current_weather\"', '#CE9178'], [',', '#D4D4D4'], '\\n        ', ['description:', '#9CDCFE'], ' ', ['\"Get the current weather in a given location\"', '#CE9178'], [',', '#D4D4D4'], '\\n        ', ['parameters:', '#9CDCFE'], ' ', ['{', '#D4D4D4'], '\\n            ', ['type:', '#9CDCFE'], ' ', ['\"object\"', '#CE9178'], [',', '#D4D4D4'], '\\n            ', ['properties:', '#9CDCFE'], ' ', ['{', '#D4D4D4'], '\\n                ', ['location:', '#9CDCFE'], ' ', ['{', '#D4D4D4'], '\\n                    ', ['type:', '#9CDCFE'], ' ', ['\"string\"', '#CE9178'], [',', '#D4D4D4'], '\\n                    ', ['description:', '#9CDCFE'], ' ', ['\"The city and state, e.g. San Francisco, CA\"', '#CE9178'], [',', '#D4D4D4'], '\\n                ', ['},', '#D4D4D4'], '\\n                ', ['unit:', '#9CDCFE'], ' ', ['{', '#D4D4D4'], ' ', ['type:', '#9CDCFE'], ' ', ['\"string\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['enum:', '#9CDCFE'], ' ', ['[', '#D4D4D4'], ['\"celsius\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['\"fahrenheit\"', '#CE9178'], ['] },', '#D4D4D4'], '\\n            ', ['},', '#D4D4D4'], '\\n            ', ['required:', '#9CDCFE'], ' ', ['[', '#D4D4D4'], ['\"location\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['\"unit\"', '#CE9178'], ['],', '#D4D4D4'], '\\n        ', ['},', '#D4D4D4'], '\\n    ', ['},', '#D4D4D4'], '\\n', ['];', '#D4D4D4'], '\\n\\n', ['const', '#569CD6'], ' ', ['response', '#4FC1FF'], ' ', ['=', '#D4D4D4'], ' ', ['await', '#C586C0'], ' ', ['openai', '#9CDCFE'], ['.', '#D4D4D4'], ['responses', '#9CDCFE'], ['.', '#D4D4D4'], ['create', '#DCDCAA'], ['({', '#D4D4D4'], '\\n    ', ['model:', '#9CDCFE'], ' ', ['\"gpt-4.1\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['tools: tools', '#9CDCFE'], [',', '#D4D4D4'], '\\n    ', ['input:', '#9CDCFE'], ' ', ['\"What is the weather like in Boston today?\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['tool_choice:', '#9CDCFE'], ' ', ['\"auto\"', '#CE9178'], [',', '#D4D4D4'], '\\n', ['});', '#D4D4D4'], '\\n\\n', ['console', '#9CDCFE'], ['.', '#D4D4D4'], ['log', '#DCDCAA'], ['(', '#D4D4D4'], ['response', '#9CDCFE'], [');', '#D4D4D4'], '\\n'],\n                  value: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nconst tools = [\\n    {\\n        type: \"function\",\\n        name: \"get_current_weather\",\\n        description: \"Get the current weather in a given location\",\\n        parameters: {\\n            type: \"object\",\\n            properties: {\\n                location: {\\n                    type: \"string\",\\n                    description: \"The city and state, e.g. San Francisco, CA\",\\n                },\\n                unit: { type: \"string\", enum: [\"celsius\", \"fahrenheit\"] },\\n            },\\n            required: [\"location\", \"unit\"],\\n        },\\n    },\\n];\\n\\nconst response = await openai.responses.create({\\n    model: \"gpt-4.1\",\\n    tools: tools,\\n    input: \"What is the weather like in Boston today?\",\\n    tool_choice: \"auto\",\\n});\\n\\nconsole.log(response);\\n'\n                },\n                language: 'javascript',\n                title: 'javascript'\n              }, {\n                code: 'using System;\\nusing OpenAI.Responses;\\n\\nOpenAIResponseClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nResponseTool getCurrentWeatherFunctionTool = ResponseTool.CreateFunctionTool(\\n    functionName: \"get_current_weather\",\\n    functionDescription: \"Get the current weather in a given location\",\\n    functionParameters: BinaryData.FromString(\"\"\"\\n        {\\n            \"type\": \"object\",\\n            \"properties\": {\\n                \"location\": {\\n                    \"type\": \"string\",\\n                    \"description\": \"The city and state, e.g. San Francisco, CA\"\\n                },\\n                \"unit\": {\"type\": \"string\", \"enum\": [\"celsius\", \"fahrenheit\"]}\\n            },\\n            \"required\": [\"location\", \"unit\"]\\n        }\\n        \"\"\"\\n    )\\n);\\n\\nstring userInputText = \"What is the weather like in Boston today?\";\\n\\nResponseCreationOptions options = new()\\n{\\n    Tools =\\n    {\\n        getCurrentWeatherFunctionTool\\n    },\\n    ToolChoice = ResponseToolChoice.CreateAutoChoice(),\\n};\\n\\nOpenAIResponse response = client.CreateResponse(userInputText, options);\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'using System;\\nusing OpenAI.Responses;\\n\\nOpenAIResponseClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nResponseTool getCurrentWeatherFunctionTool = ResponseTool.CreateFunctionTool(\\n    functionName: \"get_current_weather\",\\n    functionDescription: \"Get the current weather in a given location\",\\n    functionParameters: BinaryData.FromString(\"\"\"\\n        {\\n            \"type\": \"object\",\\n            \"properties\": {\\n                \"location\": {\\n                    \"type\": \"string\",\\n                    \"description\": \"The city and state, e.g. San Francisco, CA\"\\n                },\\n                \"unit\": {\"type\": \"string\", \"enum\": [\"celsius\", \"fahrenheit\"]}\\n            },\\n            \"required\": [\"location\", \"unit\"]\\n        }\\n        \"\"\"\\n    )\\n);\\n\\nstring userInputText = \"What is the weather like in Boston today?\";\\n\\nResponseCreationOptions options = new()\\n{\\n    Tools =\\n    {\\n        getCurrentWeatherFunctionTool\\n    },\\n    ToolChoice = ResponseToolChoice.CreateAutoChoice(),\\n};\\n\\nOpenAIResponse response = client.CreateResponse(userInputText, options);\\n',\n                  lang: 'csharp',\n                  meta: 'csharp',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['using', '#569CD6'], ' ', ['System', '#4EC9B0'], [';', '#D4D4D4'], '\\n', ['using', '#569CD6'], ' ', ['OpenAI', '#4EC9B0'], ['.', '#D4D4D4'], ['Responses', '#4EC9B0'], [';', '#D4D4D4'], '\\n\\n', ['OpenAIResponseClient', '#4EC9B0'], ' ', ['client', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ['(', '#D4D4D4'], '\\n    ', ['model', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"gpt-4.1\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['apiKey', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['Environment', '#9CDCFE'], ['.', '#D4D4D4'], ['GetEnvironmentVariable', '#DCDCAA'], ['(', '#D4D4D4'], ['\"OPENAI_API_KEY\"', '#CE9178'], [')', '#D4D4D4'], '\\n', [');', '#D4D4D4'], '\\n\\n', ['ResponseTool', '#4EC9B0'], ' ', ['getCurrentWeatherFunctionTool', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['ResponseTool', '#9CDCFE'], ['.', '#D4D4D4'], ['CreateFunctionTool', '#DCDCAA'], ['(', '#D4D4D4'], '\\n    ', ['functionName', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"get_current_weather\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['functionDescription', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"Get the current weather in a given location\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['functionParameters', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['BinaryData', '#9CDCFE'], ['.', '#D4D4D4'], ['FromString', '#DCDCAA'], ['(', '#D4D4D4'], ['\"\"\"', '#CE9178'], '\\n        ', ['{', '#CE9178'], '\\n            ', ['\"type\": \"object\",', '#CE9178'], '\\n            ', ['\"properties\": {', '#CE9178'], '\\n                ', ['\"location\": {', '#CE9178'], '\\n                    ', ['\"type\": \"string\",', '#CE9178'], '\\n                    ', ['\"description\": \"The city and state, e.g. San Francisco, CA\"', '#CE9178'], '\\n                ', ['},', '#CE9178'], '\\n                ', ['\"unit\": {\"type\": \"string\", \"enum\": [\"celsius\", \"fahrenheit\"]}', '#CE9178'], '\\n            ', ['},', '#CE9178'], '\\n            ', ['\"required\": [\"location\", \"unit\"]', '#CE9178'], '\\n        ', ['}', '#CE9178'], '\\n        ', ['\"\"\"', '#CE9178'], '\\n    ', [')', '#D4D4D4'], '\\n', [');', '#D4D4D4'], '\\n\\n', ['string', '#569CD6'], ' ', ['userInputText', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['\"What is the weather like in Boston today?\"', '#CE9178'], [';', '#D4D4D4'], '\\n\\n', ['ResponseCreationOptions', '#4EC9B0'], ' ', ['options', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ['()', '#D4D4D4'], '\\n', ['{', '#D4D4D4'], '\\n    ', ['Tools', '#9CDCFE'], ' ', ['=', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], '\\n        ', ['getCurrentWeatherFunctionTool', '#9CDCFE'], '\\n    ', ['},', '#D4D4D4'], '\\n    ', ['ToolChoice', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['ResponseToolChoice', '#9CDCFE'], ['.', '#D4D4D4'], ['CreateAutoChoice', '#DCDCAA'], ['(),', '#D4D4D4'], '\\n', ['};', '#D4D4D4'], '\\n\\n', ['OpenAIResponse', '#4EC9B0'], ' ', ['response', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['client', '#9CDCFE'], ['.', '#D4D4D4'], ['CreateResponse', '#DCDCAA'], ['(', '#D4D4D4'], ['userInputText', '#9CDCFE'], [',', '#D4D4D4'], ' ', ['options', '#9CDCFE'], [');', '#D4D4D4'], '\\n'],\n                  value: 'using System;\\nusing OpenAI.Responses;\\n\\nOpenAIResponseClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nResponseTool getCurrentWeatherFunctionTool = ResponseTool.CreateFunctionTool(\\n    functionName: \"get_current_weather\",\\n    functionDescription: \"Get the current weather in a given location\",\\n    functionParameters: BinaryData.FromString(\"\"\"\\n        {\\n            \"type\": \"object\",\\n            \"properties\": {\\n                \"location\": {\\n                    \"type\": \"string\",\\n                    \"description\": \"The city and state, e.g. San Francisco, CA\"\\n                },\\n                \"unit\": {\"type\": \"string\", \"enum\": [\"celsius\", \"fahrenheit\"]}\\n            },\\n            \"required\": [\"location\", \"unit\"]\\n        }\\n        \"\"\"\\n    )\\n);\\n\\nstring userInputText = \"What is the weather like in Boston today?\";\\n\\nResponseCreationOptions options = new()\\n{\\n    Tools =\\n    {\\n        getCurrentWeatherFunctionTool\\n    },\\n    ToolChoice = ResponseToolChoice.CreateAutoChoice(),\\n};\\n\\nOpenAIResponse response = client.CreateResponse(userInputText, options);\\n'\n                },\n                language: 'csharp',\n                title: 'csharp'\n              }],\n              title: 'Functions'\n            },\n            description: 'Functions'\n          }, {\n            codeblock: {\n              tabs: [{\n                code: 'curl https://api.openai.com/v1/responses \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"o3-mini\",\\n    \"input\": \"How much wood would a woodchuck chuck?\",\\n    \"reasoning\": {\\n      \"effort\": \"high\"\\n    }\\n  }\\'\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'curl https://api.openai.com/v1/responses \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"o3-mini\",\\n    \"input\": \"How much wood would a woodchuck chuck?\",\\n    \"reasoning\": {\\n      \"effort\": \"high\"\\n    }\\n  }\\'\\n',\n                  lang: 'shellscript',\n                  meta: 'curl',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['curl', '#DCDCAA'], ' ', ['https://api.openai.com/v1/responses', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-H \"Content-Type: application/json\"', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-H \"Authorization: Bearer', '#CE9178'], ' ', ['$OPENAI_API_KEY', '#9CDCFE'], ['\"', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-d \\'{', '#CE9178'], '\\n    ', ['\"model\": \"o3-mini\",', '#CE9178'], '\\n    ', ['\"input\": \"How much wood would a woodchuck chuck?\",', '#CE9178'], '\\n    ', ['\"reasoning\": {', '#CE9178'], '\\n      ', ['\"effort\": \"high\"', '#CE9178'], '\\n    ', ['}', '#CE9178'], '\\n  ', ['}\\'', '#CE9178'], '\\n'],\n                  value: 'curl https://api.openai.com/v1/responses \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"o3-mini\",\\n    \"input\": \"How much wood would a woodchuck chuck?\",\\n    \"reasoning\": {\\n      \"effort\": \"high\"\\n    }\\n  }\\'\\n'\n                },\n                language: 'bash',\n                title: 'curl'\n              }, {\n                code: 'import OpenAI from \"openai\";\\nconst openai = new OpenAI();\\n\\nconst response = await openai.responses.create({\\n    model: \"o3-mini\",\\n    input: \"How much wood would a woodchuck chuck?\",\\n    reasoning: {\\n      effort: \"high\"\\n    }\\n});\\n\\nconsole.log(response);\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'import OpenAI from \"openai\";\\nconst openai = new OpenAI();\\n\\nconst response = await openai.responses.create({\\n    model: \"o3-mini\",\\n    input: \"How much wood would a woodchuck chuck?\",\\n    reasoning: {\\n      effort: \"high\"\\n    }\\n});\\n\\nconsole.log(response);\\n',\n                  lang: 'javascript',\n                  meta: 'javascript',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['import', '#C586C0'], ' ', ['OpenAI', '#9CDCFE'], ' ', ['from', '#C586C0'], ' ', ['\"openai\"', '#CE9178'], [';', '#D4D4D4'], '\\n', ['const', '#569CD6'], ' ', ['openai', '#4FC1FF'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ' ', ['OpenAI', '#DCDCAA'], ['();', '#D4D4D4'], '\\n\\n', ['const', '#569CD6'], ' ', ['response', '#4FC1FF'], ' ', ['=', '#D4D4D4'], ' ', ['await', '#C586C0'], ' ', ['openai', '#9CDCFE'], ['.', '#D4D4D4'], ['responses', '#9CDCFE'], ['.', '#D4D4D4'], ['create', '#DCDCAA'], ['({', '#D4D4D4'], '\\n    ', ['model:', '#9CDCFE'], ' ', ['\"o3-mini\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['input:', '#9CDCFE'], ' ', ['\"How much wood would a woodchuck chuck?\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['reasoning:', '#9CDCFE'], ' ', ['{', '#D4D4D4'], '\\n      ', ['effort:', '#9CDCFE'], ' ', ['\"high\"', '#CE9178'], '\\n    ', ['}', '#D4D4D4'], '\\n', ['});', '#D4D4D4'], '\\n\\n', ['console', '#9CDCFE'], ['.', '#D4D4D4'], ['log', '#DCDCAA'], ['(', '#D4D4D4'], ['response', '#9CDCFE'], [');', '#D4D4D4'], '\\n'],\n                  value: 'import OpenAI from \"openai\";\\nconst openai = new OpenAI();\\n\\nconst response = await openai.responses.create({\\n    model: \"o3-mini\",\\n    input: \"How much wood would a woodchuck chuck?\",\\n    reasoning: {\\n      effort: \"high\"\\n    }\\n});\\n\\nconsole.log(response);\\n'\n                },\n                language: 'javascript',\n                title: 'javascript'\n              }, {\n                code: 'from openai import OpenAI\\nclient = OpenAI()\\n\\nresponse = client.responses.create(\\n    model=\"o3-mini\",\\n    input=\"How much wood would a woodchuck chuck?\",\\n    reasoning={\\n        \"effort\": \"high\"\\n    }\\n)\\n\\nprint(response)\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'from openai import OpenAI\\nclient = OpenAI()\\n\\nresponse = client.responses.create(\\n    model=\"o3-mini\",\\n    input=\"How much wood would a woodchuck chuck?\",\\n    reasoning={\\n        \"effort\": \"high\"\\n    }\\n)\\n\\nprint(response)\\n',\n                  lang: 'python',\n                  meta: 'python',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['from', '#C586C0'], ' ', ['openai', '#D4D4D4'], ' ', ['import', '#C586C0'], ' ', ['OpenAI', '#D4D4D4'], '\\n', ['client = OpenAI()', '#D4D4D4'], '\\n\\n', ['response = client.responses.create(', '#D4D4D4'], '\\n    ', ['model', '#9CDCFE'], ['=', '#D4D4D4'], ['\"o3-mini\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['input', '#9CDCFE'], ['=', '#D4D4D4'], ['\"How much wood would a woodchuck chuck?\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['reasoning', '#9CDCFE'], ['={', '#D4D4D4'], '\\n        ', ['\"effort\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"high\"', '#CE9178'], '\\n    ', ['}', '#D4D4D4'], '\\n', [')', '#D4D4D4'], '\\n\\n', ['print', '#DCDCAA'], ['(response)', '#D4D4D4'], '\\n'],\n                  value: 'from openai import OpenAI\\nclient = OpenAI()\\n\\nresponse = client.responses.create(\\n    model=\"o3-mini\",\\n    input=\"How much wood would a woodchuck chuck?\",\\n    reasoning={\\n        \"effort\": \"high\"\\n    }\\n)\\n\\nprint(response)\\n'\n                },\n                language: 'python',\n                title: 'python'\n              }, {\n                code: 'using System;\\nusing OpenAI.Responses;\\n\\nOpenAIResponseClient client = new(\\n    model: \"o3-mini\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nstring userInputText = \"How much wood would a woodchuck chuck?\";\\n\\nResponseCreationOptions options = new()\\n{\\n    ReasoningOptions = new()\\n    {\\n        ReasoningEffortLevel = ResponseReasoningEffortLevel.High,\\n    },\\n};\\n\\nOpenAIResponse response = client.CreateResponse(userInputText, options);\\n\\nConsole.WriteLine(response.GetOutputText());\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'using System;\\nusing OpenAI.Responses;\\n\\nOpenAIResponseClient client = new(\\n    model: \"o3-mini\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nstring userInputText = \"How much wood would a woodchuck chuck?\";\\n\\nResponseCreationOptions options = new()\\n{\\n    ReasoningOptions = new()\\n    {\\n        ReasoningEffortLevel = ResponseReasoningEffortLevel.High,\\n    },\\n};\\n\\nOpenAIResponse response = client.CreateResponse(userInputText, options);\\n\\nConsole.WriteLine(response.GetOutputText());\\n',\n                  lang: 'csharp',\n                  meta: 'csharp',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['using', '#569CD6'], ' ', ['System', '#4EC9B0'], [';', '#D4D4D4'], '\\n', ['using', '#569CD6'], ' ', ['OpenAI', '#4EC9B0'], ['.', '#D4D4D4'], ['Responses', '#4EC9B0'], [';', '#D4D4D4'], '\\n\\n', ['OpenAIResponseClient', '#4EC9B0'], ' ', ['client', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ['(', '#D4D4D4'], '\\n    ', ['model', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"o3-mini\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['apiKey', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['Environment', '#9CDCFE'], ['.', '#D4D4D4'], ['GetEnvironmentVariable', '#DCDCAA'], ['(', '#D4D4D4'], ['\"OPENAI_API_KEY\"', '#CE9178'], [')', '#D4D4D4'], '\\n', [');', '#D4D4D4'], '\\n\\n', ['string', '#569CD6'], ' ', ['userInputText', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['\"How much wood would a woodchuck chuck?\"', '#CE9178'], [';', '#D4D4D4'], '\\n\\n', ['ResponseCreationOptions', '#4EC9B0'], ' ', ['options', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ['()', '#D4D4D4'], '\\n', ['{', '#D4D4D4'], '\\n    ', ['ReasoningOptions', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ['()', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], '\\n        ', ['ReasoningEffortLevel', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['ResponseReasoningEffortLevel', '#9CDCFE'], ['.', '#D4D4D4'], ['High', '#9CDCFE'], [',', '#D4D4D4'], '\\n    ', ['},', '#D4D4D4'], '\\n', ['};', '#D4D4D4'], '\\n\\n', ['OpenAIResponse', '#4EC9B0'], ' ', ['response', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['client', '#9CDCFE'], ['.', '#D4D4D4'], ['CreateResponse', '#DCDCAA'], ['(', '#D4D4D4'], ['userInputText', '#9CDCFE'], [',', '#D4D4D4'], ' ', ['options', '#9CDCFE'], [');', '#D4D4D4'], '\\n\\n', ['Console', '#9CDCFE'], ['.', '#D4D4D4'], ['WriteLine', '#DCDCAA'], ['(', '#D4D4D4'], ['response', '#9CDCFE'], ['.', '#D4D4D4'], ['GetOutputText', '#DCDCAA'], ['());', '#D4D4D4'], '\\n'],\n                  value: 'using System;\\nusing OpenAI.Responses;\\n\\nOpenAIResponseClient client = new(\\n    model: \"o3-mini\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nstring userInputText = \"How much wood would a woodchuck chuck?\";\\n\\nResponseCreationOptions options = new()\\n{\\n    ReasoningOptions = new()\\n    {\\n        ReasoningEffortLevel = ResponseReasoningEffortLevel.High,\\n    },\\n};\\n\\nOpenAIResponse response = client.CreateResponse(userInputText, options);\\n\\nConsole.WriteLine(response.GetOutputText());\\n'\n                },\n                language: 'csharp',\n                title: 'csharp'\n              }],\n              title: 'Reasoning'\n            },\n            description: 'Reasoning'\n          }]\n        }, {\n          description: 'Example response',\n          examples: [{\n            codeblock: {\n              tabs: [{\n                code: '{\\n  \"id\": \"resp_67ccd2bed1ec8190b14f964abc0542670bb6a6b452d3795b\",\\n  \"object\": \"response\",\\n  \"created_at\": 1741476542,\\n  \"status\": \"completed\",\\n  \"error\": null,\\n  \"incomplete_details\": null,\\n  \"instructions\": null,\\n  \"max_output_tokens\": null,\\n  \"model\": \"gpt-4.1-2025-04-14\",\\n  \"output\": [\\n    {\\n      \"type\": \"message\",\\n      \"id\": \"msg_67ccd2bf17f0819081ff3bb2cf6508e60bb6a6b452d3795b\",\\n      \"status\": \"completed\",\\n      \"role\": \"assistant\",\\n      \"content\": [\\n        {\\n          \"type\": \"output_text\",\\n          \"text\": \"In a peaceful grove beneath a silver moon, a unicorn named Lumina discovered a hidden pool that reflected the stars. As she dipped her horn into the water, the pool began to shimmer, revealing a pathway to a magical realm of endless night skies. Filled with wonder, Lumina whispered a wish for all who dream to find their own hidden magic, and as she glanced back, her hoofprints sparkled like stardust.\",\\n          \"annotations\": []\\n        }\\n      ]\\n    }\\n  ],\\n  \"parallel_tool_calls\": true,\\n  \"previous_response_id\": null,\\n  \"reasoning\": {\\n    \"effort\": null,\\n    \"summary\": null\\n  },\\n  \"store\": true,\\n  \"temperature\": 1.0,\\n  \"text\": {\\n    \"format\": {\\n      \"type\": \"text\"\\n    }\\n  },\\n  \"tool_choice\": \"auto\",\\n  \"tools\": [],\\n  \"top_p\": 1.0,\\n  \"truncation\": \"disabled\",\\n  \"usage\": {\\n    \"input_tokens\": 36,\\n    \"input_tokens_details\": {\\n      \"cached_tokens\": 0\\n    },\\n    \"output_tokens\": 87,\\n    \"output_tokens_details\": {\\n      \"reasoning_tokens\": 0\\n    },\\n    \"total_tokens\": 123\\n  },\\n  \"user\": null,\\n  \"metadata\": {}\\n}\\n',\n                highlighted: {\n                  annotations: [],\n                  code: '{\\n  \"id\": \"resp_67ccd2bed1ec8190b14f964abc0542670bb6a6b452d3795b\",\\n  \"object\": \"response\",\\n  \"created_at\": 1741476542,\\n  \"status\": \"completed\",\\n  \"error\": null,\\n  \"incomplete_details\": null,\\n  \"instructions\": null,\\n  \"max_output_tokens\": null,\\n  \"model\": \"gpt-4.1-2025-04-14\",\\n  \"output\": [\\n    {\\n      \"type\": \"message\",\\n      \"id\": \"msg_67ccd2bf17f0819081ff3bb2cf6508e60bb6a6b452d3795b\",\\n      \"status\": \"completed\",\\n      \"role\": \"assistant\",\\n      \"content\": [\\n        {\\n          \"type\": \"output_text\",\\n          \"text\": \"In a peaceful grove beneath a silver moon, a unicorn named Lumina discovered a hidden pool that reflected the stars. As she dipped her horn into the water, the pool began to shimmer, revealing a pathway to a magical realm of endless night skies. Filled with wonder, Lumina whispered a wish for all who dream to find their own hidden magic, and as she glanced back, her hoofprints sparkled like stardust.\",\\n          \"annotations\": []\\n        }\\n      ]\\n    }\\n  ],\\n  \"parallel_tool_calls\": true,\\n  \"previous_response_id\": null,\\n  \"reasoning\": {\\n    \"effort\": null,\\n    \"summary\": null\\n  },\\n  \"store\": true,\\n  \"temperature\": 1.0,\\n  \"text\": {\\n    \"format\": {\\n      \"type\": \"text\"\\n    }\\n  },\\n  \"tool_choice\": \"auto\",\\n  \"tools\": [],\\n  \"top_p\": 1.0,\\n  \"truncation\": \"disabled\",\\n  \"usage\": {\\n    \"input_tokens\": 36,\\n    \"input_tokens_details\": {\\n      \"cached_tokens\": 0\\n    },\\n    \"output_tokens\": 87,\\n    \"output_tokens_details\": {\\n      \"reasoning_tokens\": 0\\n    },\\n    \"total_tokens\": 123\\n  },\\n  \"user\": null,\\n  \"metadata\": {}\\n}\\n',\n                  lang: 'json',\n                  meta: '',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['{', '#D4D4D4'], '\\n  ', ['\"id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"resp_67ccd2bed1ec8190b14f964abc0542670bb6a6b452d3795b\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"object\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"response\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"created_at\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1741476542', '#B5CEA8'], [',', '#D4D4D4'], '\\n  ', ['\"status\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"completed\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"error\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"incomplete_details\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"instructions\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"max_output_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"model\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"gpt-4.1-2025-04-14\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"output\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], '\\n      ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"message\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"msg_67ccd2bf17f0819081ff3bb2cf6508e60bb6a6b452d3795b\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"status\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"completed\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"role\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"assistant\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"content\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n        ', ['{', '#D4D4D4'], '\\n          ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"output_text\"', '#CE9178'], [',', '#D4D4D4'], '\\n          ', ['\"text\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"In a peaceful grove beneath a silver moon, a unicorn named Lumina discovered a hidden pool that reflected the stars. As she dipped her horn into the water, the pool began to shimmer, revealing a pathway to a magical realm of endless night skies. Filled with wonder, Lumina whispered a wish for all who dream to find their own hidden magic, and as she glanced back, her hoofprints sparkled like stardust.\"', '#CE9178'], [',', '#D4D4D4'], '\\n          ', ['\"annotations\"', '#9CDCFE'], [': []', '#D4D4D4'], '\\n        ', ['}', '#D4D4D4'], '\\n      ', [']', '#D4D4D4'], '\\n    ', ['}', '#D4D4D4'], '\\n  ', ['],', '#D4D4D4'], '\\n  ', ['\"parallel_tool_calls\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['true', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"previous_response_id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"reasoning\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n    ', ['\"effort\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n    ', ['\"summary\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], '\\n  ', ['},', '#D4D4D4'], '\\n  ', ['\"store\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['true', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"temperature\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1.0', '#B5CEA8'], [',', '#D4D4D4'], '\\n  ', ['\"text\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n    ', ['\"format\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n      ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"text\"', '#CE9178'], '\\n    ', ['}', '#D4D4D4'], '\\n  ', ['},', '#D4D4D4'], '\\n  ', ['\"tool_choice\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"auto\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"tools\"', '#9CDCFE'], [': [],', '#D4D4D4'], '\\n  ', ['\"top_p\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1.0', '#B5CEA8'], [',', '#D4D4D4'], '\\n  ', ['\"truncation\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"disabled\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"usage\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n    ', ['\"input_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['36', '#B5CEA8'], [',', '#D4D4D4'], '\\n    ', ['\"input_tokens_details\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n      ', ['\"cached_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], '\\n    ', ['},', '#D4D4D4'], '\\n    ', ['\"output_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['87', '#B5CEA8'], [',', '#D4D4D4'], '\\n    ', ['\"output_tokens_details\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n      ', ['\"reasoning_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], '\\n    ', ['},', '#D4D4D4'], '\\n    ', ['\"total_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['123', '#B5CEA8'], '\\n  ', ['},', '#D4D4D4'], '\\n  ', ['\"user\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"metadata\"', '#9CDCFE'], [': {}', '#D4D4D4'], '\\n', ['}', '#D4D4D4'], '\\n'],\n                  value: '{\\n  \"id\": \"resp_67ccd2bed1ec8190b14f964abc0542670bb6a6b452d3795b\",\\n  \"object\": \"response\",\\n  \"created_at\": 1741476542,\\n  \"status\": \"completed\",\\n  \"error\": null,\\n  \"incomplete_details\": null,\\n  \"instructions\": null,\\n  \"max_output_tokens\": null,\\n  \"model\": \"gpt-4.1-2025-04-14\",\\n  \"output\": [\\n    {\\n      \"type\": \"message\",\\n      \"id\": \"msg_67ccd2bf17f0819081ff3bb2cf6508e60bb6a6b452d3795b\",\\n      \"status\": \"completed\",\\n      \"role\": \"assistant\",\\n      \"content\": [\\n        {\\n          \"type\": \"output_text\",\\n          \"text\": \"In a peaceful grove beneath a silver moon, a unicorn named Lumina discovered a hidden pool that reflected the stars. As she dipped her horn into the water, the pool began to shimmer, revealing a pathway to a magical realm of endless night skies. Filled with wonder, Lumina whispered a wish for all who dream to find their own hidden magic, and as she glanced back, her hoofprints sparkled like stardust.\",\\n          \"annotations\": []\\n        }\\n      ]\\n    }\\n  ],\\n  \"parallel_tool_calls\": true,\\n  \"previous_response_id\": null,\\n  \"reasoning\": {\\n    \"effort\": null,\\n    \"summary\": null\\n  },\\n  \"store\": true,\\n  \"temperature\": 1.0,\\n  \"text\": {\\n    \"format\": {\\n      \"type\": \"text\"\\n    }\\n  },\\n  \"tool_choice\": \"auto\",\\n  \"tools\": [],\\n  \"top_p\": 1.0,\\n  \"truncation\": \"disabled\",\\n  \"usage\": {\\n    \"input_tokens\": 36,\\n    \"input_tokens_details\": {\\n      \"cached_tokens\": 0\\n    },\\n    \"output_tokens\": 87,\\n    \"output_tokens_details\": {\\n      \"reasoning_tokens\": 0\\n    },\\n    \"total_tokens\": 123\\n  },\\n  \"user\": null,\\n  \"metadata\": {}\\n}\\n'\n                },\n                language: 'json',\n                title: ''\n              }],\n              title: 'Text input'\n            },\n            description: 'Text input'\n          }, {\n            codeblock: {\n              tabs: [{\n                code: '{\\n  \"id\": \"resp_67ccd3a9da748190baa7f1570fe91ac604becb25c45c1d41\",\\n  \"object\": \"response\",\\n  \"created_at\": 1741476777,\\n  \"status\": \"completed\",\\n  \"error\": null,\\n  \"incomplete_details\": null,\\n  \"instructions\": null,\\n  \"max_output_tokens\": null,\\n  \"model\": \"gpt-4.1-2025-04-14\",\\n  \"output\": [\\n    {\\n      \"type\": \"message\",\\n      \"id\": \"msg_67ccd3acc8d48190a77525dc6de64b4104becb25c45c1d41\",\\n      \"status\": \"completed\",\\n      \"role\": \"assistant\",\\n      \"content\": [\\n        {\\n          \"type\": \"output_text\",\\n          \"text\": \"The image depicts a scenic landscape with a wooden boardwalk or pathway leading through lush, green grass under a blue sky with some clouds. The setting suggests a peaceful natural area, possibly a park or nature reserve. There are trees and shrubs in the background.\",\\n          \"annotations\": []\\n        }\\n      ]\\n    }\\n  ],\\n  \"parallel_tool_calls\": true,\\n  \"previous_response_id\": null,\\n  \"reasoning\": {\\n    \"effort\": null,\\n    \"summary\": null\\n  },\\n  \"store\": true,\\n  \"temperature\": 1.0,\\n  \"text\": {\\n    \"format\": {\\n      \"type\": \"text\"\\n    }\\n  },\\n  \"tool_choice\": \"auto\",\\n  \"tools\": [],\\n  \"top_p\": 1.0,\\n  \"truncation\": \"disabled\",\\n  \"usage\": {\\n    \"input_tokens\": 328,\\n    \"input_tokens_details\": {\\n      \"cached_tokens\": 0\\n    },\\n    \"output_tokens\": 52,\\n    \"output_tokens_details\": {\\n      \"reasoning_tokens\": 0\\n    },\\n    \"total_tokens\": 380\\n  },\\n  \"user\": null,\\n  \"metadata\": {}\\n}\\n',\n                highlighted: {\n                  annotations: [],\n                  code: '{\\n  \"id\": \"resp_67ccd3a9da748190baa7f1570fe91ac604becb25c45c1d41\",\\n  \"object\": \"response\",\\n  \"created_at\": 1741476777,\\n  \"status\": \"completed\",\\n  \"error\": null,\\n  \"incomplete_details\": null,\\n  \"instructions\": null,\\n  \"max_output_tokens\": null,\\n  \"model\": \"gpt-4.1-2025-04-14\",\\n  \"output\": [\\n    {\\n      \"type\": \"message\",\\n      \"id\": \"msg_67ccd3acc8d48190a77525dc6de64b4104becb25c45c1d41\",\\n      \"status\": \"completed\",\\n      \"role\": \"assistant\",\\n      \"content\": [\\n        {\\n          \"type\": \"output_text\",\\n          \"text\": \"The image depicts a scenic landscape with a wooden boardwalk or pathway leading through lush, green grass under a blue sky with some clouds. The setting suggests a peaceful natural area, possibly a park or nature reserve. There are trees and shrubs in the background.\",\\n          \"annotations\": []\\n        }\\n      ]\\n    }\\n  ],\\n  \"parallel_tool_calls\": true,\\n  \"previous_response_id\": null,\\n  \"reasoning\": {\\n    \"effort\": null,\\n    \"summary\": null\\n  },\\n  \"store\": true,\\n  \"temperature\": 1.0,\\n  \"text\": {\\n    \"format\": {\\n      \"type\": \"text\"\\n    }\\n  },\\n  \"tool_choice\": \"auto\",\\n  \"tools\": [],\\n  \"top_p\": 1.0,\\n  \"truncation\": \"disabled\",\\n  \"usage\": {\\n    \"input_tokens\": 328,\\n    \"input_tokens_details\": {\\n      \"cached_tokens\": 0\\n    },\\n    \"output_tokens\": 52,\\n    \"output_tokens_details\": {\\n      \"reasoning_tokens\": 0\\n    },\\n    \"total_tokens\": 380\\n  },\\n  \"user\": null,\\n  \"metadata\": {}\\n}\\n',\n                  lang: 'json',\n                  meta: '',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['{', '#D4D4D4'], '\\n  ', ['\"id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"resp_67ccd3a9da748190baa7f1570fe91ac604becb25c45c1d41\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"object\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"response\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"created_at\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1741476777', '#B5CEA8'], [',', '#D4D4D4'], '\\n  ', ['\"status\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"completed\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"error\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"incomplete_details\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"instructions\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"max_output_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"model\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"gpt-4.1-2025-04-14\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"output\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], '\\n      ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"message\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"msg_67ccd3acc8d48190a77525dc6de64b4104becb25c45c1d41\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"status\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"completed\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"role\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"assistant\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"content\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n        ', ['{', '#D4D4D4'], '\\n          ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"output_text\"', '#CE9178'], [',', '#D4D4D4'], '\\n          ', ['\"text\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"The image depicts a scenic landscape with a wooden boardwalk or pathway leading through lush, green grass under a blue sky with some clouds. The setting suggests a peaceful natural area, possibly a park or nature reserve. There are trees and shrubs in the background.\"', '#CE9178'], [',', '#D4D4D4'], '\\n          ', ['\"annotations\"', '#9CDCFE'], [': []', '#D4D4D4'], '\\n        ', ['}', '#D4D4D4'], '\\n      ', [']', '#D4D4D4'], '\\n    ', ['}', '#D4D4D4'], '\\n  ', ['],', '#D4D4D4'], '\\n  ', ['\"parallel_tool_calls\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['true', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"previous_response_id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"reasoning\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n    ', ['\"effort\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n    ', ['\"summary\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], '\\n  ', ['},', '#D4D4D4'], '\\n  ', ['\"store\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['true', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"temperature\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1.0', '#B5CEA8'], [',', '#D4D4D4'], '\\n  ', ['\"text\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n    ', ['\"format\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n      ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"text\"', '#CE9178'], '\\n    ', ['}', '#D4D4D4'], '\\n  ', ['},', '#D4D4D4'], '\\n  ', ['\"tool_choice\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"auto\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"tools\"', '#9CDCFE'], [': [],', '#D4D4D4'], '\\n  ', ['\"top_p\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1.0', '#B5CEA8'], [',', '#D4D4D4'], '\\n  ', ['\"truncation\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"disabled\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"usage\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n    ', ['\"input_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['328', '#B5CEA8'], [',', '#D4D4D4'], '\\n    ', ['\"input_tokens_details\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n      ', ['\"cached_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], '\\n    ', ['},', '#D4D4D4'], '\\n    ', ['\"output_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['52', '#B5CEA8'], [',', '#D4D4D4'], '\\n    ', ['\"output_tokens_details\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n      ', ['\"reasoning_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], '\\n    ', ['},', '#D4D4D4'], '\\n    ', ['\"total_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['380', '#B5CEA8'], '\\n  ', ['},', '#D4D4D4'], '\\n  ', ['\"user\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"metadata\"', '#9CDCFE'], [': {}', '#D4D4D4'], '\\n', ['}', '#D4D4D4'], '\\n'],\n                  value: '{\\n  \"id\": \"resp_67ccd3a9da748190baa7f1570fe91ac604becb25c45c1d41\",\\n  \"object\": \"response\",\\n  \"created_at\": 1741476777,\\n  \"status\": \"completed\",\\n  \"error\": null,\\n  \"incomplete_details\": null,\\n  \"instructions\": null,\\n  \"max_output_tokens\": null,\\n  \"model\": \"gpt-4.1-2025-04-14\",\\n  \"output\": [\\n    {\\n      \"type\": \"message\",\\n      \"id\": \"msg_67ccd3acc8d48190a77525dc6de64b4104becb25c45c1d41\",\\n      \"status\": \"completed\",\\n      \"role\": \"assistant\",\\n      \"content\": [\\n        {\\n          \"type\": \"output_text\",\\n          \"text\": \"The image depicts a scenic landscape with a wooden boardwalk or pathway leading through lush, green grass under a blue sky with some clouds. The setting suggests a peaceful natural area, possibly a park or nature reserve. There are trees and shrubs in the background.\",\\n          \"annotations\": []\\n        }\\n      ]\\n    }\\n  ],\\n  \"parallel_tool_calls\": true,\\n  \"previous_response_id\": null,\\n  \"reasoning\": {\\n    \"effort\": null,\\n    \"summary\": null\\n  },\\n  \"store\": true,\\n  \"temperature\": 1.0,\\n  \"text\": {\\n    \"format\": {\\n      \"type\": \"text\"\\n    }\\n  },\\n  \"tool_choice\": \"auto\",\\n  \"tools\": [],\\n  \"top_p\": 1.0,\\n  \"truncation\": \"disabled\",\\n  \"usage\": {\\n    \"input_tokens\": 328,\\n    \"input_tokens_details\": {\\n      \"cached_tokens\": 0\\n    },\\n    \"output_tokens\": 52,\\n    \"output_tokens_details\": {\\n      \"reasoning_tokens\": 0\\n    },\\n    \"total_tokens\": 380\\n  },\\n  \"user\": null,\\n  \"metadata\": {}\\n}\\n'\n                },\n                language: 'json',\n                title: ''\n              }],\n              title: 'Image input'\n            },\n            description: 'Image input'\n          }, {\n            codeblock: {\n              tabs: [{\n                code: '{\\n  \"id\": \"resp_67ccf18ef5fc8190b16dbee19bc54e5f087bb177ab789d5c\",\\n  \"object\": \"response\",\\n  \"created_at\": 1741484430,\\n  \"status\": \"completed\",\\n  \"error\": null,\\n  \"incomplete_details\": null,\\n  \"instructions\": null,\\n  \"max_output_tokens\": null,\\n  \"model\": \"gpt-4.1-2025-04-14\",\\n  \"output\": [\\n    {\\n      \"type\": \"web_search_call\",\\n      \"id\": \"ws_67ccf18f64008190a39b619f4c8455ef087bb177ab789d5c\",\\n      \"status\": \"completed\"\\n    },\\n    {\\n      \"type\": \"message\",\\n      \"id\": \"msg_67ccf190ca3881909d433c50b1f6357e087bb177ab789d5c\",\\n      \"status\": \"completed\",\\n      \"role\": \"assistant\",\\n      \"content\": [\\n        {\\n          \"type\": \"output_text\",\\n          \"text\": \"As of today, March 9, 2025, one notable positive news story...\",\\n          \"annotations\": [\\n            {\\n              \"type\": \"url_citation\",\\n              \"start_index\": 442,\\n              \"end_index\": 557,\\n              \"url\": \"https://.../?utm_source=chatgpt.com\",\\n              \"title\": \"...\"\\n            },\\n            {\\n              \"type\": \"url_citation\",\\n              \"start_index\": 962,\\n              \"end_index\": 1077,\\n              \"url\": \"https://.../?utm_source=chatgpt.com\",\\n              \"title\": \"...\"\\n            },\\n            {\\n              \"type\": \"url_citation\",\\n              \"start_index\": 1336,\\n              \"end_index\": 1451,\\n              \"url\": \"https://.../?utm_source=chatgpt.com\",\\n              \"title\": \"...\"\\n            }\\n          ]\\n        }\\n      ]\\n    }\\n  ],\\n  \"parallel_tool_calls\": true,\\n  \"previous_response_id\": null,\\n  \"reasoning\": {\\n    \"effort\": null,\\n    \"summary\": null\\n  },\\n  \"store\": true,\\n  \"temperature\": 1.0,\\n  \"text\": {\\n    \"format\": {\\n      \"type\": \"text\"\\n    }\\n  },\\n  \"tool_choice\": \"auto\",\\n  \"tools\": [\\n    {\\n      \"type\": \"web_search_preview\",\\n      \"domains\": [],\\n      \"search_context_size\": \"medium\",\\n      \"user_location\": {\\n        \"type\": \"approximate\",\\n        \"city\": null,\\n        \"country\": \"US\",\\n        \"region\": null,\\n        \"timezone\": null\\n      }\\n    }\\n  ],\\n  \"top_p\": 1.0,\\n  \"truncation\": \"disabled\",\\n  \"usage\": {\\n    \"input_tokens\": 328,\\n    \"input_tokens_details\": {\\n      \"cached_tokens\": 0\\n    },\\n    \"output_tokens\": 356,\\n    \"output_tokens_details\": {\\n      \"reasoning_tokens\": 0\\n    },\\n    \"total_tokens\": 684\\n  },\\n  \"user\": null,\\n  \"metadata\": {}\\n}\\n',\n                highlighted: {\n                  annotations: [],\n                  code: '{\\n  \"id\": \"resp_67ccf18ef5fc8190b16dbee19bc54e5f087bb177ab789d5c\",\\n  \"object\": \"response\",\\n  \"created_at\": 1741484430,\\n  \"status\": \"completed\",\\n  \"error\": null,\\n  \"incomplete_details\": null,\\n  \"instructions\": null,\\n  \"max_output_tokens\": null,\\n  \"model\": \"gpt-4.1-2025-04-14\",\\n  \"output\": [\\n    {\\n      \"type\": \"web_search_call\",\\n      \"id\": \"ws_67ccf18f64008190a39b619f4c8455ef087bb177ab789d5c\",\\n      \"status\": \"completed\"\\n    },\\n    {\\n      \"type\": \"message\",\\n      \"id\": \"msg_67ccf190ca3881909d433c50b1f6357e087bb177ab789d5c\",\\n      \"status\": \"completed\",\\n      \"role\": \"assistant\",\\n      \"content\": [\\n        {\\n          \"type\": \"output_text\",\\n          \"text\": \"As of today, March 9, 2025, one notable positive news story...\",\\n          \"annotations\": [\\n            {\\n              \"type\": \"url_citation\",\\n              \"start_index\": 442,\\n              \"end_index\": 557,\\n              \"url\": \"https://.../?utm_source=chatgpt.com\",\\n              \"title\": \"...\"\\n            },\\n            {\\n              \"type\": \"url_citation\",\\n              \"start_index\": 962,\\n              \"end_index\": 1077,\\n              \"url\": \"https://.../?utm_source=chatgpt.com\",\\n              \"title\": \"...\"\\n            },\\n            {\\n              \"type\": \"url_citation\",\\n              \"start_index\": 1336,\\n              \"end_index\": 1451,\\n              \"url\": \"https://.../?utm_source=chatgpt.com\",\\n              \"title\": \"...\"\\n            }\\n          ]\\n        }\\n      ]\\n    }\\n  ],\\n  \"parallel_tool_calls\": true,\\n  \"previous_response_id\": null,\\n  \"reasoning\": {\\n    \"effort\": null,\\n    \"summary\": null\\n  },\\n  \"store\": true,\\n  \"temperature\": 1.0,\\n  \"text\": {\\n    \"format\": {\\n      \"type\": \"text\"\\n    }\\n  },\\n  \"tool_choice\": \"auto\",\\n  \"tools\": [\\n    {\\n      \"type\": \"web_search_preview\",\\n      \"domains\": [],\\n      \"search_context_size\": \"medium\",\\n      \"user_location\": {\\n        \"type\": \"approximate\",\\n        \"city\": null,\\n        \"country\": \"US\",\\n        \"region\": null,\\n        \"timezone\": null\\n      }\\n    }\\n  ],\\n  \"top_p\": 1.0,\\n  \"truncation\": \"disabled\",\\n  \"usage\": {\\n    \"input_tokens\": 328,\\n    \"input_tokens_details\": {\\n      \"cached_tokens\": 0\\n    },\\n    \"output_tokens\": 356,\\n    \"output_tokens_details\": {\\n      \"reasoning_tokens\": 0\\n    },\\n    \"total_tokens\": 684\\n  },\\n  \"user\": null,\\n  \"metadata\": {}\\n}\\n',\n                  lang: 'json',\n                  meta: '',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['{', '#D4D4D4'], '\\n  ', ['\"id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"resp_67ccf18ef5fc8190b16dbee19bc54e5f087bb177ab789d5c\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"object\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"response\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"created_at\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1741484430', '#B5CEA8'], [',', '#D4D4D4'], '\\n  ', ['\"status\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"completed\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"error\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"incomplete_details\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"instructions\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"max_output_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"model\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"gpt-4.1-2025-04-14\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"output\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], '\\n      ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"web_search_call\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"ws_67ccf18f64008190a39b619f4c8455ef087bb177ab789d5c\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"status\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"completed\"', '#CE9178'], '\\n    ', ['},', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], '\\n      ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"message\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"msg_67ccf190ca3881909d433c50b1f6357e087bb177ab789d5c\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"status\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"completed\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"role\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"assistant\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"content\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n        ', ['{', '#D4D4D4'], '\\n          ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"output_text\"', '#CE9178'], [',', '#D4D4D4'], '\\n          ', ['\"text\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"As of today, March 9, 2025, one notable positive news story...\"', '#CE9178'], [',', '#D4D4D4'], '\\n          ', ['\"annotations\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n            ', ['{', '#D4D4D4'], '\\n              ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"url_citation\"', '#CE9178'], [',', '#D4D4D4'], '\\n              ', ['\"start_index\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['442', '#B5CEA8'], [',', '#D4D4D4'], '\\n              ', ['\"end_index\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['557', '#B5CEA8'], [',', '#D4D4D4'], '\\n              ', ['\"url\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"https://.../?utm_source=chatgpt.com\"', '#CE9178'], [',', '#D4D4D4'], '\\n              ', ['\"title\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"...\"', '#CE9178'], '\\n            ', ['},', '#D4D4D4'], '\\n            ', ['{', '#D4D4D4'], '\\n              ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"url_citation\"', '#CE9178'], [',', '#D4D4D4'], '\\n              ', ['\"start_index\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['962', '#B5CEA8'], [',', '#D4D4D4'], '\\n              ', ['\"end_index\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1077', '#B5CEA8'], [',', '#D4D4D4'], '\\n              ', ['\"url\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"https://.../?utm_source=chatgpt.com\"', '#CE9178'], [',', '#D4D4D4'], '\\n              ', ['\"title\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"...\"', '#CE9178'], '\\n            ', ['},', '#D4D4D4'], '\\n            ', ['{', '#D4D4D4'], '\\n              ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"url_citation\"', '#CE9178'], [',', '#D4D4D4'], '\\n              ', ['\"start_index\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1336', '#B5CEA8'], [',', '#D4D4D4'], '\\n              ', ['\"end_index\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1451', '#B5CEA8'], [',', '#D4D4D4'], '\\n              ', ['\"url\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"https://.../?utm_source=chatgpt.com\"', '#CE9178'], [',', '#D4D4D4'], '\\n              ', ['\"title\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"...\"', '#CE9178'], '\\n            ', ['}', '#D4D4D4'], '\\n          ', [']', '#D4D4D4'], '\\n        ', ['}', '#D4D4D4'], '\\n      ', [']', '#D4D4D4'], '\\n    ', ['}', '#D4D4D4'], '\\n  ', ['],', '#D4D4D4'], '\\n  ', ['\"parallel_tool_calls\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['true', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"previous_response_id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"reasoning\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n    ', ['\"effort\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n    ', ['\"summary\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], '\\n  ', ['},', '#D4D4D4'], '\\n  ', ['\"store\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['true', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"temperature\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1.0', '#B5CEA8'], [',', '#D4D4D4'], '\\n  ', ['\"text\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n    ', ['\"format\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n      ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"text\"', '#CE9178'], '\\n    ', ['}', '#D4D4D4'], '\\n  ', ['},', '#D4D4D4'], '\\n  ', ['\"tool_choice\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"auto\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"tools\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], '\\n      ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"web_search_preview\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"domains\"', '#9CDCFE'], [': [],', '#D4D4D4'], '\\n      ', ['\"search_context_size\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"medium\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"user_location\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n        ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"approximate\"', '#CE9178'], [',', '#D4D4D4'], '\\n        ', ['\"city\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n        ', ['\"country\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"US\"', '#CE9178'], [',', '#D4D4D4'], '\\n        ', ['\"region\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n        ', ['\"timezone\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], '\\n      ', ['}', '#D4D4D4'], '\\n    ', ['}', '#D4D4D4'], '\\n  ', ['],', '#D4D4D4'], '\\n  ', ['\"top_p\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1.0', '#B5CEA8'], [',', '#D4D4D4'], '\\n  ', ['\"truncation\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"disabled\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"usage\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n    ', ['\"input_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['328', '#B5CEA8'], [',', '#D4D4D4'], '\\n    ', ['\"input_tokens_details\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n      ', ['\"cached_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], '\\n    ', ['},', '#D4D4D4'], '\\n    ', ['\"output_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['356', '#B5CEA8'], [',', '#D4D4D4'], '\\n    ', ['\"output_tokens_details\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n      ', ['\"reasoning_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], '\\n    ', ['},', '#D4D4D4'], '\\n    ', ['\"total_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['684', '#B5CEA8'], '\\n  ', ['},', '#D4D4D4'], '\\n  ', ['\"user\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"metadata\"', '#9CDCFE'], [': {}', '#D4D4D4'], '\\n', ['}', '#D4D4D4'], '\\n'],\n                  value: '{\\n  \"id\": \"resp_67ccf18ef5fc8190b16dbee19bc54e5f087bb177ab789d5c\",\\n  \"object\": \"response\",\\n  \"created_at\": 1741484430,\\n  \"status\": \"completed\",\\n  \"error\": null,\\n  \"incomplete_details\": null,\\n  \"instructions\": null,\\n  \"max_output_tokens\": null,\\n  \"model\": \"gpt-4.1-2025-04-14\",\\n  \"output\": [\\n    {\\n      \"type\": \"web_search_call\",\\n      \"id\": \"ws_67ccf18f64008190a39b619f4c8455ef087bb177ab789d5c\",\\n      \"status\": \"completed\"\\n    },\\n    {\\n      \"type\": \"message\",\\n      \"id\": \"msg_67ccf190ca3881909d433c50b1f6357e087bb177ab789d5c\",\\n      \"status\": \"completed\",\\n      \"role\": \"assistant\",\\n      \"content\": [\\n        {\\n          \"type\": \"output_text\",\\n          \"text\": \"As of today, March 9, 2025, one notable positive news story...\",\\n          \"annotations\": [\\n            {\\n              \"type\": \"url_citation\",\\n              \"start_index\": 442,\\n              \"end_index\": 557,\\n              \"url\": \"https://.../?utm_source=chatgpt.com\",\\n              \"title\": \"...\"\\n            },\\n            {\\n              \"type\": \"url_citation\",\\n              \"start_index\": 962,\\n              \"end_index\": 1077,\\n              \"url\": \"https://.../?utm_source=chatgpt.com\",\\n              \"title\": \"...\"\\n            },\\n            {\\n              \"type\": \"url_citation\",\\n              \"start_index\": 1336,\\n              \"end_index\": 1451,\\n              \"url\": \"https://.../?utm_source=chatgpt.com\",\\n              \"title\": \"...\"\\n            }\\n          ]\\n        }\\n      ]\\n    }\\n  ],\\n  \"parallel_tool_calls\": true,\\n  \"previous_response_id\": null,\\n  \"reasoning\": {\\n    \"effort\": null,\\n    \"summary\": null\\n  },\\n  \"store\": true,\\n  \"temperature\": 1.0,\\n  \"text\": {\\n    \"format\": {\\n      \"type\": \"text\"\\n    }\\n  },\\n  \"tool_choice\": \"auto\",\\n  \"tools\": [\\n    {\\n      \"type\": \"web_search_preview\",\\n      \"domains\": [],\\n      \"search_context_size\": \"medium\",\\n      \"user_location\": {\\n        \"type\": \"approximate\",\\n        \"city\": null,\\n        \"country\": \"US\",\\n        \"region\": null,\\n        \"timezone\": null\\n      }\\n    }\\n  ],\\n  \"top_p\": 1.0,\\n  \"truncation\": \"disabled\",\\n  \"usage\": {\\n    \"input_tokens\": 328,\\n    \"input_tokens_details\": {\\n      \"cached_tokens\": 0\\n    },\\n    \"output_tokens\": 356,\\n    \"output_tokens_details\": {\\n      \"reasoning_tokens\": 0\\n    },\\n    \"total_tokens\": 684\\n  },\\n  \"user\": null,\\n  \"metadata\": {}\\n}\\n'\n                },\n                language: 'json',\n                title: ''\n              }],\n              title: 'Web search'\n            },\n            description: 'Web search'\n          }, {\n            codeblock: {\n              tabs: [{\n                code: '{\\n  \"id\": \"resp_67ccf4c55fc48190b71bd0463ad3306d09504fb6872380d7\",\\n  \"object\": \"response\",\\n  \"created_at\": 1741485253,\\n  \"status\": \"completed\",\\n  \"error\": null,\\n  \"incomplete_details\": null,\\n  \"instructions\": null,\\n  \"max_output_tokens\": null,\\n  \"model\": \"gpt-4.1-2025-04-14\",\\n  \"output\": [\\n    {\\n      \"type\": \"file_search_call\",\\n      \"id\": \"fs_67ccf4c63cd08190887ef6464ba5681609504fb6872380d7\",\\n      \"status\": \"completed\",\\n      \"queries\": [\\n        \"attributes of an ancient brown dragon\"\\n      ],\\n      \"results\": null\\n    },\\n    {\\n      \"type\": \"message\",\\n      \"id\": \"msg_67ccf4c93e5c81909d595b369351a9d309504fb6872380d7\",\\n      \"status\": \"completed\",\\n      \"role\": \"assistant\",\\n      \"content\": [\\n        {\\n          \"type\": \"output_text\",\\n          \"text\": \"The attributes of an ancient brown dragon include...\",\\n          \"annotations\": [\\n            {\\n              \"type\": \"file_citation\",\\n              \"index\": 320,\\n              \"file_id\": \"file-4wDz5b167pAf72nx1h9eiN\",\\n              \"filename\": \"dragons.pdf\"\\n            },\\n            {\\n              \"type\": \"file_citation\",\\n              \"index\": 576,\\n              \"file_id\": \"file-4wDz5b167pAf72nx1h9eiN\",\\n              \"filename\": \"dragons.pdf\"\\n            },\\n            {\\n              \"type\": \"file_citation\",\\n              \"index\": 815,\\n              \"file_id\": \"file-4wDz5b167pAf72nx1h9eiN\",\\n              \"filename\": \"dragons.pdf\"\\n            },\\n            {\\n              \"type\": \"file_citation\",\\n              \"index\": 815,\\n              \"file_id\": \"file-4wDz5b167pAf72nx1h9eiN\",\\n              \"filename\": \"dragons.pdf\"\\n            },\\n            {\\n              \"type\": \"file_citation\",\\n              \"index\": 1030,\\n              \"file_id\": \"file-4wDz5b167pAf72nx1h9eiN\",\\n              \"filename\": \"dragons.pdf\"\\n            },\\n            {\\n              \"type\": \"file_citation\",\\n              \"index\": 1030,\\n              \"file_id\": \"file-4wDz5b167pAf72nx1h9eiN\",\\n              \"filename\": \"dragons.pdf\"\\n            },\\n            {\\n              \"type\": \"file_citation\",\\n              \"index\": 1156,\\n              \"file_id\": \"file-4wDz5b167pAf72nx1h9eiN\",\\n              \"filename\": \"dragons.pdf\"\\n            },\\n            {\\n              \"type\": \"file_citation\",\\n              \"index\": 1225,\\n              \"file_id\": \"file-4wDz5b167pAf72nx1h9eiN\",\\n              \"filename\": \"dragons.pdf\"\\n            }\\n          ]\\n        }\\n      ]\\n    }\\n  ],\\n  \"parallel_tool_calls\": true,\\n  \"previous_response_id\": null,\\n  \"reasoning\": {\\n    \"effort\": null,\\n    \"summary\": null\\n  },\\n  \"store\": true,\\n  \"temperature\": 1.0,\\n  \"text\": {\\n    \"format\": {\\n      \"type\": \"text\"\\n    }\\n  },\\n  \"tool_choice\": \"auto\",\\n  \"tools\": [\\n    {\\n      \"type\": \"file_search\",\\n      \"filters\": null,\\n      \"max_num_results\": 20,\\n      \"ranking_options\": {\\n        \"ranker\": \"auto\",\\n        \"score_threshold\": 0.0\\n      },\\n      \"vector_store_ids\": [\\n        \"vs_1234567890\"\\n      ]\\n    }\\n  ],\\n  \"top_p\": 1.0,\\n  \"truncation\": \"disabled\",\\n  \"usage\": {\\n    \"input_tokens\": 18307,\\n    \"input_tokens_details\": {\\n      \"cached_tokens\": 0\\n    },\\n    \"output_tokens\": 348,\\n    \"output_tokens_details\": {\\n      \"reasoning_tokens\": 0\\n    },\\n    \"total_tokens\": 18655\\n  },\\n  \"user\": null,\\n  \"metadata\": {}\\n}\\n',\n                highlighted: {\n                  annotations: [],\n                  code: '{\\n  \"id\": \"resp_67ccf4c55fc48190b71bd0463ad3306d09504fb6872380d7\",\\n  \"object\": \"response\",\\n  \"created_at\": 1741485253,\\n  \"status\": \"completed\",\\n  \"error\": null,\\n  \"incomplete_details\": null,\\n  \"instructions\": null,\\n  \"max_output_tokens\": null,\\n  \"model\": \"gpt-4.1-2025-04-14\",\\n  \"output\": [\\n    {\\n      \"type\": \"file_search_call\",\\n      \"id\": \"fs_67ccf4c63cd08190887ef6464ba5681609504fb6872380d7\",\\n      \"status\": \"completed\",\\n      \"queries\": [\\n        \"attributes of an ancient brown dragon\"\\n      ],\\n      \"results\": null\\n    },\\n    {\\n      \"type\": \"message\",\\n      \"id\": \"msg_67ccf4c93e5c81909d595b369351a9d309504fb6872380d7\",\\n      \"status\": \"completed\",\\n      \"role\": \"assistant\",\\n      \"content\": [\\n        {\\n          \"type\": \"output_text\",\\n          \"text\": \"The attributes of an ancient brown dragon include...\",\\n          \"annotations\": [\\n            {\\n              \"type\": \"file_citation\",\\n              \"index\": 320,\\n              \"file_id\": \"file-4wDz5b167pAf72nx1h9eiN\",\\n              \"filename\": \"dragons.pdf\"\\n            },\\n            {\\n              \"type\": \"file_citation\",\\n              \"index\": 576,\\n              \"file_id\": \"file-4wDz5b167pAf72nx1h9eiN\",\\n              \"filename\": \"dragons.pdf\"\\n            },\\n            {\\n              \"type\": \"file_citation\",\\n              \"index\": 815,\\n              \"file_id\": \"file-4wDz5b167pAf72nx1h9eiN\",\\n              \"filename\": \"dragons.pdf\"\\n            },\\n            {\\n              \"type\": \"file_citation\",\\n              \"index\": 815,\\n              \"file_id\": \"file-4wDz5b167pAf72nx1h9eiN\",\\n              \"filename\": \"dragons.pdf\"\\n            },\\n            {\\n              \"type\": \"file_citation\",\\n              \"index\": 1030,\\n              \"file_id\": \"file-4wDz5b167pAf72nx1h9eiN\",\\n              \"filename\": \"dragons.pdf\"\\n            },\\n            {\\n              \"type\": \"file_citation\",\\n              \"index\": 1030,\\n              \"file_id\": \"file-4wDz5b167pAf72nx1h9eiN\",\\n              \"filename\": \"dragons.pdf\"\\n            },\\n            {\\n              \"type\": \"file_citation\",\\n              \"index\": 1156,\\n              \"file_id\": \"file-4wDz5b167pAf72nx1h9eiN\",\\n              \"filename\": \"dragons.pdf\"\\n            },\\n            {\\n              \"type\": \"file_citation\",\\n              \"index\": 1225,\\n              \"file_id\": \"file-4wDz5b167pAf72nx1h9eiN\",\\n              \"filename\": \"dragons.pdf\"\\n            }\\n          ]\\n        }\\n      ]\\n    }\\n  ],\\n  \"parallel_tool_calls\": true,\\n  \"previous_response_id\": null,\\n  \"reasoning\": {\\n    \"effort\": null,\\n    \"summary\": null\\n  },\\n  \"store\": true,\\n  \"temperature\": 1.0,\\n  \"text\": {\\n    \"format\": {\\n      \"type\": \"text\"\\n    }\\n  },\\n  \"tool_choice\": \"auto\",\\n  \"tools\": [\\n    {\\n      \"type\": \"file_search\",\\n      \"filters\": null,\\n      \"max_num_results\": 20,\\n      \"ranking_options\": {\\n        \"ranker\": \"auto\",\\n        \"score_threshold\": 0.0\\n      },\\n      \"vector_store_ids\": [\\n        \"vs_1234567890\"\\n      ]\\n    }\\n  ],\\n  \"top_p\": 1.0,\\n  \"truncation\": \"disabled\",\\n  \"usage\": {\\n    \"input_tokens\": 18307,\\n    \"input_tokens_details\": {\\n      \"cached_tokens\": 0\\n    },\\n    \"output_tokens\": 348,\\n    \"output_tokens_details\": {\\n      \"reasoning_tokens\": 0\\n    },\\n    \"total_tokens\": 18655\\n  },\\n  \"user\": null,\\n  \"metadata\": {}\\n}\\n',\n                  lang: 'json',\n                  meta: '',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['{', '#D4D4D4'], '\\n  ', ['\"id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"resp_67ccf4c55fc48190b71bd0463ad3306d09504fb6872380d7\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"object\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"response\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"created_at\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1741485253', '#B5CEA8'], [',', '#D4D4D4'], '\\n  ', ['\"status\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"completed\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"error\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"incomplete_details\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"instructions\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"max_output_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"model\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"gpt-4.1-2025-04-14\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"output\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], '\\n      ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"file_search_call\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"fs_67ccf4c63cd08190887ef6464ba5681609504fb6872380d7\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"status\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"completed\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"queries\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n        ', ['\"attributes of an ancient brown dragon\"', '#CE9178'], '\\n      ', ['],', '#D4D4D4'], '\\n      ', ['\"results\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], '\\n    ', ['},', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], '\\n      ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"message\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"msg_67ccf4c93e5c81909d595b369351a9d309504fb6872380d7\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"status\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"completed\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"role\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"assistant\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"content\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n        ', ['{', '#D4D4D4'], '\\n          ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"output_text\"', '#CE9178'], [',', '#D4D4D4'], '\\n          ', ['\"text\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"The attributes of an ancient brown dragon include...\"', '#CE9178'], [',', '#D4D4D4'], '\\n          ', ['\"annotations\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n            ', ['{', '#D4D4D4'], '\\n              ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"file_citation\"', '#CE9178'], [',', '#D4D4D4'], '\\n              ', ['\"index\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['320', '#B5CEA8'], [',', '#D4D4D4'], '\\n              ', ['\"file_id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"file-4wDz5b167pAf72nx1h9eiN\"', '#CE9178'], [',', '#D4D4D4'], '\\n              ', ['\"filename\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"dragons.pdf\"', '#CE9178'], '\\n            ', ['},', '#D4D4D4'], '\\n            ', ['{', '#D4D4D4'], '\\n              ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"file_citation\"', '#CE9178'], [',', '#D4D4D4'], '\\n              ', ['\"index\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['576', '#B5CEA8'], [',', '#D4D4D4'], '\\n              ', ['\"file_id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"file-4wDz5b167pAf72nx1h9eiN\"', '#CE9178'], [',', '#D4D4D4'], '\\n              ', ['\"filename\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"dragons.pdf\"', '#CE9178'], '\\n            ', ['},', '#D4D4D4'], '\\n            ', ['{', '#D4D4D4'], '\\n              ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"file_citation\"', '#CE9178'], [',', '#D4D4D4'], '\\n              ', ['\"index\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['815', '#B5CEA8'], [',', '#D4D4D4'], '\\n              ', ['\"file_id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"file-4wDz5b167pAf72nx1h9eiN\"', '#CE9178'], [',', '#D4D4D4'], '\\n              ', ['\"filename\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"dragons.pdf\"', '#CE9178'], '\\n            ', ['},', '#D4D4D4'], '\\n            ', ['{', '#D4D4D4'], '\\n              ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"file_citation\"', '#CE9178'], [',', '#D4D4D4'], '\\n              ', ['\"index\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['815', '#B5CEA8'], [',', '#D4D4D4'], '\\n              ', ['\"file_id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"file-4wDz5b167pAf72nx1h9eiN\"', '#CE9178'], [',', '#D4D4D4'], '\\n              ', ['\"filename\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"dragons.pdf\"', '#CE9178'], '\\n            ', ['},', '#D4D4D4'], '\\n            ', ['{', '#D4D4D4'], '\\n              ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"file_citation\"', '#CE9178'], [',', '#D4D4D4'], '\\n              ', ['\"index\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1030', '#B5CEA8'], [',', '#D4D4D4'], '\\n              ', ['\"file_id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"file-4wDz5b167pAf72nx1h9eiN\"', '#CE9178'], [',', '#D4D4D4'], '\\n              ', ['\"filename\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"dragons.pdf\"', '#CE9178'], '\\n            ', ['},', '#D4D4D4'], '\\n            ', ['{', '#D4D4D4'], '\\n              ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"file_citation\"', '#CE9178'], [',', '#D4D4D4'], '\\n              ', ['\"index\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1030', '#B5CEA8'], [',', '#D4D4D4'], '\\n              ', ['\"file_id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"file-4wDz5b167pAf72nx1h9eiN\"', '#CE9178'], [',', '#D4D4D4'], '\\n              ', ['\"filename\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"dragons.pdf\"', '#CE9178'], '\\n            ', ['},', '#D4D4D4'], '\\n            ', ['{', '#D4D4D4'], '\\n              ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"file_citation\"', '#CE9178'], [',', '#D4D4D4'], '\\n              ', ['\"index\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1156', '#B5CEA8'], [',', '#D4D4D4'], '\\n              ', ['\"file_id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"file-4wDz5b167pAf72nx1h9eiN\"', '#CE9178'], [',', '#D4D4D4'], '\\n              ', ['\"filename\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"dragons.pdf\"', '#CE9178'], '\\n            ', ['},', '#D4D4D4'], '\\n            ', ['{', '#D4D4D4'], '\\n              ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"file_citation\"', '#CE9178'], [',', '#D4D4D4'], '\\n              ', ['\"index\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1225', '#B5CEA8'], [',', '#D4D4D4'], '\\n              ', ['\"file_id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"file-4wDz5b167pAf72nx1h9eiN\"', '#CE9178'], [',', '#D4D4D4'], '\\n              ', ['\"filename\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"dragons.pdf\"', '#CE9178'], '\\n            ', ['}', '#D4D4D4'], '\\n          ', [']', '#D4D4D4'], '\\n        ', ['}', '#D4D4D4'], '\\n      ', [']', '#D4D4D4'], '\\n    ', ['}', '#D4D4D4'], '\\n  ', ['],', '#D4D4D4'], '\\n  ', ['\"parallel_tool_calls\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['true', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"previous_response_id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"reasoning\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n    ', ['\"effort\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n    ', ['\"summary\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], '\\n  ', ['},', '#D4D4D4'], '\\n  ', ['\"store\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['true', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"temperature\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1.0', '#B5CEA8'], [',', '#D4D4D4'], '\\n  ', ['\"text\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n    ', ['\"format\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n      ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"text\"', '#CE9178'], '\\n    ', ['}', '#D4D4D4'], '\\n  ', ['},', '#D4D4D4'], '\\n  ', ['\"tool_choice\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"auto\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"tools\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], '\\n      ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"file_search\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"filters\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n      ', ['\"max_num_results\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['20', '#B5CEA8'], [',', '#D4D4D4'], '\\n      ', ['\"ranking_options\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n        ', ['\"ranker\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"auto\"', '#CE9178'], [',', '#D4D4D4'], '\\n        ', ['\"score_threshold\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0.0', '#B5CEA8'], '\\n      ', ['},', '#D4D4D4'], '\\n      ', ['\"vector_store_ids\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n        ', ['\"vs_1234567890\"', '#CE9178'], '\\n      ', [']', '#D4D4D4'], '\\n    ', ['}', '#D4D4D4'], '\\n  ', ['],', '#D4D4D4'], '\\n  ', ['\"top_p\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1.0', '#B5CEA8'], [',', '#D4D4D4'], '\\n  ', ['\"truncation\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"disabled\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"usage\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n    ', ['\"input_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['18307', '#B5CEA8'], [',', '#D4D4D4'], '\\n    ', ['\"input_tokens_details\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n      ', ['\"cached_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], '\\n    ', ['},', '#D4D4D4'], '\\n    ', ['\"output_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['348', '#B5CEA8'], [',', '#D4D4D4'], '\\n    ', ['\"output_tokens_details\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n      ', ['\"reasoning_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], '\\n    ', ['},', '#D4D4D4'], '\\n    ', ['\"total_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['18655', '#B5CEA8'], '\\n  ', ['},', '#D4D4D4'], '\\n  ', ['\"user\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"metadata\"', '#9CDCFE'], [': {}', '#D4D4D4'], '\\n', ['}', '#D4D4D4'], '\\n'],\n                  value: '{\\n  \"id\": \"resp_67ccf4c55fc48190b71bd0463ad3306d09504fb6872380d7\",\\n  \"object\": \"response\",\\n  \"created_at\": 1741485253,\\n  \"status\": \"completed\",\\n  \"error\": null,\\n  \"incomplete_details\": null,\\n  \"instructions\": null,\\n  \"max_output_tokens\": null,\\n  \"model\": \"gpt-4.1-2025-04-14\",\\n  \"output\": [\\n    {\\n      \"type\": \"file_search_call\",\\n      \"id\": \"fs_67ccf4c63cd08190887ef6464ba5681609504fb6872380d7\",\\n      \"status\": \"completed\",\\n      \"queries\": [\\n        \"attributes of an ancient brown dragon\"\\n      ],\\n      \"results\": null\\n    },\\n    {\\n      \"type\": \"message\",\\n      \"id\": \"msg_67ccf4c93e5c81909d595b369351a9d309504fb6872380d7\",\\n      \"status\": \"completed\",\\n      \"role\": \"assistant\",\\n      \"content\": [\\n        {\\n          \"type\": \"output_text\",\\n          \"text\": \"The attributes of an ancient brown dragon include...\",\\n          \"annotations\": [\\n            {\\n              \"type\": \"file_citation\",\\n              \"index\": 320,\\n              \"file_id\": \"file-4wDz5b167pAf72nx1h9eiN\",\\n              \"filename\": \"dragons.pdf\"\\n            },\\n            {\\n              \"type\": \"file_citation\",\\n              \"index\": 576,\\n              \"file_id\": \"file-4wDz5b167pAf72nx1h9eiN\",\\n              \"filename\": \"dragons.pdf\"\\n            },\\n            {\\n              \"type\": \"file_citation\",\\n              \"index\": 815,\\n              \"file_id\": \"file-4wDz5b167pAf72nx1h9eiN\",\\n              \"filename\": \"dragons.pdf\"\\n            },\\n            {\\n              \"type\": \"file_citation\",\\n              \"index\": 815,\\n              \"file_id\": \"file-4wDz5b167pAf72nx1h9eiN\",\\n              \"filename\": \"dragons.pdf\"\\n            },\\n            {\\n              \"type\": \"file_citation\",\\n              \"index\": 1030,\\n              \"file_id\": \"file-4wDz5b167pAf72nx1h9eiN\",\\n              \"filename\": \"dragons.pdf\"\\n            },\\n            {\\n              \"type\": \"file_citation\",\\n              \"index\": 1030,\\n              \"file_id\": \"file-4wDz5b167pAf72nx1h9eiN\",\\n              \"filename\": \"dragons.pdf\"\\n            },\\n            {\\n              \"type\": \"file_citation\",\\n              \"index\": 1156,\\n              \"file_id\": \"file-4wDz5b167pAf72nx1h9eiN\",\\n              \"filename\": \"dragons.pdf\"\\n            },\\n            {\\n              \"type\": \"file_citation\",\\n              \"index\": 1225,\\n              \"file_id\": \"file-4wDz5b167pAf72nx1h9eiN\",\\n              \"filename\": \"dragons.pdf\"\\n            }\\n          ]\\n        }\\n      ]\\n    }\\n  ],\\n  \"parallel_tool_calls\": true,\\n  \"previous_response_id\": null,\\n  \"reasoning\": {\\n    \"effort\": null,\\n    \"summary\": null\\n  },\\n  \"store\": true,\\n  \"temperature\": 1.0,\\n  \"text\": {\\n    \"format\": {\\n      \"type\": \"text\"\\n    }\\n  },\\n  \"tool_choice\": \"auto\",\\n  \"tools\": [\\n    {\\n      \"type\": \"file_search\",\\n      \"filters\": null,\\n      \"max_num_results\": 20,\\n      \"ranking_options\": {\\n        \"ranker\": \"auto\",\\n        \"score_threshold\": 0.0\\n      },\\n      \"vector_store_ids\": [\\n        \"vs_1234567890\"\\n      ]\\n    }\\n  ],\\n  \"top_p\": 1.0,\\n  \"truncation\": \"disabled\",\\n  \"usage\": {\\n    \"input_tokens\": 18307,\\n    \"input_tokens_details\": {\\n      \"cached_tokens\": 0\\n    },\\n    \"output_tokens\": 348,\\n    \"output_tokens_details\": {\\n      \"reasoning_tokens\": 0\\n    },\\n    \"total_tokens\": 18655\\n  },\\n  \"user\": null,\\n  \"metadata\": {}\\n}\\n'\n                },\n                language: 'json',\n                title: ''\n              }],\n              title: 'File search'\n            },\n            description: 'File search'\n          }, {\n            codeblock: {\n              tabs: [{\n                code: 'event: response.created\\ndata: {\"type\":\"response.created\",\"response\":{\"id\":\"resp_67c9fdcecf488190bdd9a0409de3a1ec07b8b0ad4e5eb654\",\"object\":\"response\",\"created_at\":1741290958,\"status\":\"in_progress\",\"error\":null,\"incomplete_details\":null,\"instructions\":\"You are a helpful assistant.\",\"max_output_tokens\":null,\"model\":\"gpt-4.1-2025-04-14\",\"output\":[],\"parallel_tool_calls\":true,\"previous_response_id\":null,\"reasoning\":{\"effort\":null,\"summary\":null},\"store\":true,\"temperature\":1.0,\"text\":{\"format\":{\"type\":\"text\"}},\"tool_choice\":\"auto\",\"tools\":[],\"top_p\":1.0,\"truncation\":\"disabled\",\"usage\":null,\"user\":null,\"metadata\":{}}}\\n\\nevent: response.in_progress\\ndata: {\"type\":\"response.in_progress\",\"response\":{\"id\":\"resp_67c9fdcecf488190bdd9a0409de3a1ec07b8b0ad4e5eb654\",\"object\":\"response\",\"created_at\":1741290958,\"status\":\"in_progress\",\"error\":null,\"incomplete_details\":null,\"instructions\":\"You are a helpful assistant.\",\"max_output_tokens\":null,\"model\":\"gpt-4.1-2025-04-14\",\"output\":[],\"parallel_tool_calls\":true,\"previous_response_id\":null,\"reasoning\":{\"effort\":null,\"summary\":null},\"store\":true,\"temperature\":1.0,\"text\":{\"format\":{\"type\":\"text\"}},\"tool_choice\":\"auto\",\"tools\":[],\"top_p\":1.0,\"truncation\":\"disabled\",\"usage\":null,\"user\":null,\"metadata\":{}}}\\n\\nevent: response.output_item.added\\ndata: {\"type\":\"response.output_item.added\",\"output_index\":0,\"item\":{\"id\":\"msg_67c9fdcf37fc8190ba82116e33fb28c507b8b0ad4e5eb654\",\"type\":\"message\",\"status\":\"in_progress\",\"role\":\"assistant\",\"content\":[]}}\\n\\nevent: response.content_part.added\\ndata: {\"type\":\"response.content_part.added\",\"item_id\":\"msg_67c9fdcf37fc8190ba82116e33fb28c507b8b0ad4e5eb654\",\"output_index\":0,\"content_index\":0,\"part\":{\"type\":\"output_text\",\"text\":\"\",\"annotations\":[]}}\\n\\nevent: response.output_text.delta\\ndata: {\"type\":\"response.output_text.delta\",\"item_id\":\"msg_67c9fdcf37fc8190ba82116e33fb28c507b8b0ad4e5eb654\",\"output_index\":0,\"content_index\":0,\"delta\":\"Hi\"}\\n\\n...\\n\\nevent: response.output_text.done\\ndata: {\"type\":\"response.output_text.done\",\"item_id\":\"msg_67c9fdcf37fc8190ba82116e33fb28c507b8b0ad4e5eb654\",\"output_index\":0,\"content_index\":0,\"text\":\"Hi there! How can I assist you today?\"}\\n\\nevent: response.content_part.done\\ndata: {\"type\":\"response.content_part.done\",\"item_id\":\"msg_67c9fdcf37fc8190ba82116e33fb28c507b8b0ad4e5eb654\",\"output_index\":0,\"content_index\":0,\"part\":{\"type\":\"output_text\",\"text\":\"Hi there! How can I assist you today?\",\"annotations\":[]}}\\n\\nevent: response.output_item.done\\ndata: {\"type\":\"response.output_item.done\",\"output_index\":0,\"item\":{\"id\":\"msg_67c9fdcf37fc8190ba82116e33fb28c507b8b0ad4e5eb654\",\"type\":\"message\",\"status\":\"completed\",\"role\":\"assistant\",\"content\":[{\"type\":\"output_text\",\"text\":\"Hi there! How can I assist you today?\",\"annotations\":[]}]}}\\n\\nevent: response.completed\\ndata: {\"type\":\"response.completed\",\"response\":{\"id\":\"resp_67c9fdcecf488190bdd9a0409de3a1ec07b8b0ad4e5eb654\",\"object\":\"response\",\"created_at\":1741290958,\"status\":\"completed\",\"error\":null,\"incomplete_details\":null,\"instructions\":\"You are a helpful assistant.\",\"max_output_tokens\":null,\"model\":\"gpt-4.1-2025-04-14\",\"output\":[{\"id\":\"msg_67c9fdcf37fc8190ba82116e33fb28c507b8b0ad4e5eb654\",\"type\":\"message\",\"status\":\"completed\",\"role\":\"assistant\",\"content\":[{\"type\":\"output_text\",\"text\":\"Hi there! How can I assist you today?\",\"annotations\":[]}]}],\"parallel_tool_calls\":true,\"previous_response_id\":null,\"reasoning\":{\"effort\":null,\"summary\":null},\"store\":true,\"temperature\":1.0,\"text\":{\"format\":{\"type\":\"text\"}},\"tool_choice\":\"auto\",\"tools\":[],\"top_p\":1.0,\"truncation\":\"disabled\",\"usage\":{\"input_tokens\":37,\"output_tokens\":11,\"output_tokens_details\":{\"reasoning_tokens\":0},\"total_tokens\":48},\"user\":null,\"metadata\":{}}}\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'event: response.created\\ndata: {\"type\":\"response.created\",\"response\":{\"id\":\"resp_67c9fdcecf488190bdd9a0409de3a1ec07b8b0ad4e5eb654\",\"object\":\"response\",\"created_at\":1741290958,\"status\":\"in_progress\",\"error\":null,\"incomplete_details\":null,\"instructions\":\"You are a helpful assistant.\",\"max_output_tokens\":null,\"model\":\"gpt-4.1-2025-04-14\",\"output\":[],\"parallel_tool_calls\":true,\"previous_response_id\":null,\"reasoning\":{\"effort\":null,\"summary\":null},\"store\":true,\"temperature\":1.0,\"text\":{\"format\":{\"type\":\"text\"}},\"tool_choice\":\"auto\",\"tools\":[],\"top_p\":1.0,\"truncation\":\"disabled\",\"usage\":null,\"user\":null,\"metadata\":{}}}\\n\\nevent: response.in_progress\\ndata: {\"type\":\"response.in_progress\",\"response\":{\"id\":\"resp_67c9fdcecf488190bdd9a0409de3a1ec07b8b0ad4e5eb654\",\"object\":\"response\",\"created_at\":1741290958,\"status\":\"in_progress\",\"error\":null,\"incomplete_details\":null,\"instructions\":\"You are a helpful assistant.\",\"max_output_tokens\":null,\"model\":\"gpt-4.1-2025-04-14\",\"output\":[],\"parallel_tool_calls\":true,\"previous_response_id\":null,\"reasoning\":{\"effort\":null,\"summary\":null},\"store\":true,\"temperature\":1.0,\"text\":{\"format\":{\"type\":\"text\"}},\"tool_choice\":\"auto\",\"tools\":[],\"top_p\":1.0,\"truncation\":\"disabled\",\"usage\":null,\"user\":null,\"metadata\":{}}}\\n\\nevent: response.output_item.added\\ndata: {\"type\":\"response.output_item.added\",\"output_index\":0,\"item\":{\"id\":\"msg_67c9fdcf37fc8190ba82116e33fb28c507b8b0ad4e5eb654\",\"type\":\"message\",\"status\":\"in_progress\",\"role\":\"assistant\",\"content\":[]}}\\n\\nevent: response.content_part.added\\ndata: {\"type\":\"response.content_part.added\",\"item_id\":\"msg_67c9fdcf37fc8190ba82116e33fb28c507b8b0ad4e5eb654\",\"output_index\":0,\"content_index\":0,\"part\":{\"type\":\"output_text\",\"text\":\"\",\"annotations\":[]}}\\n\\nevent: response.output_text.delta\\ndata: {\"type\":\"response.output_text.delta\",\"item_id\":\"msg_67c9fdcf37fc8190ba82116e33fb28c507b8b0ad4e5eb654\",\"output_index\":0,\"content_index\":0,\"delta\":\"Hi\"}\\n\\n...\\n\\nevent: response.output_text.done\\ndata: {\"type\":\"response.output_text.done\",\"item_id\":\"msg_67c9fdcf37fc8190ba82116e33fb28c507b8b0ad4e5eb654\",\"output_index\":0,\"content_index\":0,\"text\":\"Hi there! How can I assist you today?\"}\\n\\nevent: response.content_part.done\\ndata: {\"type\":\"response.content_part.done\",\"item_id\":\"msg_67c9fdcf37fc8190ba82116e33fb28c507b8b0ad4e5eb654\",\"output_index\":0,\"content_index\":0,\"part\":{\"type\":\"output_text\",\"text\":\"Hi there! How can I assist you today?\",\"annotations\":[]}}\\n\\nevent: response.output_item.done\\ndata: {\"type\":\"response.output_item.done\",\"output_index\":0,\"item\":{\"id\":\"msg_67c9fdcf37fc8190ba82116e33fb28c507b8b0ad4e5eb654\",\"type\":\"message\",\"status\":\"completed\",\"role\":\"assistant\",\"content\":[{\"type\":\"output_text\",\"text\":\"Hi there! How can I assist you today?\",\"annotations\":[]}]}}\\n\\nevent: response.completed\\ndata: {\"type\":\"response.completed\",\"response\":{\"id\":\"resp_67c9fdcecf488190bdd9a0409de3a1ec07b8b0ad4e5eb654\",\"object\":\"response\",\"created_at\":1741290958,\"status\":\"completed\",\"error\":null,\"incomplete_details\":null,\"instructions\":\"You are a helpful assistant.\",\"max_output_tokens\":null,\"model\":\"gpt-4.1-2025-04-14\",\"output\":[{\"id\":\"msg_67c9fdcf37fc8190ba82116e33fb28c507b8b0ad4e5eb654\",\"type\":\"message\",\"status\":\"completed\",\"role\":\"assistant\",\"content\":[{\"type\":\"output_text\",\"text\":\"Hi there! How can I assist you today?\",\"annotations\":[]}]}],\"parallel_tool_calls\":true,\"previous_response_id\":null,\"reasoning\":{\"effort\":null,\"summary\":null},\"store\":true,\"temperature\":1.0,\"text\":{\"format\":{\"type\":\"text\"}},\"tool_choice\":\"auto\",\"tools\":[],\"top_p\":1.0,\"truncation\":\"disabled\",\"usage\":{\"input_tokens\":37,\"output_tokens\":11,\"output_tokens_details\":{\"reasoning_tokens\":0},\"total_tokens\":48},\"user\":null,\"metadata\":{}}}\\n',\n                  lang: 'json',\n                  meta: '',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['event: response.created', '#D4D4D4'], '\\n', ['data: {', '#D4D4D4'], ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"response.created\"', '#CE9178'], [',', '#D4D4D4'], ['\"response\"', '#9CDCFE'], [':{', '#D4D4D4'], ['\"id\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"resp_67c9fdcecf488190bdd9a0409de3a1ec07b8b0ad4e5eb654\"', '#CE9178'], [',', '#D4D4D4'], ['\"object\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"response\"', '#CE9178'], [',', '#D4D4D4'], ['\"created_at\"', '#9CDCFE'], [':', '#D4D4D4'], ['1741290958', '#B5CEA8'], [',', '#D4D4D4'], ['\"status\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"in_progress\"', '#CE9178'], [',', '#D4D4D4'], ['\"error\"', '#9CDCFE'], [':', '#D4D4D4'], ['null', '#569CD6'], [',', '#D4D4D4'], ['\"incomplete_details\"', '#9CDCFE'], [':', '#D4D4D4'], ['null', '#569CD6'], [',', '#D4D4D4'], ['\"instructions\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"You are a helpful assistant.\"', '#CE9178'], [',', '#D4D4D4'], ['\"max_output_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ['null', '#569CD6'], [',', '#D4D4D4'], ['\"model\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"gpt-4.1-2025-04-14\"', '#CE9178'], [',', '#D4D4D4'], ['\"output\"', '#9CDCFE'], [':[],', '#D4D4D4'], ['\"parallel_tool_calls\"', '#9CDCFE'], [':', '#D4D4D4'], ['true', '#569CD6'], [',', '#D4D4D4'], ['\"previous_response_id\"', '#9CDCFE'], [':', '#D4D4D4'], ['null', '#569CD6'], [',', '#D4D4D4'], ['\"reasoning\"', '#9CDCFE'], [':{', '#D4D4D4'], ['\"effort\"', '#9CDCFE'], [':', '#D4D4D4'], ['null', '#569CD6'], [',', '#D4D4D4'], ['\"summary\"', '#9CDCFE'], [':', '#D4D4D4'], ['null', '#569CD6'], ['},', '#D4D4D4'], ['\"store\"', '#9CDCFE'], [':', '#D4D4D4'], ['true', '#569CD6'], [',', '#D4D4D4'], ['\"temperature\"', '#9CDCFE'], [':', '#D4D4D4'], ['1.0', '#B5CEA8'], [',', '#D4D4D4'], ['\"text\"', '#9CDCFE'], [':{', '#D4D4D4'], ['\"format\"', '#9CDCFE'], [':{', '#D4D4D4'], ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"text\"', '#CE9178'], ['}},', '#D4D4D4'], ['\"tool_choice\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"auto\"', '#CE9178'], [',', '#D4D4D4'], ['\"tools\"', '#9CDCFE'], [':[],', '#D4D4D4'], ['\"top_p\"', '#9CDCFE'], [':', '#D4D4D4'], ['1.0', '#B5CEA8'], [',', '#D4D4D4'], ['\"truncation\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"disabled\"', '#CE9178'], [',', '#D4D4D4'], ['\"usage\"', '#9CDCFE'], [':', '#D4D4D4'], ['null', '#569CD6'], [',', '#D4D4D4'], ['\"user\"', '#9CDCFE'], [':', '#D4D4D4'], ['null', '#569CD6'], [',', '#D4D4D4'], ['\"metadata\"', '#9CDCFE'], [':{}}}', '#D4D4D4'], '\\n\\n', ['event: response.in_progress', '#D4D4D4'], '\\n', ['data: {', '#D4D4D4'], ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"response.in_progress\"', '#CE9178'], [',', '#D4D4D4'], ['\"response\"', '#9CDCFE'], [':{', '#D4D4D4'], ['\"id\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"resp_67c9fdcecf488190bdd9a0409de3a1ec07b8b0ad4e5eb654\"', '#CE9178'], [',', '#D4D4D4'], ['\"object\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"response\"', '#CE9178'], [',', '#D4D4D4'], ['\"created_at\"', '#9CDCFE'], [':', '#D4D4D4'], ['1741290958', '#B5CEA8'], [',', '#D4D4D4'], ['\"status\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"in_progress\"', '#CE9178'], [',', '#D4D4D4'], ['\"error\"', '#9CDCFE'], [':', '#D4D4D4'], ['null', '#569CD6'], [',', '#D4D4D4'], ['\"incomplete_details\"', '#9CDCFE'], [':', '#D4D4D4'], ['null', '#569CD6'], [',', '#D4D4D4'], ['\"instructions\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"You are a helpful assistant.\"', '#CE9178'], [',', '#D4D4D4'], ['\"max_output_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ['null', '#569CD6'], [',', '#D4D4D4'], ['\"model\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"gpt-4.1-2025-04-14\"', '#CE9178'], [',', '#D4D4D4'], ['\"output\"', '#9CDCFE'], [':[],', '#D4D4D4'], ['\"parallel_tool_calls\"', '#9CDCFE'], [':', '#D4D4D4'], ['true', '#569CD6'], [',', '#D4D4D4'], ['\"previous_response_id\"', '#9CDCFE'], [':', '#D4D4D4'], ['null', '#569CD6'], [',', '#D4D4D4'], ['\"reasoning\"', '#9CDCFE'], [':{', '#D4D4D4'], ['\"effort\"', '#9CDCFE'], [':', '#D4D4D4'], ['null', '#569CD6'], [',', '#D4D4D4'], ['\"summary\"', '#9CDCFE'], [':', '#D4D4D4'], ['null', '#569CD6'], ['},', '#D4D4D4'], ['\"store\"', '#9CDCFE'], [':', '#D4D4D4'], ['true', '#569CD6'], [',', '#D4D4D4'], ['\"temperature\"', '#9CDCFE'], [':', '#D4D4D4'], ['1.0', '#B5CEA8'], [',', '#D4D4D4'], ['\"text\"', '#9CDCFE'], [':{', '#D4D4D4'], ['\"format\"', '#9CDCFE'], [':{', '#D4D4D4'], ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"text\"', '#CE9178'], ['}},', '#D4D4D4'], ['\"tool_choice\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"auto\"', '#CE9178'], [',', '#D4D4D4'], ['\"tools\"', '#9CDCFE'], [':[],', '#D4D4D4'], ['\"top_p\"', '#9CDCFE'], [':', '#D4D4D4'], ['1.0', '#B5CEA8'], [',', '#D4D4D4'], ['\"truncation\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"disabled\"', '#CE9178'], [',', '#D4D4D4'], ['\"usage\"', '#9CDCFE'], [':', '#D4D4D4'], ['null', '#569CD6'], [',', '#D4D4D4'], ['\"user\"', '#9CDCFE'], [':', '#D4D4D4'], ['null', '#569CD6'], [',', '#D4D4D4'], ['\"metadata\"', '#9CDCFE'], [':{}}}', '#D4D4D4'], '\\n\\n', ['event: response.output_item.added', '#D4D4D4'], '\\n', ['data: {', '#D4D4D4'], ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"response.output_item.added\"', '#CE9178'], [',', '#D4D4D4'], ['\"output_index\"', '#9CDCFE'], [':', '#D4D4D4'], ['0', '#B5CEA8'], [',', '#D4D4D4'], ['\"item\"', '#9CDCFE'], [':{', '#D4D4D4'], ['\"id\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"msg_67c9fdcf37fc8190ba82116e33fb28c507b8b0ad4e5eb654\"', '#CE9178'], [',', '#D4D4D4'], ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"message\"', '#CE9178'], [',', '#D4D4D4'], ['\"status\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"in_progress\"', '#CE9178'], [',', '#D4D4D4'], ['\"role\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"assistant\"', '#CE9178'], [',', '#D4D4D4'], ['\"content\"', '#9CDCFE'], [':[]}}', '#D4D4D4'], '\\n\\n', ['event: response.content_part.added', '#D4D4D4'], '\\n', ['data: {', '#D4D4D4'], ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"response.content_part.added\"', '#CE9178'], [',', '#D4D4D4'], ['\"item_id\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"msg_67c9fdcf37fc8190ba82116e33fb28c507b8b0ad4e5eb654\"', '#CE9178'], [',', '#D4D4D4'], ['\"output_index\"', '#9CDCFE'], [':', '#D4D4D4'], ['0', '#B5CEA8'], [',', '#D4D4D4'], ['\"content_index\"', '#9CDCFE'], [':', '#D4D4D4'], ['0', '#B5CEA8'], [',', '#D4D4D4'], ['\"part\"', '#9CDCFE'], [':{', '#D4D4D4'], ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"output_text\"', '#CE9178'], [',', '#D4D4D4'], ['\"text\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"\"', '#CE9178'], [',', '#D4D4D4'], ['\"annotations\"', '#9CDCFE'], [':[]}}', '#D4D4D4'], '\\n\\n', ['event: response.output_text.delta', '#D4D4D4'], '\\n', ['data: {', '#D4D4D4'], ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"response.output_text.delta\"', '#CE9178'], [',', '#D4D4D4'], ['\"item_id\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"msg_67c9fdcf37fc8190ba82116e33fb28c507b8b0ad4e5eb654\"', '#CE9178'], [',', '#D4D4D4'], ['\"output_index\"', '#9CDCFE'], [':', '#D4D4D4'], ['0', '#B5CEA8'], [',', '#D4D4D4'], ['\"content_index\"', '#9CDCFE'], [':', '#D4D4D4'], ['0', '#B5CEA8'], [',', '#D4D4D4'], ['\"delta\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"Hi\"', '#CE9178'], ['}', '#D4D4D4'], '\\n\\n', ['...', '#D4D4D4'], '\\n\\n', ['event: response.output_text.done', '#D4D4D4'], '\\n', ['data: {', '#D4D4D4'], ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"response.output_text.done\"', '#CE9178'], [',', '#D4D4D4'], ['\"item_id\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"msg_67c9fdcf37fc8190ba82116e33fb28c507b8b0ad4e5eb654\"', '#CE9178'], [',', '#D4D4D4'], ['\"output_index\"', '#9CDCFE'], [':', '#D4D4D4'], ['0', '#B5CEA8'], [',', '#D4D4D4'], ['\"content_index\"', '#9CDCFE'], [':', '#D4D4D4'], ['0', '#B5CEA8'], [',', '#D4D4D4'], ['\"text\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"Hi there! How can I assist you today?\"', '#CE9178'], ['}', '#D4D4D4'], '\\n\\n', ['event: response.content_part.done', '#D4D4D4'], '\\n', ['data: {', '#D4D4D4'], ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"response.content_part.done\"', '#CE9178'], [',', '#D4D4D4'], ['\"item_id\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"msg_67c9fdcf37fc8190ba82116e33fb28c507b8b0ad4e5eb654\"', '#CE9178'], [',', '#D4D4D4'], ['\"output_index\"', '#9CDCFE'], [':', '#D4D4D4'], ['0', '#B5CEA8'], [',', '#D4D4D4'], ['\"content_index\"', '#9CDCFE'], [':', '#D4D4D4'], ['0', '#B5CEA8'], [',', '#D4D4D4'], ['\"part\"', '#9CDCFE'], [':{', '#D4D4D4'], ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"output_text\"', '#CE9178'], [',', '#D4D4D4'], ['\"text\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"Hi there! How can I assist you today?\"', '#CE9178'], [',', '#D4D4D4'], ['\"annotations\"', '#9CDCFE'], [':[]}}', '#D4D4D4'], '\\n\\n', ['event: response.output_item.done', '#D4D4D4'], '\\n', ['data: {', '#D4D4D4'], ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"response.output_item.done\"', '#CE9178'], [',', '#D4D4D4'], ['\"output_index\"', '#9CDCFE'], [':', '#D4D4D4'], ['0', '#B5CEA8'], [',', '#D4D4D4'], ['\"item\"', '#9CDCFE'], [':{', '#D4D4D4'], ['\"id\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"msg_67c9fdcf37fc8190ba82116e33fb28c507b8b0ad4e5eb654\"', '#CE9178'], [',', '#D4D4D4'], ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"message\"', '#CE9178'], [',', '#D4D4D4'], ['\"status\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"completed\"', '#CE9178'], [',', '#D4D4D4'], ['\"role\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"assistant\"', '#CE9178'], [',', '#D4D4D4'], ['\"content\"', '#9CDCFE'], [':[{', '#D4D4D4'], ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"output_text\"', '#CE9178'], [',', '#D4D4D4'], ['\"text\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"Hi there! How can I assist you today?\"', '#CE9178'], [',', '#D4D4D4'], ['\"annotations\"', '#9CDCFE'], [':[]}]}}', '#D4D4D4'], '\\n\\n', ['event: response.completed', '#D4D4D4'], '\\n', ['data: {', '#D4D4D4'], ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"response.completed\"', '#CE9178'], [',', '#D4D4D4'], ['\"response\"', '#9CDCFE'], [':{', '#D4D4D4'], ['\"id\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"resp_67c9fdcecf488190bdd9a0409de3a1ec07b8b0ad4e5eb654\"', '#CE9178'], [',', '#D4D4D4'], ['\"object\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"response\"', '#CE9178'], [',', '#D4D4D4'], ['\"created_at\"', '#9CDCFE'], [':', '#D4D4D4'], ['1741290958', '#B5CEA8'], [',', '#D4D4D4'], ['\"status\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"completed\"', '#CE9178'], [',', '#D4D4D4'], ['\"error\"', '#9CDCFE'], [':', '#D4D4D4'], ['null', '#569CD6'], [',', '#D4D4D4'], ['\"incomplete_details\"', '#9CDCFE'], [':', '#D4D4D4'], ['null', '#569CD6'], [',', '#D4D4D4'], ['\"instructions\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"You are a helpful assistant.\"', '#CE9178'], [',', '#D4D4D4'], ['\"max_output_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ['null', '#569CD6'], [',', '#D4D4D4'], ['\"model\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"gpt-4.1-2025-04-14\"', '#CE9178'], [',', '#D4D4D4'], ['\"output\"', '#9CDCFE'], [':[{', '#D4D4D4'], ['\"id\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"msg_67c9fdcf37fc8190ba82116e33fb28c507b8b0ad4e5eb654\"', '#CE9178'], [',', '#D4D4D4'], ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"message\"', '#CE9178'], [',', '#D4D4D4'], ['\"status\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"completed\"', '#CE9178'], [',', '#D4D4D4'], ['\"role\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"assistant\"', '#CE9178'], [',', '#D4D4D4'], ['\"content\"', '#9CDCFE'], [':[{', '#D4D4D4'], ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"output_text\"', '#CE9178'], [',', '#D4D4D4'], ['\"text\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"Hi there! How can I assist you today?\"', '#CE9178'], [',', '#D4D4D4'], ['\"annotations\"', '#9CDCFE'], [':[]}]}],', '#D4D4D4'], ['\"parallel_tool_calls\"', '#9CDCFE'], [':', '#D4D4D4'], ['true', '#569CD6'], [',', '#D4D4D4'], ['\"previous_response_id\"', '#9CDCFE'], [':', '#D4D4D4'], ['null', '#569CD6'], [',', '#D4D4D4'], ['\"reasoning\"', '#9CDCFE'], [':{', '#D4D4D4'], ['\"effort\"', '#9CDCFE'], [':', '#D4D4D4'], ['null', '#569CD6'], [',', '#D4D4D4'], ['\"summary\"', '#9CDCFE'], [':', '#D4D4D4'], ['null', '#569CD6'], ['},', '#D4D4D4'], ['\"store\"', '#9CDCFE'], [':', '#D4D4D4'], ['true', '#569CD6'], [',', '#D4D4D4'], ['\"temperature\"', '#9CDCFE'], [':', '#D4D4D4'], ['1.0', '#B5CEA8'], [',', '#D4D4D4'], ['\"text\"', '#9CDCFE'], [':{', '#D4D4D4'], ['\"format\"', '#9CDCFE'], [':{', '#D4D4D4'], ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"text\"', '#CE9178'], ['}},', '#D4D4D4'], ['\"tool_choice\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"auto\"', '#CE9178'], [',', '#D4D4D4'], ['\"tools\"', '#9CDCFE'], [':[],', '#D4D4D4'], ['\"top_p\"', '#9CDCFE'], [':', '#D4D4D4'], ['1.0', '#B5CEA8'], [',', '#D4D4D4'], ['\"truncation\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"disabled\"', '#CE9178'], [',', '#D4D4D4'], ['\"usage\"', '#9CDCFE'], [':{', '#D4D4D4'], ['\"input_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ['37', '#B5CEA8'], [',', '#D4D4D4'], ['\"output_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ['11', '#B5CEA8'], [',', '#D4D4D4'], ['\"output_tokens_details\"', '#9CDCFE'], [':{', '#D4D4D4'], ['\"reasoning_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ['0', '#B5CEA8'], ['},', '#D4D4D4'], ['\"total_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ['48', '#B5CEA8'], ['},', '#D4D4D4'], ['\"user\"', '#9CDCFE'], [':', '#D4D4D4'], ['null', '#569CD6'], [',', '#D4D4D4'], ['\"metadata\"', '#9CDCFE'], [':{}}}', '#D4D4D4'], '\\n'],\n                  value: 'event: response.created\\ndata: {\"type\":\"response.created\",\"response\":{\"id\":\"resp_67c9fdcecf488190bdd9a0409de3a1ec07b8b0ad4e5eb654\",\"object\":\"response\",\"created_at\":1741290958,\"status\":\"in_progress\",\"error\":null,\"incomplete_details\":null,\"instructions\":\"You are a helpful assistant.\",\"max_output_tokens\":null,\"model\":\"gpt-4.1-2025-04-14\",\"output\":[],\"parallel_tool_calls\":true,\"previous_response_id\":null,\"reasoning\":{\"effort\":null,\"summary\":null},\"store\":true,\"temperature\":1.0,\"text\":{\"format\":{\"type\":\"text\"}},\"tool_choice\":\"auto\",\"tools\":[],\"top_p\":1.0,\"truncation\":\"disabled\",\"usage\":null,\"user\":null,\"metadata\":{}}}\\n\\nevent: response.in_progress\\ndata: {\"type\":\"response.in_progress\",\"response\":{\"id\":\"resp_67c9fdcecf488190bdd9a0409de3a1ec07b8b0ad4e5eb654\",\"object\":\"response\",\"created_at\":1741290958,\"status\":\"in_progress\",\"error\":null,\"incomplete_details\":null,\"instructions\":\"You are a helpful assistant.\",\"max_output_tokens\":null,\"model\":\"gpt-4.1-2025-04-14\",\"output\":[],\"parallel_tool_calls\":true,\"previous_response_id\":null,\"reasoning\":{\"effort\":null,\"summary\":null},\"store\":true,\"temperature\":1.0,\"text\":{\"format\":{\"type\":\"text\"}},\"tool_choice\":\"auto\",\"tools\":[],\"top_p\":1.0,\"truncation\":\"disabled\",\"usage\":null,\"user\":null,\"metadata\":{}}}\\n\\nevent: response.output_item.added\\ndata: {\"type\":\"response.output_item.added\",\"output_index\":0,\"item\":{\"id\":\"msg_67c9fdcf37fc8190ba82116e33fb28c507b8b0ad4e5eb654\",\"type\":\"message\",\"status\":\"in_progress\",\"role\":\"assistant\",\"content\":[]}}\\n\\nevent: response.content_part.added\\ndata: {\"type\":\"response.content_part.added\",\"item_id\":\"msg_67c9fdcf37fc8190ba82116e33fb28c507b8b0ad4e5eb654\",\"output_index\":0,\"content_index\":0,\"part\":{\"type\":\"output_text\",\"text\":\"\",\"annotations\":[]}}\\n\\nevent: response.output_text.delta\\ndata: {\"type\":\"response.output_text.delta\",\"item_id\":\"msg_67c9fdcf37fc8190ba82116e33fb28c507b8b0ad4e5eb654\",\"output_index\":0,\"content_index\":0,\"delta\":\"Hi\"}\\n\\n...\\n\\nevent: response.output_text.done\\ndata: {\"type\":\"response.output_text.done\",\"item_id\":\"msg_67c9fdcf37fc8190ba82116e33fb28c507b8b0ad4e5eb654\",\"output_index\":0,\"content_index\":0,\"text\":\"Hi there! How can I assist you today?\"}\\n\\nevent: response.content_part.done\\ndata: {\"type\":\"response.content_part.done\",\"item_id\":\"msg_67c9fdcf37fc8190ba82116e33fb28c507b8b0ad4e5eb654\",\"output_index\":0,\"content_index\":0,\"part\":{\"type\":\"output_text\",\"text\":\"Hi there! How can I assist you today?\",\"annotations\":[]}}\\n\\nevent: response.output_item.done\\ndata: {\"type\":\"response.output_item.done\",\"output_index\":0,\"item\":{\"id\":\"msg_67c9fdcf37fc8190ba82116e33fb28c507b8b0ad4e5eb654\",\"type\":\"message\",\"status\":\"completed\",\"role\":\"assistant\",\"content\":[{\"type\":\"output_text\",\"text\":\"Hi there! How can I assist you today?\",\"annotations\":[]}]}}\\n\\nevent: response.completed\\ndata: {\"type\":\"response.completed\",\"response\":{\"id\":\"resp_67c9fdcecf488190bdd9a0409de3a1ec07b8b0ad4e5eb654\",\"object\":\"response\",\"created_at\":1741290958,\"status\":\"completed\",\"error\":null,\"incomplete_details\":null,\"instructions\":\"You are a helpful assistant.\",\"max_output_tokens\":null,\"model\":\"gpt-4.1-2025-04-14\",\"output\":[{\"id\":\"msg_67c9fdcf37fc8190ba82116e33fb28c507b8b0ad4e5eb654\",\"type\":\"message\",\"status\":\"completed\",\"role\":\"assistant\",\"content\":[{\"type\":\"output_text\",\"text\":\"Hi there! How can I assist you today?\",\"annotations\":[]}]}],\"parallel_tool_calls\":true,\"previous_response_id\":null,\"reasoning\":{\"effort\":null,\"summary\":null},\"store\":true,\"temperature\":1.0,\"text\":{\"format\":{\"type\":\"text\"}},\"tool_choice\":\"auto\",\"tools\":[],\"top_p\":1.0,\"truncation\":\"disabled\",\"usage\":{\"input_tokens\":37,\"output_tokens\":11,\"output_tokens_details\":{\"reasoning_tokens\":0},\"total_tokens\":48},\"user\":null,\"metadata\":{}}}\\n'\n                },\n                language: 'json',\n                title: ''\n              }],\n              title: 'Streaming'\n            },\n            description: 'Streaming'\n          }, {\n            codeblock: {\n              tabs: [{\n                code: '{\\n  \"id\": \"resp_67ca09c5efe0819096d0511c92b8c890096610f474011cc0\",\\n  \"object\": \"response\",\\n  \"created_at\": 1741294021,\\n  \"status\": \"completed\",\\n  \"error\": null,\\n  \"incomplete_details\": null,\\n  \"instructions\": null,\\n  \"max_output_tokens\": null,\\n  \"model\": \"gpt-4.1-2025-04-14\",\\n  \"output\": [\\n    {\\n      \"type\": \"function_call\",\\n      \"id\": \"fc_67ca09c6bedc8190a7abfec07b1a1332096610f474011cc0\",\\n      \"call_id\": \"call_unLAR8MvFNptuiZK6K6HCy5k\",\\n      \"name\": \"get_current_weather\",\\n      \"arguments\": \"{\\\\\"location\\\\\":\\\\\"Boston, MA\\\\\",\\\\\"unit\\\\\":\\\\\"celsius\\\\\"}\",\\n      \"status\": \"completed\"\\n    }\\n  ],\\n  \"parallel_tool_calls\": true,\\n  \"previous_response_id\": null,\\n  \"reasoning\": {\\n    \"effort\": null,\\n    \"summary\": null\\n  },\\n  \"store\": true,\\n  \"temperature\": 1.0,\\n  \"text\": {\\n    \"format\": {\\n      \"type\": \"text\"\\n    }\\n  },\\n  \"tool_choice\": \"auto\",\\n  \"tools\": [\\n    {\\n      \"type\": \"function\",\\n      \"description\": \"Get the current weather in a given location\",\\n      \"name\": \"get_current_weather\",\\n      \"parameters\": {\\n        \"type\": \"object\",\\n        \"properties\": {\\n          \"location\": {\\n            \"type\": \"string\",\\n            \"description\": \"The city and state, e.g. San Francisco, CA\"\\n          },\\n          \"unit\": {\\n            \"type\": \"string\",\\n            \"enum\": [\\n              \"celsius\",\\n              \"fahrenheit\"\\n            ]\\n          }\\n        },\\n        \"required\": [\\n          \"location\",\\n          \"unit\"\\n        ]\\n      },\\n      \"strict\": true\\n    }\\n  ],\\n  \"top_p\": 1.0,\\n  \"truncation\": \"disabled\",\\n  \"usage\": {\\n    \"input_tokens\": 291,\\n    \"output_tokens\": 23,\\n    \"output_tokens_details\": {\\n      \"reasoning_tokens\": 0\\n    },\\n    \"total_tokens\": 314\\n  },\\n  \"user\": null,\\n  \"metadata\": {}\\n}\\n',\n                highlighted: {\n                  annotations: [],\n                  code: '{\\n  \"id\": \"resp_67ca09c5efe0819096d0511c92b8c890096610f474011cc0\",\\n  \"object\": \"response\",\\n  \"created_at\": 1741294021,\\n  \"status\": \"completed\",\\n  \"error\": null,\\n  \"incomplete_details\": null,\\n  \"instructions\": null,\\n  \"max_output_tokens\": null,\\n  \"model\": \"gpt-4.1-2025-04-14\",\\n  \"output\": [\\n    {\\n      \"type\": \"function_call\",\\n      \"id\": \"fc_67ca09c6bedc8190a7abfec07b1a1332096610f474011cc0\",\\n      \"call_id\": \"call_unLAR8MvFNptuiZK6K6HCy5k\",\\n      \"name\": \"get_current_weather\",\\n      \"arguments\": \"{\\\\\"location\\\\\":\\\\\"Boston, MA\\\\\",\\\\\"unit\\\\\":\\\\\"celsius\\\\\"}\",\\n      \"status\": \"completed\"\\n    }\\n  ],\\n  \"parallel_tool_calls\": true,\\n  \"previous_response_id\": null,\\n  \"reasoning\": {\\n    \"effort\": null,\\n    \"summary\": null\\n  },\\n  \"store\": true,\\n  \"temperature\": 1.0,\\n  \"text\": {\\n    \"format\": {\\n      \"type\": \"text\"\\n    }\\n  },\\n  \"tool_choice\": \"auto\",\\n  \"tools\": [\\n    {\\n      \"type\": \"function\",\\n      \"description\": \"Get the current weather in a given location\",\\n      \"name\": \"get_current_weather\",\\n      \"parameters\": {\\n        \"type\": \"object\",\\n        \"properties\": {\\n          \"location\": {\\n            \"type\": \"string\",\\n            \"description\": \"The city and state, e.g. San Francisco, CA\"\\n          },\\n          \"unit\": {\\n            \"type\": \"string\",\\n            \"enum\": [\\n              \"celsius\",\\n              \"fahrenheit\"\\n            ]\\n          }\\n        },\\n        \"required\": [\\n          \"location\",\\n          \"unit\"\\n        ]\\n      },\\n      \"strict\": true\\n    }\\n  ],\\n  \"top_p\": 1.0,\\n  \"truncation\": \"disabled\",\\n  \"usage\": {\\n    \"input_tokens\": 291,\\n    \"output_tokens\": 23,\\n    \"output_tokens_details\": {\\n      \"reasoning_tokens\": 0\\n    },\\n    \"total_tokens\": 314\\n  },\\n  \"user\": null,\\n  \"metadata\": {}\\n}\\n',\n                  lang: 'json',\n                  meta: '',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['{', '#D4D4D4'], '\\n  ', ['\"id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"resp_67ca09c5efe0819096d0511c92b8c890096610f474011cc0\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"object\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"response\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"created_at\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1741294021', '#B5CEA8'], [',', '#D4D4D4'], '\\n  ', ['\"status\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"completed\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"error\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"incomplete_details\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"instructions\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"max_output_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"model\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"gpt-4.1-2025-04-14\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"output\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], '\\n      ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"function_call\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"fc_67ca09c6bedc8190a7abfec07b1a1332096610f474011cc0\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"call_id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"call_unLAR8MvFNptuiZK6K6HCy5k\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"name\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"get_current_weather\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"arguments\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"{', '#CE9178'], ['\\\\\"', '#D7BA7D'], ['location', '#CE9178'], ['\\\\\"', '#D7BA7D'], [':', '#CE9178'], ['\\\\\"', '#D7BA7D'], ['Boston, MA', '#CE9178'], ['\\\\\"', '#D7BA7D'], [',', '#CE9178'], ['\\\\\"', '#D7BA7D'], ['unit', '#CE9178'], ['\\\\\"', '#D7BA7D'], [':', '#CE9178'], ['\\\\\"', '#D7BA7D'], ['celsius', '#CE9178'], ['\\\\\"', '#D7BA7D'], ['}\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"status\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"completed\"', '#CE9178'], '\\n    ', ['}', '#D4D4D4'], '\\n  ', ['],', '#D4D4D4'], '\\n  ', ['\"parallel_tool_calls\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['true', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"previous_response_id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"reasoning\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n    ', ['\"effort\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n    ', ['\"summary\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], '\\n  ', ['},', '#D4D4D4'], '\\n  ', ['\"store\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['true', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"temperature\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1.0', '#B5CEA8'], [',', '#D4D4D4'], '\\n  ', ['\"text\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n    ', ['\"format\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n      ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"text\"', '#CE9178'], '\\n    ', ['}', '#D4D4D4'], '\\n  ', ['},', '#D4D4D4'], '\\n  ', ['\"tool_choice\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"auto\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"tools\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], '\\n      ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"function\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"description\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"Get the current weather in a given location\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"name\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"get_current_weather\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"parameters\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n        ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"object\"', '#CE9178'], [',', '#D4D4D4'], '\\n        ', ['\"properties\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n          ', ['\"location\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n            ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"string\"', '#CE9178'], [',', '#D4D4D4'], '\\n            ', ['\"description\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"The city and state, e.g. San Francisco, CA\"', '#CE9178'], '\\n          ', ['},', '#D4D4D4'], '\\n          ', ['\"unit\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n            ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"string\"', '#CE9178'], [',', '#D4D4D4'], '\\n            ', ['\"enum\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n              ', ['\"celsius\"', '#CE9178'], [',', '#D4D4D4'], '\\n              ', ['\"fahrenheit\"', '#CE9178'], '\\n            ', [']', '#D4D4D4'], '\\n          ', ['}', '#D4D4D4'], '\\n        ', ['},', '#D4D4D4'], '\\n        ', ['\"required\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n          ', ['\"location\"', '#CE9178'], [',', '#D4D4D4'], '\\n          ', ['\"unit\"', '#CE9178'], '\\n        ', [']', '#D4D4D4'], '\\n      ', ['},', '#D4D4D4'], '\\n      ', ['\"strict\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['true', '#569CD6'], '\\n    ', ['}', '#D4D4D4'], '\\n  ', ['],', '#D4D4D4'], '\\n  ', ['\"top_p\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1.0', '#B5CEA8'], [',', '#D4D4D4'], '\\n  ', ['\"truncation\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"disabled\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"usage\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n    ', ['\"input_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['291', '#B5CEA8'], [',', '#D4D4D4'], '\\n    ', ['\"output_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['23', '#B5CEA8'], [',', '#D4D4D4'], '\\n    ', ['\"output_tokens_details\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n      ', ['\"reasoning_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], '\\n    ', ['},', '#D4D4D4'], '\\n    ', ['\"total_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['314', '#B5CEA8'], '\\n  ', ['},', '#D4D4D4'], '\\n  ', ['\"user\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"metadata\"', '#9CDCFE'], [': {}', '#D4D4D4'], '\\n', ['}', '#D4D4D4'], '\\n'],\n                  value: '{\\n  \"id\": \"resp_67ca09c5efe0819096d0511c92b8c890096610f474011cc0\",\\n  \"object\": \"response\",\\n  \"created_at\": 1741294021,\\n  \"status\": \"completed\",\\n  \"error\": null,\\n  \"incomplete_details\": null,\\n  \"instructions\": null,\\n  \"max_output_tokens\": null,\\n  \"model\": \"gpt-4.1-2025-04-14\",\\n  \"output\": [\\n    {\\n      \"type\": \"function_call\",\\n      \"id\": \"fc_67ca09c6bedc8190a7abfec07b1a1332096610f474011cc0\",\\n      \"call_id\": \"call_unLAR8MvFNptuiZK6K6HCy5k\",\\n      \"name\": \"get_current_weather\",\\n      \"arguments\": \"{\\\\\"location\\\\\":\\\\\"Boston, MA\\\\\",\\\\\"unit\\\\\":\\\\\"celsius\\\\\"}\",\\n      \"status\": \"completed\"\\n    }\\n  ],\\n  \"parallel_tool_calls\": true,\\n  \"previous_response_id\": null,\\n  \"reasoning\": {\\n    \"effort\": null,\\n    \"summary\": null\\n  },\\n  \"store\": true,\\n  \"temperature\": 1.0,\\n  \"text\": {\\n    \"format\": {\\n      \"type\": \"text\"\\n    }\\n  },\\n  \"tool_choice\": \"auto\",\\n  \"tools\": [\\n    {\\n      \"type\": \"function\",\\n      \"description\": \"Get the current weather in a given location\",\\n      \"name\": \"get_current_weather\",\\n      \"parameters\": {\\n        \"type\": \"object\",\\n        \"properties\": {\\n          \"location\": {\\n            \"type\": \"string\",\\n            \"description\": \"The city and state, e.g. San Francisco, CA\"\\n          },\\n          \"unit\": {\\n            \"type\": \"string\",\\n            \"enum\": [\\n              \"celsius\",\\n              \"fahrenheit\"\\n            ]\\n          }\\n        },\\n        \"required\": [\\n          \"location\",\\n          \"unit\"\\n        ]\\n      },\\n      \"strict\": true\\n    }\\n  ],\\n  \"top_p\": 1.0,\\n  \"truncation\": \"disabled\",\\n  \"usage\": {\\n    \"input_tokens\": 291,\\n    \"output_tokens\": 23,\\n    \"output_tokens_details\": {\\n      \"reasoning_tokens\": 0\\n    },\\n    \"total_tokens\": 314\\n  },\\n  \"user\": null,\\n  \"metadata\": {}\\n}\\n'\n                },\n                language: 'json',\n                title: ''\n              }],\n              title: 'Functions'\n            },\n            description: 'Functions'\n          }, {\n            codeblock: {\n              tabs: [{\n                code: '{\\n  \"id\": \"resp_67ccd7eca01881908ff0b5146584e408072912b2993db808\",\\n  \"object\": \"response\",\\n  \"created_at\": 1741477868,\\n  \"status\": \"completed\",\\n  \"error\": null,\\n  \"incomplete_details\": null,\\n  \"instructions\": null,\\n  \"max_output_tokens\": null,\\n  \"model\": \"o1-2024-12-17\",\\n  \"output\": [\\n    {\\n      \"type\": \"message\",\\n      \"id\": \"msg_67ccd7f7b5848190a6f3e95d809f6b44072912b2993db808\",\\n      \"status\": \"completed\",\\n      \"role\": \"assistant\",\\n      \"content\": [\\n        {\\n          \"type\": \"output_text\",\\n          \"text\": \"The classic tongue twister...\",\\n          \"annotations\": []\\n        }\\n      ]\\n    }\\n  ],\\n  \"parallel_tool_calls\": true,\\n  \"previous_response_id\": null,\\n  \"reasoning\": {\\n    \"effort\": \"high\",\\n    \"summary\": null\\n  },\\n  \"store\": true,\\n  \"temperature\": 1.0,\\n  \"text\": {\\n    \"format\": {\\n      \"type\": \"text\"\\n    }\\n  },\\n  \"tool_choice\": \"auto\",\\n  \"tools\": [],\\n  \"top_p\": 1.0,\\n  \"truncation\": \"disabled\",\\n  \"usage\": {\\n    \"input_tokens\": 81,\\n    \"input_tokens_details\": {\\n      \"cached_tokens\": 0\\n    },\\n    \"output_tokens\": 1035,\\n    \"output_tokens_details\": {\\n      \"reasoning_tokens\": 832\\n    },\\n    \"total_tokens\": 1116\\n  },\\n  \"user\": null,\\n  \"metadata\": {}\\n}\\n',\n                highlighted: {\n                  annotations: [],\n                  code: '{\\n  \"id\": \"resp_67ccd7eca01881908ff0b5146584e408072912b2993db808\",\\n  \"object\": \"response\",\\n  \"created_at\": 1741477868,\\n  \"status\": \"completed\",\\n  \"error\": null,\\n  \"incomplete_details\": null,\\n  \"instructions\": null,\\n  \"max_output_tokens\": null,\\n  \"model\": \"o1-2024-12-17\",\\n  \"output\": [\\n    {\\n      \"type\": \"message\",\\n      \"id\": \"msg_67ccd7f7b5848190a6f3e95d809f6b44072912b2993db808\",\\n      \"status\": \"completed\",\\n      \"role\": \"assistant\",\\n      \"content\": [\\n        {\\n          \"type\": \"output_text\",\\n          \"text\": \"The classic tongue twister...\",\\n          \"annotations\": []\\n        }\\n      ]\\n    }\\n  ],\\n  \"parallel_tool_calls\": true,\\n  \"previous_response_id\": null,\\n  \"reasoning\": {\\n    \"effort\": \"high\",\\n    \"summary\": null\\n  },\\n  \"store\": true,\\n  \"temperature\": 1.0,\\n  \"text\": {\\n    \"format\": {\\n      \"type\": \"text\"\\n    }\\n  },\\n  \"tool_choice\": \"auto\",\\n  \"tools\": [],\\n  \"top_p\": 1.0,\\n  \"truncation\": \"disabled\",\\n  \"usage\": {\\n    \"input_tokens\": 81,\\n    \"input_tokens_details\": {\\n      \"cached_tokens\": 0\\n    },\\n    \"output_tokens\": 1035,\\n    \"output_tokens_details\": {\\n      \"reasoning_tokens\": 832\\n    },\\n    \"total_tokens\": 1116\\n  },\\n  \"user\": null,\\n  \"metadata\": {}\\n}\\n',\n                  lang: 'json',\n                  meta: '',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['{', '#D4D4D4'], '\\n  ', ['\"id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"resp_67ccd7eca01881908ff0b5146584e408072912b2993db808\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"object\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"response\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"created_at\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1741477868', '#B5CEA8'], [',', '#D4D4D4'], '\\n  ', ['\"status\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"completed\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"error\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"incomplete_details\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"instructions\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"max_output_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"model\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"o1-2024-12-17\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"output\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], '\\n      ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"message\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"msg_67ccd7f7b5848190a6f3e95d809f6b44072912b2993db808\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"status\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"completed\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"role\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"assistant\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"content\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n        ', ['{', '#D4D4D4'], '\\n          ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"output_text\"', '#CE9178'], [',', '#D4D4D4'], '\\n          ', ['\"text\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"The classic tongue twister...\"', '#CE9178'], [',', '#D4D4D4'], '\\n          ', ['\"annotations\"', '#9CDCFE'], [': []', '#D4D4D4'], '\\n        ', ['}', '#D4D4D4'], '\\n      ', [']', '#D4D4D4'], '\\n    ', ['}', '#D4D4D4'], '\\n  ', ['],', '#D4D4D4'], '\\n  ', ['\"parallel_tool_calls\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['true', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"previous_response_id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"reasoning\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n    ', ['\"effort\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"high\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['\"summary\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], '\\n  ', ['},', '#D4D4D4'], '\\n  ', ['\"store\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['true', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"temperature\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1.0', '#B5CEA8'], [',', '#D4D4D4'], '\\n  ', ['\"text\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n    ', ['\"format\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n      ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"text\"', '#CE9178'], '\\n    ', ['}', '#D4D4D4'], '\\n  ', ['},', '#D4D4D4'], '\\n  ', ['\"tool_choice\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"auto\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"tools\"', '#9CDCFE'], [': [],', '#D4D4D4'], '\\n  ', ['\"top_p\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1.0', '#B5CEA8'], [',', '#D4D4D4'], '\\n  ', ['\"truncation\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"disabled\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"usage\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n    ', ['\"input_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['81', '#B5CEA8'], [',', '#D4D4D4'], '\\n    ', ['\"input_tokens_details\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n      ', ['\"cached_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], '\\n    ', ['},', '#D4D4D4'], '\\n    ', ['\"output_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1035', '#B5CEA8'], [',', '#D4D4D4'], '\\n    ', ['\"output_tokens_details\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n      ', ['\"reasoning_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['832', '#B5CEA8'], '\\n    ', ['},', '#D4D4D4'], '\\n    ', ['\"total_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1116', '#B5CEA8'], '\\n  ', ['},', '#D4D4D4'], '\\n  ', ['\"user\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['\"metadata\"', '#9CDCFE'], [': {}', '#D4D4D4'], '\\n', ['}', '#D4D4D4'], '\\n'],\n                  value: '{\\n  \"id\": \"resp_67ccd7eca01881908ff0b5146584e408072912b2993db808\",\\n  \"object\": \"response\",\\n  \"created_at\": 1741477868,\\n  \"status\": \"completed\",\\n  \"error\": null,\\n  \"incomplete_details\": null,\\n  \"instructions\": null,\\n  \"max_output_tokens\": null,\\n  \"model\": \"o1-2024-12-17\",\\n  \"output\": [\\n    {\\n      \"type\": \"message\",\\n      \"id\": \"msg_67ccd7f7b5848190a6f3e95d809f6b44072912b2993db808\",\\n      \"status\": \"completed\",\\n      \"role\": \"assistant\",\\n      \"content\": [\\n        {\\n          \"type\": \"output_text\",\\n          \"text\": \"The classic tongue twister...\",\\n          \"annotations\": []\\n        }\\n      ]\\n    }\\n  ],\\n  \"parallel_tool_calls\": true,\\n  \"previous_response_id\": null,\\n  \"reasoning\": {\\n    \"effort\": \"high\",\\n    \"summary\": null\\n  },\\n  \"store\": true,\\n  \"temperature\": 1.0,\\n  \"text\": {\\n    \"format\": {\\n      \"type\": \"text\"\\n    }\\n  },\\n  \"tool_choice\": \"auto\",\\n  \"tools\": [],\\n  \"top_p\": 1.0,\\n  \"truncation\": \"disabled\",\\n  \"usage\": {\\n    \"input_tokens\": 81,\\n    \"input_tokens_details\": {\\n      \"cached_tokens\": 0\\n    },\\n    \"output_tokens\": 1035,\\n    \"output_tokens_details\": {\\n      \"reasoning_tokens\": 832\\n    },\\n    \"total_tokens\": 1116\\n  },\\n  \"user\": null,\\n  \"metadata\": {}\\n}\\n'\n                },\n                language: 'json',\n                title: ''\n              }],\n              title: 'Reasoning'\n            },\n            description: 'Reasoning'\n          }]\n        }]\n      },\n      title: 'Create a model response',\n      type: 'rest_post'\n    }]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  toc,\n  frontmatter,\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n",{"_13":31,"_773":774,"_775":776},"rawPage","---\ntitle: Create a model response\nlayout: wide\nopenapi: ~/openapi.yaml#POST /responses\n---\n\n"]
