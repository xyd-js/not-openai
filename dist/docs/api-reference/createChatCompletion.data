[{"_1":2,"_711":712},"layout:/docs/api-reference",{"_3":4},"data",{"_5":6,"_697":698,"_703":-7,"_704":702,"_705":706},"sidebarGroups",[7,21,44,119,134,161,168,175,226,265,284,307,326,341,356,363,370,537,544,551,558,565,572,579,586,593,600,611,630],{"_8":9,"_10":11},"group","API Reference","items",[12],{"_13":14,"_15":16,"_17":18,"_19":20},"title","Introduction","href","/docs/api-reference/introduction","active",false,"uniqIndex",0,{"_8":22,"_10":23},"assistants",[24,28,32,36,40],{"_13":25,"_15":26,"_17":18,"_19":27},"List assistants","/docs/api-reference/listAssistants",1,{"_13":29,"_15":30,"_17":18,"_19":31},"Create assistant","/docs/api-reference/createAssistant",2,{"_13":33,"_15":34,"_17":18,"_19":35},"Retrieve assistant","/docs/api-reference/getAssistant",3,{"_13":37,"_15":38,"_17":18,"_19":39},"Modify assistant","/docs/api-reference/modifyAssistant",4,{"_13":41,"_15":42,"_17":18,"_19":43},"Delete assistant","/docs/api-reference/deleteAssistant",5,{"_8":45,"_10":46},"threads",[47,51,55,59,63,67,71,75,79,83,87,91,95,99,103,107,111,115],{"_13":48,"_15":49,"_17":18,"_19":50},"Create thread","/docs/api-reference/createThread",6,{"_13":52,"_15":53,"_17":18,"_19":54},"Create thread and run","/docs/api-reference/createThreadAndRun",7,{"_13":56,"_15":57,"_17":18,"_19":58},"Retrieve thread","/docs/api-reference/getThread",8,{"_13":60,"_15":61,"_17":18,"_19":62},"Modify thread","/docs/api-reference/modifyThread",9,{"_13":64,"_15":65,"_17":18,"_19":66},"Delete thread","/docs/api-reference/deleteThread",10,{"_13":68,"_15":69,"_17":18,"_19":70},"List messages","/docs/api-reference/listMessages",11,{"_13":72,"_15":73,"_17":18,"_19":74},"Create message","/docs/api-reference/createMessage",12,{"_13":76,"_15":77,"_17":18,"_19":78},"Retrieve message","/docs/api-reference/getMessage",13,{"_13":80,"_15":81,"_17":18,"_19":82},"Modify message","/docs/api-reference/modifyMessage",14,{"_13":84,"_15":85,"_17":18,"_19":86},"Delete message","/docs/api-reference/deleteMessage",15,{"_13":88,"_15":89,"_17":18,"_19":90},"List runs","/docs/api-reference/listRuns",16,{"_13":92,"_15":93,"_17":18,"_19":94},"Create run","/docs/api-reference/createRun",17,{"_13":96,"_15":97,"_17":18,"_19":98},"Retrieve run","/docs/api-reference/getRun",18,{"_13":100,"_15":101,"_17":18,"_19":102},"Modify run","/docs/api-reference/modifyRun",19,{"_13":104,"_15":105,"_17":18,"_19":106},"Cancel a run","/docs/api-reference/cancelRun",20,{"_13":108,"_15":109,"_17":18,"_19":110},"List run steps","/docs/api-reference/listRunSteps",21,{"_13":112,"_15":113,"_17":18,"_19":114},"Retrieve run step","/docs/api-reference/getRunStep",22,{"_13":116,"_15":117,"_17":18,"_19":118},"Submit tool outputs to run","/docs/api-reference/submitToolOuputsToRun",23,{"_8":120,"_10":121},"audio",[122,126,130],{"_13":123,"_15":124,"_17":18,"_19":125},"Create speech","/docs/api-reference/createSpeech",24,{"_13":127,"_15":128,"_17":18,"_19":129},"Create transcription","/docs/api-reference/createTranscription",25,{"_13":131,"_15":132,"_17":18,"_19":133},"Create translation","/docs/api-reference/createTranslation",26,{"_8":135,"_10":136},"chat",[137,141,145,149,153,157],{"_13":138,"_15":139,"_17":18,"_19":140},"List Chat Completions","/docs/api-reference/listChatCompletions",27,{"_13":142,"_15":143,"_17":18,"_19":144},"Create chat completion","/docs/api-reference/createChatCompletion",28,{"_13":146,"_15":147,"_17":18,"_19":148},"Get chat completion","/docs/api-reference/getChatCompletion",29,{"_13":150,"_15":151,"_17":18,"_19":152},"Update chat completion","/docs/api-reference/updateChatCompletion",30,{"_13":154,"_15":155,"_17":18,"_19":156},"Delete chat completion","/docs/api-reference/deleteChatCompletion",31,{"_13":158,"_15":159,"_17":18,"_19":160},"Get chat messages","/docs/api-reference/getChatCompletionMessages",32,{"_8":162,"_10":163},"completions",[164],{"_13":165,"_15":166,"_17":18,"_19":167},"Create completion","/docs/api-reference/createCompletion",33,{"_8":169,"_10":170},"embeddings",[171],{"_13":172,"_15":173,"_17":18,"_19":174},"Create embeddings","/docs/api-reference/createEmbedding",34,{"_8":176,"_10":177},"evals",[178,182,186,190,194,198,202,206,210,214,218,222],{"_13":179,"_15":180,"_17":18,"_19":181},"List evals","/docs/api-reference/listEvals",35,{"_13":183,"_15":184,"_17":18,"_19":185},"Create eval","/docs/api-reference/createEval",36,{"_13":187,"_15":188,"_17":18,"_19":189},"Get an eval","/docs/api-reference/getEval",37,{"_13":191,"_15":192,"_17":18,"_19":193},"Update an eval","/docs/api-reference/updateEval",38,{"_13":195,"_15":196,"_17":18,"_19":197},"Delete an eval","/docs/api-reference/deleteEval",39,{"_13":199,"_15":200,"_17":18,"_19":201},"Get eval runs","/docs/api-reference/getEvalRuns",40,{"_13":203,"_15":204,"_17":18,"_19":205},"Create eval run","/docs/api-reference/createEvalRun",41,{"_13":207,"_15":208,"_17":18,"_19":209},"Get an eval run","/docs/api-reference/getEvalRun",42,{"_13":211,"_15":212,"_17":18,"_19":213},"Cancel eval run","/docs/api-reference/cancelEvalRun",43,{"_13":215,"_15":216,"_17":18,"_19":217},"Delete eval run","/docs/api-reference/deleteEvalRun",44,{"_13":219,"_15":220,"_17":18,"_19":221},"Get eval run output items","/docs/api-reference/getEvalRunOutputItems",45,{"_13":223,"_15":224,"_17":18,"_19":225},"Get an output item of an eval run","/docs/api-reference/getEvalRunOutputItem",46,{"_8":227,"_10":228},"fine-tuning",[229,233,237,241,245,249,253,257,261],{"_13":230,"_15":231,"_17":18,"_19":232},"List checkpoint permissions","/docs/api-reference/listFineTuningCheckpointPermissions",47,{"_13":234,"_15":235,"_17":18,"_19":236},"Create checkpoint permissions","/docs/api-reference/createFineTuningCheckpointPermission",48,{"_13":238,"_15":239,"_17":18,"_19":240},"Delete checkpoint permission","/docs/api-reference/deleteFineTuningCheckpointPermission",49,{"_13":242,"_15":243,"_17":18,"_19":244},"List fine-tuning jobs","/docs/api-reference/listPaginatedFineTuningJobs",50,{"_13":246,"_15":247,"_17":18,"_19":248},"Create fine-tuning job","/docs/api-reference/createFineTuningJob",51,{"_13":250,"_15":251,"_17":18,"_19":252},"Retrieve fine-tuning job","/docs/api-reference/retrieveFineTuningJob",52,{"_13":254,"_15":255,"_17":18,"_19":256},"Cancel fine-tuning","/docs/api-reference/cancelFineTuningJob",53,{"_13":258,"_15":259,"_17":18,"_19":260},"List fine-tuning checkpoints","/docs/api-reference/listFineTuningJobCheckpoints",54,{"_13":262,"_15":263,"_17":18,"_19":264},"List fine-tuning events","/docs/api-reference/listFineTuningEvents",55,{"_8":266,"_10":267},"batch",[268,272,276,280],{"_13":269,"_15":270,"_17":18,"_19":271},"List batch","/docs/api-reference/listBatches",56,{"_13":273,"_15":274,"_17":18,"_19":275},"Create batch","/docs/api-reference/createBatch",57,{"_13":277,"_15":278,"_17":18,"_19":279},"Retrieve batch","/docs/api-reference/retrieveBatch",58,{"_13":281,"_15":282,"_17":18,"_19":283},"Cancel batch","/docs/api-reference/cancelBatch",59,{"_8":285,"_10":286},"files",[287,291,295,299,303],{"_13":288,"_15":289,"_17":18,"_19":290},"List files","/docs/api-reference/listFiles",60,{"_13":292,"_15":293,"_17":18,"_19":294},"Upload file","/docs/api-reference/createFile",61,{"_13":296,"_15":297,"_17":18,"_19":298},"Retrieve file","/docs/api-reference/retrieveFile",62,{"_13":300,"_15":301,"_17":18,"_19":302},"Delete file","/docs/api-reference/deleteFile",63,{"_13":304,"_15":305,"_17":18,"_19":306},"Retrieve file content","/docs/api-reference/downloadFile",64,{"_8":308,"_10":309},"uploads",[310,314,318,322],{"_13":311,"_15":312,"_17":18,"_19":313},"Create upload","/docs/api-reference/createUpload",65,{"_13":315,"_15":316,"_17":18,"_19":317},"Cancel upload","/docs/api-reference/cancelUpload",66,{"_13":319,"_15":320,"_17":18,"_19":321},"Complete upload","/docs/api-reference/completeUpload",67,{"_13":323,"_15":324,"_17":18,"_19":325},"Add upload part","/docs/api-reference/addUploadPart",68,{"_8":327,"_10":328},"images",[329,333,337],{"_13":330,"_15":331,"_17":18,"_19":332},"Create image edit","/docs/api-reference/createImageEdit",69,{"_13":334,"_15":335,"_17":18,"_19":336},"Create image","/docs/api-reference/createImage",70,{"_13":338,"_15":339,"_17":18,"_19":340},"Create image variation","/docs/api-reference/createImageVariation",71,{"_8":342,"_10":343},"models",[344,348,352],{"_13":345,"_15":346,"_17":18,"_19":347},"List models","/docs/api-reference/listModels",72,{"_13":349,"_15":350,"_17":18,"_19":351},"Retrieve model","/docs/api-reference/retrieveModel",73,{"_13":353,"_15":354,"_17":18,"_19":355},"Delete a fine-tuned model","/docs/api-reference/deleteModel",74,{"_8":357,"_10":358},"moderations",[359],{"_13":360,"_15":361,"_17":18,"_19":362},"Create moderation","/docs/api-reference/createModeration",75,{"_8":364,"_10":365},"audit-logs",[366],{"_13":367,"_15":368,"_17":18,"_19":369},"List audit logs","/docs/api-reference/list-audit-logs",76,{"_8":371,"_10":372},"administration",[373,377,381,385,389,393,397,401,405,409,413,417,421,425,429,433,437,441,445,449,453,457,461,465,469,473,477,481,485,489,493,497,501,505,509,513,517,521,525,529,533],{"_13":374,"_15":375,"_17":18,"_19":376},"List organization certificates","/docs/api-reference/listOrganizationCertificates",77,{"_13":378,"_15":379,"_17":18,"_19":380},"Upload certificate","/docs/api-reference/uploadCertificate",78,{"_13":382,"_15":383,"_17":18,"_19":384},"Activate certificates for organization","/docs/api-reference/activateOrganizationCertificates",79,{"_13":386,"_15":387,"_17":18,"_19":388},"Deactivate certificates for organization","/docs/api-reference/deactivateOrganizationCertificates",80,{"_13":390,"_15":391,"_17":18,"_19":392},"Get certificate","/docs/api-reference/getCertificate",81,{"_13":394,"_15":395,"_17":18,"_19":396},"Modify certificate","/docs/api-reference/modifyCertificate",82,{"_13":398,"_15":399,"_17":18,"_19":400},"Delete certificate","/docs/api-reference/deleteCertificate",83,{"_13":402,"_15":403,"_17":18,"_19":404},"List project certificates","/docs/api-reference/listProjectCertificates",84,{"_13":406,"_15":407,"_17":18,"_19":408},"Activate certificates for project","/docs/api-reference/activateProjectCertificates",85,{"_13":410,"_15":411,"_17":18,"_19":412},"Deactivate certificates for project","/docs/api-reference/deactivateProjectCertificates",86,{"_13":414,"_15":415,"_17":18,"_19":416},"List invites","/docs/api-reference/list-invites",87,{"_13":418,"_15":419,"_17":18,"_19":420},"Create invite","/docs/api-reference/inviteUser",88,{"_13":422,"_15":423,"_17":18,"_19":424},"Retrieve invite","/docs/api-reference/retrieve-invite",89,{"_13":426,"_15":427,"_17":18,"_19":428},"Delete invite","/docs/api-reference/delete-invite",90,{"_13":430,"_15":431,"_17":18,"_19":432},"List projects","/docs/api-reference/list-projects",91,{"_13":434,"_15":435,"_17":18,"_19":436},"Create project","/docs/api-reference/create-project",92,{"_13":438,"_15":439,"_17":18,"_19":440},"Retrieve project","/docs/api-reference/retrieve-project",93,{"_13":442,"_15":443,"_17":18,"_19":444},"Modify project","/docs/api-reference/modify-project",94,{"_13":446,"_15":447,"_17":18,"_19":448},"List project API keys","/docs/api-reference/list-project-api-keys",95,{"_13":450,"_15":451,"_17":18,"_19":452},"Retrieve project API key","/docs/api-reference/retrieve-project-api-key",96,{"_13":454,"_15":455,"_17":18,"_19":456},"Delete project API key","/docs/api-reference/delete-project-api-key",97,{"_13":458,"_15":459,"_17":18,"_19":460},"Archive project","/docs/api-reference/archive-project",98,{"_13":462,"_15":463,"_17":18,"_19":464},"List project rate limits","/docs/api-reference/list-project-rate-limits",99,{"_13":466,"_15":467,"_17":18,"_19":468},"Modify project rate limit","/docs/api-reference/update-project-rate-limits",100,{"_13":470,"_15":471,"_17":18,"_19":472},"List project service accounts","/docs/api-reference/list-project-service-accounts",101,{"_13":474,"_15":475,"_17":18,"_19":476},"Create project service account","/docs/api-reference/create-project-service-account",102,{"_13":478,"_15":479,"_17":18,"_19":480},"Retrieve project service account","/docs/api-reference/retrieve-project-service-account",103,{"_13":482,"_15":483,"_17":18,"_19":484},"Delete project service account","/docs/api-reference/delete-project-service-account",104,{"_13":486,"_15":487,"_17":18,"_19":488},"List project users","/docs/api-reference/list-project-users",105,{"_13":490,"_15":491,"_17":18,"_19":492},"Create project user","/docs/api-reference/create-project-user",106,{"_13":494,"_15":495,"_17":18,"_19":496},"Retrieve project user","/docs/api-reference/retrieve-project-user",107,{"_13":498,"_15":499,"_17":18,"_19":500},"Modify project user","/docs/api-reference/modify-project-user",108,{"_13":502,"_15":503,"_17":18,"_19":504},"Delete project user","/docs/api-reference/delete-project-user",109,{"_13":506,"_15":507,"_17":18,"_19":508},"List users","/docs/api-reference/list-users",110,{"_13":510,"_15":511,"_17":18,"_19":512},"Retrieve user","/docs/api-reference/retrieve-user",111,{"_13":514,"_15":515,"_17":18,"_19":516},"Modify user","/docs/api-reference/modify-user",112,{"_13":518,"_15":519,"_17":18,"_19":520},"Delete user","/docs/api-reference/delete-user",113,{"_13":522,"_15":523,"_17":18,"_19":524},"List all organization and project API keys.","/docs/api-reference/admin-api-keys-list",114,{"_13":526,"_15":527,"_17":18,"_19":528},"Create admin API key","/docs/api-reference/admin-api-keys-create",115,{"_13":530,"_15":531,"_17":18,"_19":532},"Retrieve admin API key","/docs/api-reference/admin-api-keys-get",116,{"_13":534,"_15":535,"_17":18,"_19":536},"Delete admin API key","/docs/api-reference/admin-api-keys-delete",117,{"_8":538,"_10":539},"usage-costs",[540],{"_13":541,"_15":542,"_17":18,"_19":543},"Costs","/docs/api-reference/usage-costs",118,{"_8":545,"_10":546},"usage-audio-speeches",[547],{"_13":548,"_15":549,"_17":18,"_19":550},"Audio speeches","/docs/api-reference/usage-audio-speeches",119,{"_8":552,"_10":553},"usage-audio-transcriptions",[554],{"_13":555,"_15":556,"_17":18,"_19":557},"Audio transcriptions","/docs/api-reference/usage-audio-transcriptions",120,{"_8":559,"_10":560},"usage-code-interpreter-sessions",[561],{"_13":562,"_15":563,"_17":18,"_19":564},"Code interpreter sessions","/docs/api-reference/usage-code-interpreter-sessions",121,{"_8":566,"_10":567},"usage-completions",[568],{"_13":569,"_15":570,"_17":18,"_19":571},"Completions","/docs/api-reference/usage-completions",122,{"_8":573,"_10":574},"usage-embeddings",[575],{"_13":576,"_15":577,"_17":18,"_19":578},"Embeddings","/docs/api-reference/usage-embeddings",123,{"_8":580,"_10":581},"usage-images",[582],{"_13":583,"_15":584,"_17":18,"_19":585},"Images","/docs/api-reference/usage-images",124,{"_8":587,"_10":588},"usage-moderations",[589],{"_13":590,"_15":591,"_17":18,"_19":592},"Moderations","/docs/api-reference/usage-moderations",125,{"_8":594,"_10":595},"usage-vector-stores",[596],{"_13":597,"_15":598,"_17":18,"_19":599},"Vector stores","/docs/api-reference/usage-vector-stores",126,{"_8":601,"_10":602},"realtime",[603,607],{"_13":604,"_15":605,"_17":18,"_19":606},"Create session","/docs/api-reference/create-realtime-session",127,{"_13":608,"_15":609,"_17":18,"_19":610},"Create transcription session","/docs/api-reference/create-realtime-transcription-session",128,{"_8":612,"_10":613},"responses",[614,618,622,626],{"_13":615,"_15":616,"_17":18,"_19":617},"Create a model response","/docs/api-reference/createResponse",129,{"_13":619,"_15":620,"_17":18,"_19":621},"Get a model response","/docs/api-reference/getResponse",130,{"_13":623,"_15":624,"_17":18,"_19":625},"Delete a model response","/docs/api-reference/deleteResponse",131,{"_13":627,"_15":628,"_17":18,"_19":629},"List input items","/docs/api-reference/listInputItems",132,{"_8":631,"_10":632},"vector_stores",[633,637,641,645,649,653,657,661,665,669,673,677,681,685,689,693],{"_13":634,"_15":635,"_17":18,"_19":636},"List vector stores","/docs/api-reference/listVectorStores",133,{"_13":638,"_15":639,"_17":18,"_19":640},"Create vector store","/docs/api-reference/createVectorStore",134,{"_13":642,"_15":643,"_17":18,"_19":644},"Retrieve vector store","/docs/api-reference/getVectorStore",135,{"_13":646,"_15":647,"_17":18,"_19":648},"Modify vector store","/docs/api-reference/modifyVectorStore",136,{"_13":650,"_15":651,"_17":18,"_19":652},"Delete vector store","/docs/api-reference/deleteVectorStore",137,{"_13":654,"_15":655,"_17":18,"_19":656},"Create vector store file batch","/docs/api-reference/createVectorStoreFileBatch",138,{"_13":658,"_15":659,"_17":18,"_19":660},"Retrieve vector store file batch","/docs/api-reference/getVectorStoreFileBatch",139,{"_13":662,"_15":663,"_17":18,"_19":664},"Cancel vector store file batch","/docs/api-reference/cancelVectorStoreFileBatch",140,{"_13":666,"_15":667,"_17":18,"_19":668},"List vector store files in a batch","/docs/api-reference/listFilesInVectorStoreBatch",141,{"_13":670,"_15":671,"_17":18,"_19":672},"List vector store files","/docs/api-reference/listVectorStoreFiles",142,{"_13":674,"_15":675,"_17":18,"_19":676},"Create vector store file","/docs/api-reference/createVectorStoreFile",143,{"_13":678,"_15":679,"_17":18,"_19":680},"Retrieve vector store file","/docs/api-reference/getVectorStoreFile",144,{"_13":682,"_15":683,"_17":18,"_19":684},"Update vector store file attributes","/docs/api-reference/updateVectorStoreFileAttributes",145,{"_13":686,"_15":687,"_17":18,"_19":688},"Delete vector store file","/docs/api-reference/deleteVectorStoreFile",146,{"_13":690,"_15":691,"_17":18,"_19":692},"Retrieve vector store file content","/docs/api-reference/retrieveVectorStoreFileContent",147,{"_13":694,"_15":695,"_17":18,"_19":696},"Search vector store","/docs/api-reference/searchVectorStore",148,"breadcrumbs",[699,701],{"_13":135,"_15":700},"",{"_13":142,"_15":702},"docs/api-reference/createChatCompletion","navlinks","slug","metadata",{"_13":142,"_707":708,"_709":710},"layout","wide","openapi","~/openapi.yaml#POST /chat/completions","/docs/api-reference",{"_3":713},{"_5":714,"_697":922,"_703":-7,"_704":702,"_925":926,"_705":927,"_928":929},[715,718,725,745,750,758,761,764,778,789,795,802,808,813,818,821,824,867,870,873,876,879,882,885,888,891,894,898,904],{"_8":9,"_10":716},[717],{"_13":14,"_15":16,"_17":18,"_19":20},{"_8":22,"_10":719},[720,721,722,723,724],{"_13":25,"_15":26,"_17":18,"_19":27},{"_13":29,"_15":30,"_17":18,"_19":31},{"_13":33,"_15":34,"_17":18,"_19":35},{"_13":37,"_15":38,"_17":18,"_19":39},{"_13":41,"_15":42,"_17":18,"_19":43},{"_8":45,"_10":726},[727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744],{"_13":48,"_15":49,"_17":18,"_19":50},{"_13":52,"_15":53,"_17":18,"_19":54},{"_13":56,"_15":57,"_17":18,"_19":58},{"_13":60,"_15":61,"_17":18,"_19":62},{"_13":64,"_15":65,"_17":18,"_19":66},{"_13":68,"_15":69,"_17":18,"_19":70},{"_13":72,"_15":73,"_17":18,"_19":74},{"_13":76,"_15":77,"_17":18,"_19":78},{"_13":80,"_15":81,"_17":18,"_19":82},{"_13":84,"_15":85,"_17":18,"_19":86},{"_13":88,"_15":89,"_17":18,"_19":90},{"_13":92,"_15":93,"_17":18,"_19":94},{"_13":96,"_15":97,"_17":18,"_19":98},{"_13":100,"_15":101,"_17":18,"_19":102},{"_13":104,"_15":105,"_17":18,"_19":106},{"_13":108,"_15":109,"_17":18,"_19":110},{"_13":112,"_15":113,"_17":18,"_19":114},{"_13":116,"_15":117,"_17":18,"_19":118},{"_8":120,"_10":746},[747,748,749],{"_13":123,"_15":124,"_17":18,"_19":125},{"_13":127,"_15":128,"_17":18,"_19":129},{"_13":131,"_15":132,"_17":18,"_19":133},{"_8":135,"_10":751},[752,753,754,755,756,757],{"_13":138,"_15":139,"_17":18,"_19":140},{"_13":142,"_15":143,"_17":18,"_19":144},{"_13":146,"_15":147,"_17":18,"_19":148},{"_13":150,"_15":151,"_17":18,"_19":152},{"_13":154,"_15":155,"_17":18,"_19":156},{"_13":158,"_15":159,"_17":18,"_19":160},{"_8":162,"_10":759},[760],{"_13":165,"_15":166,"_17":18,"_19":167},{"_8":169,"_10":762},[763],{"_13":172,"_15":173,"_17":18,"_19":174},{"_8":176,"_10":765},[766,767,768,769,770,771,772,773,774,775,776,777],{"_13":179,"_15":180,"_17":18,"_19":181},{"_13":183,"_15":184,"_17":18,"_19":185},{"_13":187,"_15":188,"_17":18,"_19":189},{"_13":191,"_15":192,"_17":18,"_19":193},{"_13":195,"_15":196,"_17":18,"_19":197},{"_13":199,"_15":200,"_17":18,"_19":201},{"_13":203,"_15":204,"_17":18,"_19":205},{"_13":207,"_15":208,"_17":18,"_19":209},{"_13":211,"_15":212,"_17":18,"_19":213},{"_13":215,"_15":216,"_17":18,"_19":217},{"_13":219,"_15":220,"_17":18,"_19":221},{"_13":223,"_15":224,"_17":18,"_19":225},{"_8":227,"_10":779},[780,781,782,783,784,785,786,787,788],{"_13":230,"_15":231,"_17":18,"_19":232},{"_13":234,"_15":235,"_17":18,"_19":236},{"_13":238,"_15":239,"_17":18,"_19":240},{"_13":242,"_15":243,"_17":18,"_19":244},{"_13":246,"_15":247,"_17":18,"_19":248},{"_13":250,"_15":251,"_17":18,"_19":252},{"_13":254,"_15":255,"_17":18,"_19":256},{"_13":258,"_15":259,"_17":18,"_19":260},{"_13":262,"_15":263,"_17":18,"_19":264},{"_8":266,"_10":790},[791,792,793,794],{"_13":269,"_15":270,"_17":18,"_19":271},{"_13":273,"_15":274,"_17":18,"_19":275},{"_13":277,"_15":278,"_17":18,"_19":279},{"_13":281,"_15":282,"_17":18,"_19":283},{"_8":285,"_10":796},[797,798,799,800,801],{"_13":288,"_15":289,"_17":18,"_19":290},{"_13":292,"_15":293,"_17":18,"_19":294},{"_13":296,"_15":297,"_17":18,"_19":298},{"_13":300,"_15":301,"_17":18,"_19":302},{"_13":304,"_15":305,"_17":18,"_19":306},{"_8":308,"_10":803},[804,805,806,807],{"_13":311,"_15":312,"_17":18,"_19":313},{"_13":315,"_15":316,"_17":18,"_19":317},{"_13":319,"_15":320,"_17":18,"_19":321},{"_13":323,"_15":324,"_17":18,"_19":325},{"_8":327,"_10":809},[810,811,812],{"_13":330,"_15":331,"_17":18,"_19":332},{"_13":334,"_15":335,"_17":18,"_19":336},{"_13":338,"_15":339,"_17":18,"_19":340},{"_8":342,"_10":814},[815,816,817],{"_13":345,"_15":346,"_17":18,"_19":347},{"_13":349,"_15":350,"_17":18,"_19":351},{"_13":353,"_15":354,"_17":18,"_19":355},{"_8":357,"_10":819},[820],{"_13":360,"_15":361,"_17":18,"_19":362},{"_8":364,"_10":822},[823],{"_13":367,"_15":368,"_17":18,"_19":369},{"_8":371,"_10":825},[826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866],{"_13":374,"_15":375,"_17":18,"_19":376},{"_13":378,"_15":379,"_17":18,"_19":380},{"_13":382,"_15":383,"_17":18,"_19":384},{"_13":386,"_15":387,"_17":18,"_19":388},{"_13":390,"_15":391,"_17":18,"_19":392},{"_13":394,"_15":395,"_17":18,"_19":396},{"_13":398,"_15":399,"_17":18,"_19":400},{"_13":402,"_15":403,"_17":18,"_19":404},{"_13":406,"_15":407,"_17":18,"_19":408},{"_13":410,"_15":411,"_17":18,"_19":412},{"_13":414,"_15":415,"_17":18,"_19":416},{"_13":418,"_15":419,"_17":18,"_19":420},{"_13":422,"_15":423,"_17":18,"_19":424},{"_13":426,"_15":427,"_17":18,"_19":428},{"_13":430,"_15":431,"_17":18,"_19":432},{"_13":434,"_15":435,"_17":18,"_19":436},{"_13":438,"_15":439,"_17":18,"_19":440},{"_13":442,"_15":443,"_17":18,"_19":444},{"_13":446,"_15":447,"_17":18,"_19":448},{"_13":450,"_15":451,"_17":18,"_19":452},{"_13":454,"_15":455,"_17":18,"_19":456},{"_13":458,"_15":459,"_17":18,"_19":460},{"_13":462,"_15":463,"_17":18,"_19":464},{"_13":466,"_15":467,"_17":18,"_19":468},{"_13":470,"_15":471,"_17":18,"_19":472},{"_13":474,"_15":475,"_17":18,"_19":476},{"_13":478,"_15":479,"_17":18,"_19":480},{"_13":482,"_15":483,"_17":18,"_19":484},{"_13":486,"_15":487,"_17":18,"_19":488},{"_13":490,"_15":491,"_17":18,"_19":492},{"_13":494,"_15":495,"_17":18,"_19":496},{"_13":498,"_15":499,"_17":18,"_19":500},{"_13":502,"_15":503,"_17":18,"_19":504},{"_13":506,"_15":507,"_17":18,"_19":508},{"_13":510,"_15":511,"_17":18,"_19":512},{"_13":514,"_15":515,"_17":18,"_19":516},{"_13":518,"_15":519,"_17":18,"_19":520},{"_13":522,"_15":523,"_17":18,"_19":524},{"_13":526,"_15":527,"_17":18,"_19":528},{"_13":530,"_15":531,"_17":18,"_19":532},{"_13":534,"_15":535,"_17":18,"_19":536},{"_8":538,"_10":868},[869],{"_13":541,"_15":542,"_17":18,"_19":543},{"_8":545,"_10":871},[872],{"_13":548,"_15":549,"_17":18,"_19":550},{"_8":552,"_10":874},[875],{"_13":555,"_15":556,"_17":18,"_19":557},{"_8":559,"_10":877},[878],{"_13":562,"_15":563,"_17":18,"_19":564},{"_8":566,"_10":880},[881],{"_13":569,"_15":570,"_17":18,"_19":571},{"_8":573,"_10":883},[884],{"_13":576,"_15":577,"_17":18,"_19":578},{"_8":580,"_10":886},[887],{"_13":583,"_15":584,"_17":18,"_19":585},{"_8":587,"_10":889},[890],{"_13":590,"_15":591,"_17":18,"_19":592},{"_8":594,"_10":892},[893],{"_13":597,"_15":598,"_17":18,"_19":599},{"_8":601,"_10":895},[896,897],{"_13":604,"_15":605,"_17":18,"_19":606},{"_13":608,"_15":609,"_17":18,"_19":610},{"_8":612,"_10":899},[900,901,902,903],{"_13":615,"_15":616,"_17":18,"_19":617},{"_13":619,"_15":620,"_17":18,"_19":621},{"_13":623,"_15":624,"_17":18,"_19":625},{"_13":627,"_15":628,"_17":18,"_19":629},{"_8":631,"_10":905},[906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921],{"_13":634,"_15":635,"_17":18,"_19":636},{"_13":638,"_15":639,"_17":18,"_19":640},{"_13":642,"_15":643,"_17":18,"_19":644},{"_13":646,"_15":647,"_17":18,"_19":648},{"_13":650,"_15":651,"_17":18,"_19":652},{"_13":654,"_15":655,"_17":18,"_19":656},{"_13":658,"_15":659,"_17":18,"_19":660},{"_13":662,"_15":663,"_17":18,"_19":664},{"_13":666,"_15":667,"_17":18,"_19":668},{"_13":670,"_15":671,"_17":18,"_19":672},{"_13":674,"_15":675,"_17":18,"_19":676},{"_13":678,"_15":679,"_17":18,"_19":680},{"_13":682,"_15":683,"_17":18,"_19":684},{"_13":686,"_15":687,"_17":18,"_19":688},{"_13":690,"_15":691,"_17":18,"_19":692},{"_13":694,"_15":695,"_17":18,"_19":696},[923,924],{"_13":135,"_15":700},{"_13":142,"_15":702},"code","\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst toc = [];\nconst frontmatter = {\n  \"title\": \"Create chat completion\",\n  \"layout\": \"wide\",\n  \"openapi\": \"~/openapi.yaml#POST /chat/completions\"\n};\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    hr: \"hr\",\n    li: \"li\",\n    p: \"p\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ...props.components\n  }, {Atlas} = _components;\n  if (!Atlas) _missingMdxReference(\"Atlas\", true);\n  return _jsx(Atlas, {\n    references: [{\n      __UNSAFE_selector: function noRefCheck() {},\n      canonical: 'createChatCompletion',\n      category: 'rest',\n      context: {\n        fullPath: 'https:/api.openai.com/v1/chat/completions',\n        group: ['chat'],\n        method: 'post',\n        path: '/chat/completions',\n        scopes: []\n      },\n      definitions: [{\n        meta: [{\n          name: 'contentType',\n          value: 'application/json'\n        }],\n        properties: [{\n          description: 'Set of 16 key-value pairs that can be attached to an object. This can be\\nuseful for storing additional information about the object in a structured\\nformat, and querying for objects via API or the dashboard. \\n\\nKeys are strings with a maximum length of 64 characters. Values are strings\\nwith a maximum length of 512 characters.\\n',\n          meta: [{\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'metadata',\n          properties: [],\n          type: 'object'\n        }, {\n          description: _jsxs(_components.p, {\n            children: [\"What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. We generally recommend altering this or\", ' ', _jsx(_components.code, {\n              children: \"top_p\"\n            }), ' ', \"but not both.\"]\n          }),\n          meta: [{\n            name: 'defaults',\n            value: 1\n          }, {\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'temperature',\n          properties: [],\n          type: 'number'\n        }, {\n          description: _jsxs(_Fragment, {\n            children: [_jsx(_components.p, {\n              children: \"An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.\"\n            }), _jsxs(_components.p, {\n              children: [\"We generally recommend altering this or\", ' ', _jsx(_components.code, {\n                children: \"temperature\"\n              }), ' ', \"but not both.\"]\n            })]\n          }),\n          meta: [{\n            name: 'defaults',\n            value: 1\n          }, {\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'top_p',\n          properties: [],\n          type: 'number'\n        }, {\n          description: _jsxs(_components.p, {\n            children: [\"A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.\", ' ', _jsx(_components.a, {\n              href: \"/docs/guides/safety-best-practices#end-user-ids\",\n              children: \"Learn more\"\n            }), \".\"]\n          }),\n          meta: [],\n          name: 'user',\n          properties: [],\n          type: 'string'\n        }, {\n          description: _jsxs(_Fragment, {\n            children: [_jsx(_components.p, {\n              children: \"Specifies the latency tier to use for processing the request. This parameter is relevant for customers subscribed to the scale tier service:\"\n            }), _jsxs(_components.ul, {\n              children: [_jsx(_components.li, {\n                children: \"If set to 'auto', and the Project is Scale tier enabled, the system will utilize scale tier credits until they are exhausted.\"\n              }), _jsx(_components.li, {\n                children: \"If set to 'auto', and the Project is not Scale tier enabled, the request will be processed using the default service tier with a lower uptime SLA and no latency guarentee.\"\n              }), _jsx(_components.li, {\n                children: \"If set to 'default', the request will be processed using the default service tier with a lower uptime SLA and no latency guarentee.\"\n              }), _jsxs(_components.li, {\n                children: [\"If set to 'flex', the request will be processed with the Flex Processing service tier.\", ' ', _jsx(_components.a, {\n                  href: \"/docs/guides/flex-processing\",\n                  children: \"Learn more\"\n                }), \".\"]\n              }), _jsx(_components.li, {\n                children: \"When not set, the default behavior is 'auto'.\"\n              })]\n            }), _jsxs(_components.p, {\n              children: [\"When this parameter is set, the response body will include the\", ' ', _jsx(_components.code, {\n                children: \"service_tier\"\n              }), ' ', \"utilized.\"]\n            })]\n          }),\n          meta: [{\n            name: 'defaults',\n            value: 'auto'\n          }, {\n            name: 'nullable',\n            value: 'true'\n          }, {\n            name: 'enum',\n            value: 'true'\n          }],\n          name: 'service_tier',\n          properties: [{\n            description: '',\n            meta: [],\n            name: 'auto',\n            properties: [],\n            type: 'string'\n          }, {\n            description: '',\n            meta: [],\n            name: 'default',\n            properties: [],\n            type: 'string'\n          }, {\n            description: '',\n            meta: [],\n            name: 'flex',\n            properties: [],\n            type: 'string'\n          }],\n          type: 'string'\n        }, {\n          description: _jsxs(_components.p, {\n            children: [\"A list of messages comprising the conversation so far. Depending on the\", ' ', _jsx(_components.a, {\n              href: \"/docs/models\",\n              children: \"model\"\n            }), ' ', \"you use, different message types (modalities) are supported, like\", ' ', _jsx(_components.a, {\n              href: \"/docs/guides/text-generation\",\n              children: \"text\"\n            }), \",\", ' ', _jsx(_components.a, {\n              href: \"/docs/guides/vision\",\n              children: \"images\"\n            }), \", and\", ' ', _jsx(_components.a, {\n              href: \"/docs/guides/audio\",\n              children: \"audio\"\n            }), \".\"]\n          }),\n          meta: [{\n            name: 'required',\n            value: 'true'\n          }],\n          name: 'messages',\n          properties: [],\n          type: 'array'\n        }, {\n          description: _jsxs(_components.p, {\n            children: [\"Model ID used to generate the response, like\", ' ', _jsx(_components.code, {\n              children: \"gpt-4o\"\n            }), ' ', \"or\", ' ', _jsx(_components.code, {\n              children: \"o3\"\n            }), \". OpenAI offers a wide range of models with different capabilities, performance characteristics, and price points. Refer to the\", ' ', _jsx(_components.a, {\n              href: \"/docs/models\",\n              children: \"model guide\"\n            }), ' ', \"to browse and compare available models.\"]\n          }),\n          meta: [{\n            name: 'required',\n            value: 'true'\n          }],\n          name: 'model',\n          properties: [],\n          type: ''\n        }, {\n          description: _jsxs(_Fragment, {\n            children: [_jsx(_components.p, {\n              children: \"Output types that you would like the model to generate. Most models are capable of generating text, which is the default:\"\n            }), _jsx(_components.p, {\n              children: _jsx(_components.code, {\n                children: \"[\\\"text\\\"]\"\n              })\n            }), _jsxs(_components.p, {\n              children: [\"The\", ' ', _jsx(_components.code, {\n                children: \"gpt-4o-audio-preview\"\n              }), ' ', \"model can also be used to\", ' ', _jsx(_components.a, {\n                href: \"/docs/guides/audio\",\n                children: \"generate audio\"\n              }), \". To request that this model generate both text and audio responses, you can use:\"]\n            }), _jsx(_components.p, {\n              children: _jsx(_components.code, {\n                children: \"[\\\"text\\\", \\\"audio\\\"]\"\n              })\n            })]\n          }),\n          meta: [{\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'modalities',\n          properties: [],\n          type: 'array'\n        }, {\n          description: _jsxs(_Fragment, {\n            children: [_jsx(_components.p, {\n              children: _jsx(_components.strong, {\n                children: \"o-series models only\"\n              })\n            }), _jsxs(_components.p, {\n              children: [\"Constrains effort on reasoning for\", ' ', _jsx(_components.a, {\n                href: \"https://platform.openai.com/docs/guides/reasoning\",\n                children: \"reasoning models\"\n              }), \". Currently supported values are\", ' ', _jsx(_components.code, {\n                children: \"low\"\n              }), \",\", ' ', _jsx(_components.code, {\n                children: \"medium\"\n              }), \", and\", ' ', _jsx(_components.code, {\n                children: \"high\"\n              }), \". Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.\"]\n            })]\n          }),\n          meta: [{\n            name: 'defaults',\n            value: 'medium'\n          }, {\n            name: 'nullable',\n            value: 'true'\n          }, {\n            name: 'enum',\n            value: 'true'\n          }],\n          name: 'reasoning_effort',\n          properties: [{\n            description: '',\n            meta: [],\n            name: 'low',\n            properties: [],\n            type: 'string'\n          }, {\n            description: '',\n            meta: [],\n            name: 'medium',\n            properties: [],\n            type: 'string'\n          }, {\n            description: '',\n            meta: [],\n            name: 'high',\n            properties: [],\n            type: 'string'\n          }],\n          type: 'string'\n        }, {\n          description: _jsxs(_components.p, {\n            children: [\"An upper bound for the number of tokens that can be generated for a completion, including visible output tokens and\", ' ', _jsx(_components.a, {\n              href: \"/docs/guides/reasoning\",\n              children: \"reasoning tokens\"\n            }), \".\"]\n          }),\n          meta: [{\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'max_completion_tokens',\n          properties: [],\n          type: 'integer'\n        }, {\n          description: 'Number between -2.0 and 2.0. Positive values penalize new tokens based on\\ntheir existing frequency in the text so far, decreasing the model\\'s\\nlikelihood to repeat the same line verbatim.\\n',\n          meta: [{\n            name: 'defaults',\n            value: 0\n          }, {\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'frequency_penalty',\n          properties: [],\n          type: 'number'\n        }, {\n          description: 'Number between -2.0 and 2.0. Positive values penalize new tokens based on\\nwhether they appear in the text so far, increasing the model\\'s likelihood\\nto talk about new topics.\\n',\n          meta: [{\n            name: 'defaults',\n            value: 0\n          }, {\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'presence_penalty',\n          properties: [],\n          type: 'number'\n        }, {\n          description: _jsxs(_components.p, {\n            children: [\"This tool searches the web for relevant results to use in a response. Learn more about the\", ' ', _jsx(_components.a, {\n              href: \"/docs/guides/tools-web-search?api-mode=chat\",\n              children: \"web search tool\"\n            }), \".\"]\n          }),\n          meta: [],\n          name: 'web_search_options',\n          properties: [{\n            description: 'Approximate location parameters for the search.\\n',\n            meta: [{\n              name: 'nullable',\n              value: 'true'\n            }],\n            name: 'user_location',\n            properties: [{\n              description: _jsxs(_components.p, {\n                children: [\"The type of location approximation. Always\", ' ', _jsx(_components.code, {\n                  children: \"approximate\"\n                }), \".\"]\n              }),\n              meta: [{\n                name: 'required',\n                value: 'true'\n              }, {\n                name: 'nullable',\n                value: 'true'\n              }, {\n                name: 'enum',\n                value: 'true'\n              }],\n              name: 'type',\n              properties: [{\n                description: '',\n                meta: [],\n                name: 'approximate',\n                properties: [],\n                type: 'string'\n              }],\n              type: 'string'\n            }, {\n              description: 'Approximate location parameters for the search.',\n              meta: [{\n                name: 'required',\n                value: 'true'\n              }, {\n                name: 'nullable',\n                value: 'true'\n              }],\n              name: 'approximate',\n              properties: [{\n                description: _jsxs(_components.p, {\n                  children: [\"The two-letter\", ' ', _jsx(_components.a, {\n                    href: \"https://en.wikipedia.org/wiki/ISO_3166-1\",\n                    children: \"ISO country code\"\n                  }), ' ', \"of the user, e.g.\", ' ', _jsx(_components.code, {\n                    children: \"US\"\n                  }), \".\"]\n                }),\n                meta: [],\n                name: 'country',\n                properties: [],\n                type: 'string'\n              }, {\n                description: _jsxs(_components.p, {\n                  children: [\"Free text input for the region of the user, e.g.\", ' ', _jsx(_components.code, {\n                    children: \"California\"\n                  }), \".\"]\n                }),\n                meta: [],\n                name: 'region',\n                properties: [],\n                type: 'string'\n              }, {\n                description: _jsxs(_components.p, {\n                  children: [\"Free text input for the city of the user, e.g.\", ' ', _jsx(_components.code, {\n                    children: \"San Francisco\"\n                  }), \".\"]\n                }),\n                meta: [],\n                name: 'city',\n                properties: [],\n                type: 'string'\n              }, {\n                description: _jsxs(_components.p, {\n                  children: [\"The\", ' ', _jsx(_components.a, {\n                    href: \"https://timeapi.io/documentation/iana-timezones\",\n                    children: \"IANA timezone\"\n                  }), ' ', \"of the user, e.g.\", ' ', _jsx(_components.code, {\n                    children: \"America/Los_Angeles\"\n                  }), \".\"]\n                }),\n                meta: [],\n                name: 'timezone',\n                properties: [],\n                type: 'string'\n              }],\n              type: 'object'\n            }],\n            type: 'object'\n          }, {\n            description: _jsxs(_components.p, {\n              children: [\"High level guidance for the amount of context window space to use for the search. One of\", ' ', _jsx(_components.code, {\n                children: \"low\"\n              }), \",\", ' ', _jsx(_components.code, {\n                children: \"medium\"\n              }), \", or\", ' ', _jsx(_components.code, {\n                children: \"high\"\n              }), \".\", ' ', _jsx(_components.code, {\n                children: \"medium\"\n              }), ' ', \"is the default.\"]\n            }),\n            meta: [{\n              name: 'defaults',\n              value: 'medium'\n            }, {\n              name: 'enum',\n              value: 'true'\n            }],\n            name: 'search_context_size',\n            properties: [{\n              description: '',\n              meta: [],\n              name: 'low',\n              properties: [],\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'medium',\n              properties: [],\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'high',\n              properties: [],\n              type: 'string'\n            }],\n            type: 'string'\n          }],\n          type: 'object'\n        }, {\n          description: _jsxs(_components.p, {\n            children: [\"An integer between 0 and 20 specifying the number of most likely tokens to return at each token position, each with an associated log probability.\", ' ', _jsx(_components.code, {\n              children: \"logprobs\"\n            }), ' ', \"must be set to\", ' ', _jsx(_components.code, {\n              children: \"true\"\n            }), ' ', \"if this parameter is used.\"]\n          }),\n          meta: [{\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'top_logprobs',\n          properties: [],\n          type: 'integer'\n        }, {\n          description: _jsxs(_Fragment, {\n            children: [_jsx(_components.p, {\n              children: \"An object specifying the format that the model must output.\"\n            }), _jsxs(_components.p, {\n              children: [\"Setting to\", ' ', _jsx(_components.code, {}), ' ', \"enables Structured Outputs which ensures the model will match your supplied JSON schema. Learn more in the\", ' ', _jsx(_components.a, {\n                href: \"/docs/guides/structured-outputs\",\n                children: \"Structured Outputs guide\"\n              }), \".\"]\n            }), _jsxs(_components.p, {\n              children: [\"Setting to\", ' ', _jsx(_components.code, {}), ' ', \"enables the older JSON mode, which ensures the message the model generates is valid JSON. Using\", ' ', _jsx(_components.code, {\n                children: \"json_schema\"\n              }), ' ', \"is preferred for models that support it.\"]\n            })]\n          }),\n          meta: [],\n          name: 'response_format',\n          properties: [],\n          type: ''\n        }, {\n          description: _jsxs(_components.p, {\n            children: [\"Parameters for audio output. Required when audio output is requested with\", ' ', _jsx(_components.code, {\n              children: \"modalities: [\\\"audio\\\"]\"\n            }), \".\", ' ', _jsx(_components.a, {\n              href: \"/docs/guides/audio\",\n              children: \"Learn more\"\n            }), \".\"]\n          }),\n          meta: [{\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'audio',\n          properties: [{\n            description: _jsxs(_components.p, {\n              children: [\"The voice the model uses to respond. Supported voices are\", ' ', _jsx(_components.code, {\n                children: \"alloy\"\n              }), \",\", ' ', _jsx(_components.code, {\n                children: \"ash\"\n              }), \",\", ' ', _jsx(_components.code, {\n                children: \"ballad\"\n              }), \",\", ' ', _jsx(_components.code, {\n                children: \"coral\"\n              }), \",\", ' ', _jsx(_components.code, {\n                children: \"echo\"\n              }), \",\", ' ', _jsx(_components.code, {\n                children: \"fable\"\n              }), \",\", ' ', _jsx(_components.code, {\n                children: \"nova\"\n              }), \",\", ' ', _jsx(_components.code, {\n                children: \"onyx\"\n              }), \",\", ' ', _jsx(_components.code, {\n                children: \"sage\"\n              }), \", and\", ' ', _jsx(_components.code, {\n                children: \"shimmer\"\n              }), \".\"]\n            }),\n            meta: [{\n              name: 'required',\n              value: 'true'\n            }, {\n              name: 'nullable',\n              value: 'true'\n            }],\n            name: 'voice',\n            properties: [],\n            type: ''\n          }, {\n            description: _jsxs(_components.p, {\n              children: [\"Specifies the output audio format. Must be one of\", ' ', _jsx(_components.code, {\n                children: \"wav\"\n              }), \",\", ' ', _jsx(_components.code, {\n                children: \"mp3\"\n              }), \",\", ' ', _jsx(_components.code, {\n                children: \"flac\"\n              }), \",\", ' ', _jsx(_components.code, {\n                children: \"opus\"\n              }), \", or\", ' ', _jsx(_components.code, {\n                children: \"pcm16\"\n              }), \".\"]\n            }),\n            meta: [{\n              name: 'required',\n              value: 'true'\n            }, {\n              name: 'nullable',\n              value: 'true'\n            }, {\n              name: 'enum',\n              value: 'true'\n            }],\n            name: 'format',\n            properties: [{\n              description: '',\n              meta: [],\n              name: 'wav',\n              properties: [],\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'aac',\n              properties: [],\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'mp3',\n              properties: [],\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'flac',\n              properties: [],\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'opus',\n              properties: [],\n              type: 'string'\n            }, {\n              description: '',\n              meta: [],\n              name: 'pcm16',\n              properties: [],\n              type: 'string'\n            }],\n            type: 'string'\n          }],\n          type: 'object'\n        }, {\n          description: _jsxs(_components.p, {\n            children: [\"Whether or not to store the output of this chat completion request for use in our\", ' ', _jsx(_components.a, {\n              href: \"/docs/guides/distillation\",\n              children: \"model distillation\"\n            }), ' ', \"or\", ' ', _jsx(_components.a, {\n              href: \"/docs/guides/evals\",\n              children: \"evals\"\n            }), ' ', \"products.\"]\n          }),\n          meta: [{\n            name: 'defaults',\n            value: false\n          }, {\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'store',\n          properties: [],\n          type: 'boolean'\n        }, {\n          description: _jsxs(_components.p, {\n            children: [\"If set to true, the model response data will be streamed to the client as it is generated using\", ' ', _jsx(_components.a, {\n              href: \"https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format\",\n              children: \"server-sent events\"\n            }), \". See the\", ' ', _jsx(_components.a, {\n              href: \"/docs/api-reference/chat/streaming\",\n              children: \"Streaming section below\"\n            }), ' ', \"for more information, along with the\", ' ', _jsx(_components.a, {\n              href: \"/docs/guides/streaming-responses\",\n              children: \"streaming responses\"\n            }), ' ', \"guide for more information on how to handle the streaming events.\"]\n          }),\n          meta: [{\n            name: 'defaults',\n            value: false\n          }, {\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'stream',\n          properties: [],\n          type: 'boolean'\n        }, {\n          description: _jsxs(_Fragment, {\n            children: [_jsxs(_components.p, {\n              children: [\"Not supported with latest reasoning models\", ' ', _jsx(_components.code, {\n                children: \"o3\"\n              }), ' ', \"and\", ' ', _jsx(_components.code, {\n                children: \"o4-mini\"\n              }), \".\"]\n            }), _jsx(_components.p, {\n              children: \"Up to 4 sequences where the API will stop generating further tokens. The returned text will not contain the stop sequence.\"\n            })]\n          }),\n          meta: [{\n            name: 'defaults',\n            value: null\n          }, {\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'stop',\n          properties: [],\n          type: ''\n        }, {\n          description: 'Modify the likelihood of specified tokens appearing in the completion.\\n\\nAccepts a JSON object that maps tokens (specified by their token ID in the\\ntokenizer) to an associated bias value from -100 to 100. Mathematically,\\nthe bias is added to the logits generated by the model prior to sampling.\\nThe exact effect will vary per model, but values between -1 and 1 should\\ndecrease or increase likelihood of selection; values like -100 or 100\\nshould result in a ban or exclusive selection of the relevant token.\\n',\n          meta: [{\n            name: 'defaults',\n            value: null\n          }, {\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'logit_bias',\n          properties: [],\n          type: 'object'\n        }, {\n          description: _jsxs(_components.p, {\n            children: [\"Whether to return log probabilities of the output tokens or not. If true, returns the log probabilities of each output token returned in the\", ' ', _jsx(_components.code, {\n              children: \"content\"\n            }), ' ', \"of\", ' ', _jsx(_components.code, {\n              children: \"message\"\n            }), \".\"]\n          }),\n          meta: [{\n            name: 'defaults',\n            value: false\n          }, {\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'logprobs',\n          properties: [],\n          type: 'boolean'\n        }, {\n          description: _jsxs(_Fragment, {\n            children: [_jsxs(_components.p, {\n              children: [\"The maximum number of\", ' ', _jsx(_components.a, {\n                href: \"/tokenizer\",\n                children: \"tokens\"\n              }), ' ', \"that can be generated in the chat completion. This value can be used to control\", ' ', _jsx(_components.a, {\n                href: \"https://openai.com/api/pricing/\",\n                children: \"costs\"\n              }), ' ', \"for text generated via API.\"]\n            }), _jsxs(_components.p, {\n              children: [\"This value is now deprecated in favor of\", ' ', _jsx(_components.code, {\n                children: \"max_completion_tokens\"\n              }), \", and is not compatible with\", ' ', _jsx(_components.a, {\n                href: \"/docs/guides/reasoning\",\n                children: \"o-series models\"\n              }), \".\"]\n            })]\n          }),\n          meta: [{\n            name: 'deprecated',\n            value: 'true'\n          }, {\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'max_tokens',\n          properties: [],\n          type: 'integer'\n        }, {\n          description: _jsxs(_components.p, {\n            children: [\"How many chat completion choices to generate for each input message. Note that you will be charged based on the number of generated tokens across all of the choices. Keep\", ' ', _jsx(_components.code, {\n              children: \"n\"\n            }), ' ', \"as\", ' ', _jsx(_components.code, {\n              children: \"1\"\n            }), ' ', \"to minimize costs.\"]\n          }),\n          meta: [{\n            name: 'defaults',\n            value: 1\n          }, {\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'n',\n          properties: [],\n          type: 'integer'\n        }, {\n          description: _jsxs(_components.p, {\n            children: [\"Configuration for a\", ' ', _jsx(_components.a, {\n              href: \"/docs/guides/predicted-outputs\",\n              children: \"Predicted Output\"\n            }), \", which can greatly improve response times when large parts of the model response are known ahead of time. This is most common when you are regenerating a file with only minor changes to most of the content.\"]\n          }),\n          meta: [{\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'prediction',\n          properties: [],\n          type: ''\n        }, {\n          description: _jsxs(_components.p, {\n            children: [\"This feature is in Beta. If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same\", ' ', _jsx(_components.code, {\n              children: \"seed\"\n            }), ' ', \"and parameters should return the same result. Determinism is not guaranteed, and you should refer to the\", ' ', _jsx(_components.code, {\n              children: \"system_fingerprint\"\n            }), ' ', \"response parameter to monitor changes in the backend.\"]\n          }),\n          meta: [{\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'seed',\n          properties: [],\n          type: 'integer'\n        }, {\n          description: _jsxs(_components.p, {\n            children: [\"Options for streaming response. Only set this when you set\", ' ', _jsx(_components.code, {\n              children: \"stream: true\"\n            }), \".\"]\n          }),\n          meta: [{\n            name: 'defaults',\n            value: null\n          }, {\n            name: 'nullable',\n            value: 'true'\n          }],\n          name: 'stream_options',\n          properties: [{\n            description: _jsxs(_Fragment, {\n              children: [_jsxs(_components.p, {\n                children: [\"If set, an additional chunk will be streamed before the\", ' ', _jsx(_components.code, {\n                  children: \"data: [DONE]\"\n                }), ' ', \"message. The\", ' ', _jsx(_components.code, {\n                  children: \"usage\"\n                }), ' ', \"field on this chunk shows the token usage statistics for the entire request, and the\", ' ', _jsx(_components.code, {\n                  children: \"choices\"\n                }), ' ', \"field will always be an empty array.\"]\n              }), _jsxs(_components.p, {\n                children: [\"All other chunks will also include a\", ' ', _jsx(_components.code, {\n                  children: \"usage\"\n                }), ' ', \"field, but with a null value.\", ' ', _jsx(_components.strong, {\n                  children: \"NOTE:\"\n                }), ' ', \"If the stream is interrupted, you may not receive the final usage chunk which contains the total token usage for the request.\"]\n              })]\n            }),\n            meta: [{\n              name: 'defaults',\n              value: null\n            }, {\n              name: 'nullable',\n              value: 'true'\n            }],\n            name: 'include_usage',\n            properties: [],\n            type: 'boolean'\n          }],\n          type: 'object'\n        }, {\n          description: 'A list of tools the model may call. Currently, only functions are supported as a tool. Use this to provide a list of functions the model may generate JSON inputs for. A max of 128 functions are supported.\\n',\n          meta: [],\n          name: 'tools',\n          properties: [{\n            description: _jsxs(_components.p, {\n              children: [\"The type of the tool. Currently, only\", ' ', _jsx(_components.code, {\n                children: \"function\"\n              }), ' ', \"is supported.\"]\n            }),\n            meta: [{\n              name: 'required',\n              value: 'true'\n            }, {\n              name: 'enum',\n              value: 'true'\n            }],\n            name: 'type',\n            properties: [{\n              description: '',\n              meta: [],\n              name: 'function',\n              properties: [],\n              type: 'string'\n            }],\n            type: 'string'\n          }, {\n            description: '',\n            meta: [{\n              name: 'required',\n              value: 'true'\n            }],\n            name: 'function',\n            properties: [{\n              description: 'A description of what the function does, used by the model to choose when and how to call the function.',\n              meta: [],\n              name: 'description',\n              properties: [],\n              type: 'string'\n            }, {\n              description: 'The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.',\n              meta: [{\n                name: 'required',\n                value: 'true'\n              }],\n              name: 'name',\n              properties: [],\n              type: 'string'\n            }, {\n              description: _jsxs(_Fragment, {\n                children: [_jsxs(_components.p, {\n                  children: [\"The parameters the functions accepts, described as a JSON Schema object. See the\", ' ', _jsx(_components.a, {\n                    href: \"/docs/guides/function-calling\",\n                    children: \"guide\"\n                  }), ' ', \"for examples, and the\", ' ', _jsx(_components.a, {\n                    href: \"https://json-schema.org/understanding-json-schema/\",\n                    children: \"JSON Schema reference\"\n                  }), ' ', \"for documentation about the format.\"]\n                }), _jsxs(_components.p, {\n                  children: [\"Omitting\", ' ', _jsx(_components.code, {\n                    children: \"parameters\"\n                  }), ' ', \"defines a function with an empty parameter list.\"]\n                })]\n              }),\n              meta: [],\n              name: 'parameters',\n              properties: [],\n              type: 'object'\n            }, {\n              description: _jsxs(_components.p, {\n                children: [\"Whether to enable strict schema adherence when generating the function call. If set to true, the model will follow the exact schema defined in the\", ' ', _jsx(_components.code, {\n                  children: \"parameters\"\n                }), ' ', \"field. Only a subset of JSON Schema is supported when\", ' ', _jsx(_components.code, {\n                  children: \"strict\"\n                }), ' ', \"is\", ' ', _jsx(_components.code, {\n                  children: \"true\"\n                }), \". Learn more about Structured Outputs in the\", ' ', _jsx(_components.a, {\n                  href: \"docs/guides/function-calling\",\n                  children: \"function calling guide\"\n                }), \".\"]\n              }),\n              meta: [{\n                name: 'defaults',\n                value: false\n              }, {\n                name: 'nullable',\n                value: 'true'\n              }],\n              name: 'strict',\n              properties: [],\n              type: 'boolean'\n            }],\n            type: 'object'\n          }],\n          type: 'array'\n        }, {\n          description: _jsxs(_Fragment, {\n            children: [_jsxs(_components.p, {\n              children: [\"Controls which (if any) tool is called by the model.\", ' ', _jsx(_components.code, {\n                children: \"none\"\n              }), ' ', \"means the model will not call any tool and instead generates a message.\", ' ', _jsx(_components.code, {\n                children: \"auto\"\n              }), ' ', \"means the model can pick between generating a message or calling one or more tools.\", ' ', _jsx(_components.code, {\n                children: \"required\"\n              }), ' ', \"means the model must call one or more tools. Specifying a particular tool via\", ' ', _jsx(_components.code, {}), ' ', \"forces the model to call that tool.\"]\n            }), _jsxs(_components.p, {\n              children: [_jsx(_components.code, {\n                children: \"none\"\n              }), ' ', \"is the default when no tools are present.\", ' ', _jsx(_components.code, {\n                children: \"auto\"\n              }), ' ', \"is the default if tools are present.\"]\n            })]\n          }),\n          meta: [],\n          name: 'tool_choice',\n          properties: [],\n          type: ''\n        }, {\n          description: _jsxs(_components.p, {\n            children: [\"Whether to enable\", ' ', _jsx(_components.a, {\n              href: \"/docs/guides/function-calling#configuring-parallel-function-calling\",\n              children: \"parallel function calling\"\n            }), ' ', \"during tool use.\"]\n          }),\n          meta: [{\n            name: 'defaults',\n            value: true\n          }],\n          name: 'parallel_tool_calls',\n          properties: [],\n          type: 'boolean'\n        }, {\n          description: _jsxs(_Fragment, {\n            children: [_jsxs(_components.p, {\n              children: [\"Deprecated in favor of\", ' ', _jsx(_components.code, {\n                children: \"tool_choice\"\n              }), \".\"]\n            }), _jsx(_components.p, {\n              children: \"Controls which (if any) function is called by the model.\"\n            }), _jsxs(_components.p, {\n              children: [_jsx(_components.code, {\n                children: \"none\"\n              }), ' ', \"means the model will not call a function and instead generates a message.\"]\n            }), _jsxs(_components.p, {\n              children: [_jsx(_components.code, {\n                children: \"auto\"\n              }), ' ', \"means the model can pick between generating a message or calling a function.\"]\n            }), _jsxs(_components.p, {\n              children: [\"Specifying a particular function via\", ' ', _jsx(_components.code, {}), ' ', \"forces the model to call that function.\"]\n            }), _jsxs(_components.p, {\n              children: [_jsx(_components.code, {\n                children: \"none\"\n              }), ' ', \"is the default when no functions are present.\", ' ', _jsx(_components.code, {\n                children: \"auto\"\n              }), ' ', \"is the default if functions are present.\"]\n            })]\n          }),\n          meta: [{\n            name: 'deprecated',\n            value: 'true'\n          }],\n          name: 'function_call',\n          properties: [],\n          type: ''\n        }, {\n          description: _jsxs(_Fragment, {\n            children: [_jsxs(_components.p, {\n              children: [\"Deprecated in favor of\", ' ', _jsx(_components.code, {\n                children: \"tools\"\n              }), \".\"]\n            }), _jsx(_components.p, {\n              children: \"A list of functions the model may generate JSON inputs for.\"\n            })]\n          }),\n          meta: [{\n            name: 'deprecated',\n            value: 'true'\n          }],\n          name: 'functions',\n          properties: [{\n            description: 'A description of what the function does, used by the model to choose when and how to call the function.',\n            meta: [{\n              name: 'deprecated',\n              value: 'true'\n            }],\n            name: 'description',\n            properties: [],\n            type: 'string'\n          }, {\n            description: 'The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.',\n            meta: [{\n              name: 'required',\n              value: 'true'\n            }, {\n              name: 'deprecated',\n              value: 'true'\n            }],\n            name: 'name',\n            properties: [],\n            type: 'string'\n          }, {\n            description: _jsxs(_Fragment, {\n              children: [_jsxs(_components.p, {\n                children: [\"The parameters the functions accepts, described as a JSON Schema object. See the\", ' ', _jsx(_components.a, {\n                  href: \"/docs/guides/function-calling\",\n                  children: \"guide\"\n                }), ' ', \"for examples, and the\", ' ', _jsx(_components.a, {\n                  href: \"https://json-schema.org/understanding-json-schema/\",\n                  children: \"JSON Schema reference\"\n                }), ' ', \"for documentation about the format.\"]\n              }), _jsxs(_components.p, {\n                children: [\"Omitting\", ' ', _jsx(_components.code, {\n                  children: \"parameters\"\n                }), ' ', \"defines a function with an empty parameter list.\"]\n              })]\n            }),\n            meta: [{\n              name: 'deprecated',\n              value: 'true'\n            }],\n            name: 'parameters',\n            properties: [],\n            type: 'object'\n          }],\n          type: 'array'\n        }],\n        title: 'Request body'\n      }, {\n        description: _jsxs(_components.p, {\n          children: [\"Returns a\", ' ', _jsx(_components.a, {\n            href: \"/docs/api-reference/chat/object\",\n            children: \"chat completion\"\n          }), ' ', \"object, or a streamed sequence of\", ' ', _jsx(_components.a, {\n            href: \"/docs/api-reference/chat/streaming\",\n            children: \"chat completion chunk\"\n          }), ' ', \"objects if the request is streamed.\"]\n        }),\n        properties: [],\n        title: 'Response'\n      }],\n      description: _jsxs(_Fragment, {\n        children: [_jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Starting a new project?\"\n          }), ' ', \"We recommend trying\", ' ', _jsx(_components.a, {\n            href: \"/docs/api-reference/responses\",\n            children: \"Responses\"\n          }), ' ', \"to take advantage of the latest OpenAI platform features. Compare\", ' ', _jsx(_components.a, {\n            href: \"/docs/guides/responses-vs-chat-completions?api-mode=responses\",\n            children: \"Chat Completions with Responses\"\n          }), \".\"]\n        }), _jsx(_components.hr, {}), _jsxs(_components.p, {\n          children: [\"Creates a model response for the given chat conversation. Learn more in the\", ' ', _jsx(_components.a, {\n            href: \"/docs/guides/text-generation\",\n            children: \"text generation\"\n          }), \",\", ' ', _jsx(_components.a, {\n            href: \"/docs/guides/vision\",\n            children: \"vision\"\n          }), \", and\", ' ', _jsx(_components.a, {\n            href: \"/docs/guides/audio\",\n            children: \"audio\"\n          }), ' ', \"guides.\"]\n        }), _jsxs(_components.p, {\n          children: [\"Parameter support can differ depending on the model used to generate the response, particularly for newer reasoning models. Parameters that are only supported for reasoning models are noted below. For the current state of unsupported parameters in reasoning models,\", ' ', _jsx(_components.a, {\n            href: \"/docs/guides/reasoning\",\n            children: \"refer to the reasoning guide\"\n          }), \".\"]\n        })]\n      }),\n      examples: {\n        groups: [{\n          description: 'Example request',\n          examples: [{\n            codeblock: {\n              tabs: [{\n                code: 'curl https://api.openai.com/v1/chat/completions \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"VAR_chat_model_id\",\\n    \"messages\": [\\n      {\\n        \"role\": \"developer\",\\n        \"content\": \"You are a helpful assistant.\"\\n      },\\n      {\\n        \"role\": \"user\",\\n        \"content\": \"Hello!\"\\n      }\\n    ]\\n  }\\'\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'curl https://api.openai.com/v1/chat/completions \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"VAR_chat_model_id\",\\n    \"messages\": [\\n      {\\n        \"role\": \"developer\",\\n        \"content\": \"You are a helpful assistant.\"\\n      },\\n      {\\n        \"role\": \"user\",\\n        \"content\": \"Hello!\"\\n      }\\n    ]\\n  }\\'\\n',\n                  lang: 'shellscript',\n                  meta: 'curl',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['curl', '#DCDCAA'], ' ', ['https://api.openai.com/v1/chat/completions', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-H \"Content-Type: application/json\"', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-H \"Authorization: Bearer', '#CE9178'], ' ', ['$OPENAI_API_KEY', '#9CDCFE'], ['\"', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-d \\'{', '#CE9178'], '\\n    ', ['\"model\": \"VAR_chat_model_id\",', '#CE9178'], '\\n    ', ['\"messages\": [', '#CE9178'], '\\n      ', ['{', '#CE9178'], '\\n        ', ['\"role\": \"developer\",', '#CE9178'], '\\n        ', ['\"content\": \"You are a helpful assistant.\"', '#CE9178'], '\\n      ', ['},', '#CE9178'], '\\n      ', ['{', '#CE9178'], '\\n        ', ['\"role\": \"user\",', '#CE9178'], '\\n        ', ['\"content\": \"Hello!\"', '#CE9178'], '\\n      ', ['}', '#CE9178'], '\\n    ', [']', '#CE9178'], '\\n  ', ['}\\'', '#CE9178'], '\\n'],\n                  value: 'curl https://api.openai.com/v1/chat/completions \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"VAR_chat_model_id\",\\n    \"messages\": [\\n      {\\n        \"role\": \"developer\",\\n        \"content\": \"You are a helpful assistant.\"\\n      },\\n      {\\n        \"role\": \"user\",\\n        \"content\": \"Hello!\"\\n      }\\n    ]\\n  }\\'\\n'\n                },\n                language: 'bash',\n                title: 'curl'\n              }, {\n                code: 'from openai import OpenAI\\nclient = OpenAI()\\n\\ncompletion = client.chat.completions.create(\\n  model=\"VAR_chat_model_id\",\\n  messages=[\\n    {\"role\": \"developer\", \"content\": \"You are a helpful assistant.\"},\\n    {\"role\": \"user\", \"content\": \"Hello!\"}\\n  ]\\n)\\n\\nprint(completion.choices[0].message)\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'from openai import OpenAI\\nclient = OpenAI()\\n\\ncompletion = client.chat.completions.create(\\n  model=\"VAR_chat_model_id\",\\n  messages=[\\n    {\"role\": \"developer\", \"content\": \"You are a helpful assistant.\"},\\n    {\"role\": \"user\", \"content\": \"Hello!\"}\\n  ]\\n)\\n\\nprint(completion.choices[0].message)\\n',\n                  lang: 'python',\n                  meta: 'python',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['from', '#C586C0'], ' ', ['openai', '#D4D4D4'], ' ', ['import', '#C586C0'], ' ', ['OpenAI', '#D4D4D4'], '\\n', ['client = OpenAI()', '#D4D4D4'], '\\n\\n', ['completion = client.chat.completions.create(', '#D4D4D4'], '\\n  ', ['model', '#9CDCFE'], ['=', '#D4D4D4'], ['\"VAR_chat_model_id\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['messages', '#9CDCFE'], ['=[', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], ['\"role\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"developer\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['\"content\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"You are a helpful assistant.\"', '#CE9178'], ['},', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], ['\"role\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"user\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['\"content\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"Hello!\"', '#CE9178'], ['}', '#D4D4D4'], '\\n  ', [']', '#D4D4D4'], '\\n', [')', '#D4D4D4'], '\\n\\n', ['print', '#DCDCAA'], ['(completion.choices[', '#D4D4D4'], ['0', '#B5CEA8'], ['].message)', '#D4D4D4'], '\\n'],\n                  value: 'from openai import OpenAI\\nclient = OpenAI()\\n\\ncompletion = client.chat.completions.create(\\n  model=\"VAR_chat_model_id\",\\n  messages=[\\n    {\"role\": \"developer\", \"content\": \"You are a helpful assistant.\"},\\n    {\"role\": \"user\", \"content\": \"Hello!\"}\\n  ]\\n)\\n\\nprint(completion.choices[0].message)\\n'\n                },\n                language: 'python',\n                title: 'python'\n              }, {\n                code: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nasync function main() {\\n  const completion = await openai.chat.completions.create({\\n    messages: [{ role: \"developer\", content: \"You are a helpful assistant.\" }],\\n    model: \"VAR_chat_model_id\",\\n    store: true,\\n  });\\n\\n  console.log(completion.choices[0]);\\n}\\n\\nmain();\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nasync function main() {\\n  const completion = await openai.chat.completions.create({\\n    messages: [{ role: \"developer\", content: \"You are a helpful assistant.\" }],\\n    model: \"VAR_chat_model_id\",\\n    store: true,\\n  });\\n\\n  console.log(completion.choices[0]);\\n}\\n\\nmain();\\n',\n                  lang: 'javascript',\n                  meta: 'node.js',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['import', '#C586C0'], ' ', ['OpenAI', '#9CDCFE'], ' ', ['from', '#C586C0'], ' ', ['\"openai\"', '#CE9178'], [';', '#D4D4D4'], '\\n\\n', ['const', '#569CD6'], ' ', ['openai', '#4FC1FF'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ' ', ['OpenAI', '#DCDCAA'], ['();', '#D4D4D4'], '\\n\\n', ['async function', '#569CD6'], ' ', ['main', '#DCDCAA'], ['() {', '#D4D4D4'], '\\n  ', ['const', '#569CD6'], ' ', ['completion', '#4FC1FF'], ' ', ['=', '#D4D4D4'], ' ', ['await', '#C586C0'], ' ', ['openai', '#9CDCFE'], ['.', '#D4D4D4'], ['chat', '#9CDCFE'], ['.', '#D4D4D4'], ['completions', '#9CDCFE'], ['.', '#D4D4D4'], ['create', '#DCDCAA'], ['({', '#D4D4D4'], '\\n    ', ['messages:', '#9CDCFE'], ' ', ['[{', '#D4D4D4'], ' ', ['role:', '#9CDCFE'], ' ', ['\"developer\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['content:', '#9CDCFE'], ' ', ['\"You are a helpful assistant.\"', '#CE9178'], ' ', ['}],', '#D4D4D4'], '\\n    ', ['model:', '#9CDCFE'], ' ', ['\"VAR_chat_model_id\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['store:', '#9CDCFE'], ' ', ['true', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['});', '#D4D4D4'], '\\n\\n  ', ['console', '#9CDCFE'], ['.', '#D4D4D4'], ['log', '#DCDCAA'], ['(', '#D4D4D4'], ['completion', '#9CDCFE'], ['.', '#D4D4D4'], ['choices', '#9CDCFE'], ['[', '#D4D4D4'], ['0', '#B5CEA8'], [']);', '#D4D4D4'], '\\n', ['}', '#D4D4D4'], '\\n\\n', ['main', '#DCDCAA'], ['();', '#D4D4D4'], '\\n'],\n                  value: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nasync function main() {\\n  const completion = await openai.chat.completions.create({\\n    messages: [{ role: \"developer\", content: \"You are a helpful assistant.\" }],\\n    model: \"VAR_chat_model_id\",\\n    store: true,\\n  });\\n\\n  console.log(completion.choices[0]);\\n}\\n\\nmain();\\n'\n                },\n                language: 'js',\n                title: 'node.js'\n              }, {\n                code: 'using System;\\nusing System.Collections.Generic;\\n\\nusing OpenAI.Chat;\\n\\nChatClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nList<ChatMessage> messages =\\n[\\n    new SystemChatMessage(\"You are a helpful assistant.\"),\\n    new UserChatMessage(\"Hello!\")\\n];\\n\\nChatCompletion completion = client.CompleteChat(messages);\\n\\nConsole.WriteLine(completion.Content[0].Text);\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'using System;\\nusing System.Collections.Generic;\\n\\nusing OpenAI.Chat;\\n\\nChatClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nList<ChatMessage> messages =\\n[\\n    new SystemChatMessage(\"You are a helpful assistant.\"),\\n    new UserChatMessage(\"Hello!\")\\n];\\n\\nChatCompletion completion = client.CompleteChat(messages);\\n\\nConsole.WriteLine(completion.Content[0].Text);\\n',\n                  lang: 'csharp',\n                  meta: 'csharp',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['using', '#569CD6'], ' ', ['System', '#4EC9B0'], [';', '#D4D4D4'], '\\n', ['using', '#569CD6'], ' ', ['System', '#4EC9B0'], ['.', '#D4D4D4'], ['Collections', '#4EC9B0'], ['.', '#D4D4D4'], ['Generic', '#4EC9B0'], [';', '#D4D4D4'], '\\n\\n', ['using', '#569CD6'], ' ', ['OpenAI', '#4EC9B0'], ['.', '#D4D4D4'], ['Chat', '#4EC9B0'], [';', '#D4D4D4'], '\\n\\n', ['ChatClient', '#4EC9B0'], ' ', ['client', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ['(', '#D4D4D4'], '\\n    ', ['model', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"gpt-4.1\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['apiKey', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['Environment', '#9CDCFE'], ['.', '#D4D4D4'], ['GetEnvironmentVariable', '#DCDCAA'], ['(', '#D4D4D4'], ['\"OPENAI_API_KEY\"', '#CE9178'], [')', '#D4D4D4'], '\\n', [');', '#D4D4D4'], '\\n\\n', ['List', '#4EC9B0'], ['<', '#D4D4D4'], ['ChatMessage', '#4EC9B0'], ['>', '#D4D4D4'], ' ', ['messages', '#9CDCFE'], ' ', ['=', '#D4D4D4'], '\\n', ['[', '#D4D4D4'], '\\n    ', ['new', '#569CD6'], ' ', ['SystemChatMessage', '#4EC9B0'], ['(', '#D4D4D4'], ['\"You are a helpful assistant.\"', '#CE9178'], ['),', '#D4D4D4'], '\\n    ', ['new', '#569CD6'], ' ', ['UserChatMessage', '#4EC9B0'], ['(', '#D4D4D4'], ['\"Hello!\"', '#CE9178'], [')', '#D4D4D4'], '\\n', ['];', '#D4D4D4'], '\\n\\n', ['ChatCompletion', '#4EC9B0'], ' ', ['completion', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['client', '#9CDCFE'], ['.', '#D4D4D4'], ['CompleteChat', '#DCDCAA'], ['(', '#D4D4D4'], ['messages', '#9CDCFE'], [');', '#D4D4D4'], '\\n\\n', ['Console', '#9CDCFE'], ['.', '#D4D4D4'], ['WriteLine', '#DCDCAA'], ['(', '#D4D4D4'], ['completion', '#9CDCFE'], ['.', '#D4D4D4'], ['Content', '#9CDCFE'], ['[', '#D4D4D4'], ['0', '#B5CEA8'], ['].', '#D4D4D4'], ['Text', '#9CDCFE'], [');', '#D4D4D4'], '\\n'],\n                  value: 'using System;\\nusing System.Collections.Generic;\\n\\nusing OpenAI.Chat;\\n\\nChatClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nList<ChatMessage> messages =\\n[\\n    new SystemChatMessage(\"You are a helpful assistant.\"),\\n    new UserChatMessage(\"Hello!\")\\n];\\n\\nChatCompletion completion = client.CompleteChat(messages);\\n\\nConsole.WriteLine(completion.Content[0].Text);\\n'\n                },\n                language: 'csharp',\n                title: 'csharp'\n              }],\n              title: 'Default'\n            },\n            description: 'Default'\n          }, {\n            codeblock: {\n              tabs: [{\n                code: 'curl https://api.openai.com/v1/chat/completions \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"gpt-4.1\",\\n    \"messages\": [\\n      {\\n        \"role\": \"user\",\\n        \"content\": [\\n          {\\n            \"type\": \"text\",\\n            \"text\": \"What is in this image?\"\\n          },\\n          {\\n            \"type\": \"image_url\",\\n            \"image_url\": {\\n              \"url\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\"\\n            }\\n          }\\n        ]\\n      }\\n    ],\\n    \"max_tokens\": 300\\n  }\\'\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'curl https://api.openai.com/v1/chat/completions \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"gpt-4.1\",\\n    \"messages\": [\\n      {\\n        \"role\": \"user\",\\n        \"content\": [\\n          {\\n            \"type\": \"text\",\\n            \"text\": \"What is in this image?\"\\n          },\\n          {\\n            \"type\": \"image_url\",\\n            \"image_url\": {\\n              \"url\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\"\\n            }\\n          }\\n        ]\\n      }\\n    ],\\n    \"max_tokens\": 300\\n  }\\'\\n',\n                  lang: 'shellscript',\n                  meta: 'curl',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['curl', '#DCDCAA'], ' ', ['https://api.openai.com/v1/chat/completions', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-H \"Content-Type: application/json\"', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-H \"Authorization: Bearer', '#CE9178'], ' ', ['$OPENAI_API_KEY', '#9CDCFE'], ['\"', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-d \\'{', '#CE9178'], '\\n    ', ['\"model\": \"gpt-4.1\",', '#CE9178'], '\\n    ', ['\"messages\": [', '#CE9178'], '\\n      ', ['{', '#CE9178'], '\\n        ', ['\"role\": \"user\",', '#CE9178'], '\\n        ', ['\"content\": [', '#CE9178'], '\\n          ', ['{', '#CE9178'], '\\n            ', ['\"type\": \"text\",', '#CE9178'], '\\n            ', ['\"text\": \"What is in this image?\"', '#CE9178'], '\\n          ', ['},', '#CE9178'], '\\n          ', ['{', '#CE9178'], '\\n            ', ['\"type\": \"image_url\",', '#CE9178'], '\\n            ', ['\"image_url\": {', '#CE9178'], '\\n              ', ['\"url\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\"', '#CE9178'], '\\n            ', ['}', '#CE9178'], '\\n          ', ['}', '#CE9178'], '\\n        ', [']', '#CE9178'], '\\n      ', ['}', '#CE9178'], '\\n    ', ['],', '#CE9178'], '\\n    ', ['\"max_tokens\": 300', '#CE9178'], '\\n  ', ['}\\'', '#CE9178'], '\\n'],\n                  value: 'curl https://api.openai.com/v1/chat/completions \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"gpt-4.1\",\\n    \"messages\": [\\n      {\\n        \"role\": \"user\",\\n        \"content\": [\\n          {\\n            \"type\": \"text\",\\n            \"text\": \"What is in this image?\"\\n          },\\n          {\\n            \"type\": \"image_url\",\\n            \"image_url\": {\\n              \"url\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\"\\n            }\\n          }\\n        ]\\n      }\\n    ],\\n    \"max_tokens\": 300\\n  }\\'\\n'\n                },\n                language: 'bash',\n                title: 'curl'\n              }, {\n                code: 'from openai import OpenAI\\n\\nclient = OpenAI()\\n\\nresponse = client.chat.completions.create(\\n    model=\"gpt-4.1\",\\n    messages=[\\n        {\\n            \"role\": \"user\",\\n            \"content\": [\\n                {\"type\": \"text\", \"text\": \"What\\'s in this image?\"},\\n                {\\n                    \"type\": \"image_url\",\\n                    \"image_url\": {\\n                        \"url\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\",\\n                    }\\n                },\\n            ],\\n        }\\n    ],\\n    max_tokens=300,\\n)\\n\\nprint(response.choices[0])\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'from openai import OpenAI\\n\\nclient = OpenAI()\\n\\nresponse = client.chat.completions.create(\\n    model=\"gpt-4.1\",\\n    messages=[\\n        {\\n            \"role\": \"user\",\\n            \"content\": [\\n                {\"type\": \"text\", \"text\": \"What\\'s in this image?\"},\\n                {\\n                    \"type\": \"image_url\",\\n                    \"image_url\": {\\n                        \"url\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\",\\n                    }\\n                },\\n            ],\\n        }\\n    ],\\n    max_tokens=300,\\n)\\n\\nprint(response.choices[0])\\n',\n                  lang: 'python',\n                  meta: 'python',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['from', '#C586C0'], ' ', ['openai', '#D4D4D4'], ' ', ['import', '#C586C0'], ' ', ['OpenAI', '#D4D4D4'], '\\n\\n', ['client = OpenAI()', '#D4D4D4'], '\\n\\n', ['response = client.chat.completions.create(', '#D4D4D4'], '\\n    ', ['model', '#9CDCFE'], ['=', '#D4D4D4'], ['\"gpt-4.1\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['messages', '#9CDCFE'], ['=[', '#D4D4D4'], '\\n        ', ['{', '#D4D4D4'], '\\n            ', ['\"role\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"user\"', '#CE9178'], [',', '#D4D4D4'], '\\n            ', ['\"content\"', '#CE9178'], [': [', '#D4D4D4'], '\\n                ', ['{', '#D4D4D4'], ['\"type\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"text\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['\"text\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"What\\'s in this image?\"', '#CE9178'], ['},', '#D4D4D4'], '\\n                ', ['{', '#D4D4D4'], '\\n                    ', ['\"type\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"image_url\"', '#CE9178'], [',', '#D4D4D4'], '\\n                    ', ['\"image_url\"', '#CE9178'], [': {', '#D4D4D4'], '\\n                        ', ['\"url\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\"', '#CE9178'], [',', '#D4D4D4'], '\\n                    ', ['}', '#D4D4D4'], '\\n                ', ['},', '#D4D4D4'], '\\n            ', ['],', '#D4D4D4'], '\\n        ', ['}', '#D4D4D4'], '\\n    ', ['],', '#D4D4D4'], '\\n    ', ['max_tokens', '#9CDCFE'], ['=', '#D4D4D4'], ['300', '#B5CEA8'], [',', '#D4D4D4'], '\\n', [')', '#D4D4D4'], '\\n\\n', ['print', '#DCDCAA'], ['(response.choices[', '#D4D4D4'], ['0', '#B5CEA8'], ['])', '#D4D4D4'], '\\n'],\n                  value: 'from openai import OpenAI\\n\\nclient = OpenAI()\\n\\nresponse = client.chat.completions.create(\\n    model=\"gpt-4.1\",\\n    messages=[\\n        {\\n            \"role\": \"user\",\\n            \"content\": [\\n                {\"type\": \"text\", \"text\": \"What\\'s in this image?\"},\\n                {\\n                    \"type\": \"image_url\",\\n                    \"image_url\": {\\n                        \"url\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\",\\n                    }\\n                },\\n            ],\\n        }\\n    ],\\n    max_tokens=300,\\n)\\n\\nprint(response.choices[0])\\n'\n                },\n                language: 'python',\n                title: 'python'\n              }, {\n                code: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nasync function main() {\\n  const response = await openai.chat.completions.create({\\n    model: \"gpt-4.1\",\\n    messages: [\\n      {\\n        role: \"user\",\\n        content: [\\n          { type: \"text\", text: \"What\\'s in this image?\" },\\n          {\\n            type: \"image_url\",\\n            image_url: {\\n              \"url\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\",\\n            },\\n          }\\n        ],\\n      },\\n    ],\\n  });\\n  console.log(response.choices[0]);\\n}\\nmain();\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nasync function main() {\\n  const response = await openai.chat.completions.create({\\n    model: \"gpt-4.1\",\\n    messages: [\\n      {\\n        role: \"user\",\\n        content: [\\n          { type: \"text\", text: \"What\\'s in this image?\" },\\n          {\\n            type: \"image_url\",\\n            image_url: {\\n              \"url\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\",\\n            },\\n          }\\n        ],\\n      },\\n    ],\\n  });\\n  console.log(response.choices[0]);\\n}\\nmain();\\n',\n                  lang: 'javascript',\n                  meta: 'node.js',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['import', '#C586C0'], ' ', ['OpenAI', '#9CDCFE'], ' ', ['from', '#C586C0'], ' ', ['\"openai\"', '#CE9178'], [';', '#D4D4D4'], '\\n\\n', ['const', '#569CD6'], ' ', ['openai', '#4FC1FF'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ' ', ['OpenAI', '#DCDCAA'], ['();', '#D4D4D4'], '\\n\\n', ['async function', '#569CD6'], ' ', ['main', '#DCDCAA'], ['() {', '#D4D4D4'], '\\n  ', ['const', '#569CD6'], ' ', ['response', '#4FC1FF'], ' ', ['=', '#D4D4D4'], ' ', ['await', '#C586C0'], ' ', ['openai', '#9CDCFE'], ['.', '#D4D4D4'], ['chat', '#9CDCFE'], ['.', '#D4D4D4'], ['completions', '#9CDCFE'], ['.', '#D4D4D4'], ['create', '#DCDCAA'], ['({', '#D4D4D4'], '\\n    ', ['model:', '#9CDCFE'], ' ', ['\"gpt-4.1\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['messages:', '#9CDCFE'], ' ', ['[', '#D4D4D4'], '\\n      ', ['{', '#D4D4D4'], '\\n        ', ['role:', '#9CDCFE'], ' ', ['\"user\"', '#CE9178'], [',', '#D4D4D4'], '\\n        ', ['content:', '#9CDCFE'], ' ', ['[', '#D4D4D4'], '\\n          ', ['{', '#D4D4D4'], ' ', ['type:', '#9CDCFE'], ' ', ['\"text\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['text:', '#9CDCFE'], ' ', ['\"What\\'s in this image?\"', '#CE9178'], ' ', ['},', '#D4D4D4'], '\\n          ', ['{', '#D4D4D4'], '\\n            ', ['type:', '#9CDCFE'], ' ', ['\"image_url\"', '#CE9178'], [',', '#D4D4D4'], '\\n            ', ['image_url:', '#9CDCFE'], ' ', ['{', '#D4D4D4'], '\\n              ', ['\"url\"', '#CE9178'], [':', '#9CDCFE'], ' ', ['\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\"', '#CE9178'], [',', '#D4D4D4'], '\\n            ', ['},', '#D4D4D4'], '\\n          ', ['}', '#D4D4D4'], '\\n        ', ['],', '#D4D4D4'], '\\n      ', ['},', '#D4D4D4'], '\\n    ', ['],', '#D4D4D4'], '\\n  ', ['});', '#D4D4D4'], '\\n  ', ['console', '#9CDCFE'], ['.', '#D4D4D4'], ['log', '#DCDCAA'], ['(', '#D4D4D4'], ['response', '#9CDCFE'], ['.', '#D4D4D4'], ['choices', '#9CDCFE'], ['[', '#D4D4D4'], ['0', '#B5CEA8'], [']);', '#D4D4D4'], '\\n', ['}', '#D4D4D4'], '\\n', ['main', '#DCDCAA'], ['();', '#D4D4D4'], '\\n'],\n                  value: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nasync function main() {\\n  const response = await openai.chat.completions.create({\\n    model: \"gpt-4.1\",\\n    messages: [\\n      {\\n        role: \"user\",\\n        content: [\\n          { type: \"text\", text: \"What\\'s in this image?\" },\\n          {\\n            type: \"image_url\",\\n            image_url: {\\n              \"url\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\",\\n            },\\n          }\\n        ],\\n      },\\n    ],\\n  });\\n  console.log(response.choices[0]);\\n}\\nmain();\\n'\n                },\n                language: 'js',\n                title: 'node.js'\n              }, {\n                code: 'using System;\\nusing System.Collections.Generic;\\n\\nusing OpenAI.Chat;\\n\\nChatClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nList<ChatMessage> messages =\\n[\\n    new UserChatMessage(\\n    [\\n        ChatMessageContentPart.CreateTextPart(\"What\\'s in this image?\"),\\n        ChatMessageContentPart.CreateImagePart(new Uri(\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\"))\\n    ])\\n];\\n\\nChatCompletion completion = client.CompleteChat(messages);\\n\\nConsole.WriteLine(completion.Content[0].Text);\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'using System;\\nusing System.Collections.Generic;\\n\\nusing OpenAI.Chat;\\n\\nChatClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nList<ChatMessage> messages =\\n[\\n    new UserChatMessage(\\n    [\\n        ChatMessageContentPart.CreateTextPart(\"What\\'s in this image?\"),\\n        ChatMessageContentPart.CreateImagePart(new Uri(\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\"))\\n    ])\\n];\\n\\nChatCompletion completion = client.CompleteChat(messages);\\n\\nConsole.WriteLine(completion.Content[0].Text);\\n',\n                  lang: 'csharp',\n                  meta: 'csharp',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['using', '#569CD6'], ' ', ['System', '#4EC9B0'], [';', '#D4D4D4'], '\\n', ['using', '#569CD6'], ' ', ['System', '#4EC9B0'], ['.', '#D4D4D4'], ['Collections', '#4EC9B0'], ['.', '#D4D4D4'], ['Generic', '#4EC9B0'], [';', '#D4D4D4'], '\\n\\n', ['using', '#569CD6'], ' ', ['OpenAI', '#4EC9B0'], ['.', '#D4D4D4'], ['Chat', '#4EC9B0'], [';', '#D4D4D4'], '\\n\\n', ['ChatClient', '#4EC9B0'], ' ', ['client', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ['(', '#D4D4D4'], '\\n    ', ['model', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"gpt-4.1\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['apiKey', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['Environment', '#9CDCFE'], ['.', '#D4D4D4'], ['GetEnvironmentVariable', '#DCDCAA'], ['(', '#D4D4D4'], ['\"OPENAI_API_KEY\"', '#CE9178'], [')', '#D4D4D4'], '\\n', [');', '#D4D4D4'], '\\n\\n', ['List', '#4EC9B0'], ['<', '#D4D4D4'], ['ChatMessage', '#4EC9B0'], ['>', '#D4D4D4'], ' ', ['messages', '#9CDCFE'], ' ', ['=', '#D4D4D4'], '\\n', ['[', '#D4D4D4'], '\\n    ', ['new', '#569CD6'], ' ', ['UserChatMessage', '#4EC9B0'], ['(', '#D4D4D4'], '\\n    ', ['[', '#D4D4D4'], '\\n        ', ['ChatMessageContentPart', '#9CDCFE'], ['.', '#D4D4D4'], ['CreateTextPart', '#DCDCAA'], ['(', '#D4D4D4'], ['\"What\\'s in this image?\"', '#CE9178'], ['),', '#D4D4D4'], '\\n        ', ['ChatMessageContentPart', '#9CDCFE'], ['.', '#D4D4D4'], ['CreateImagePart', '#DCDCAA'], ['(', '#D4D4D4'], ['new', '#569CD6'], ' ', ['Uri', '#4EC9B0'], ['(', '#D4D4D4'], ['\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\"', '#CE9178'], ['))', '#D4D4D4'], '\\n    ', ['])', '#D4D4D4'], '\\n', ['];', '#D4D4D4'], '\\n\\n', ['ChatCompletion', '#4EC9B0'], ' ', ['completion', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['client', '#9CDCFE'], ['.', '#D4D4D4'], ['CompleteChat', '#DCDCAA'], ['(', '#D4D4D4'], ['messages', '#9CDCFE'], [');', '#D4D4D4'], '\\n\\n', ['Console', '#9CDCFE'], ['.', '#D4D4D4'], ['WriteLine', '#DCDCAA'], ['(', '#D4D4D4'], ['completion', '#9CDCFE'], ['.', '#D4D4D4'], ['Content', '#9CDCFE'], ['[', '#D4D4D4'], ['0', '#B5CEA8'], ['].', '#D4D4D4'], ['Text', '#9CDCFE'], [');', '#D4D4D4'], '\\n'],\n                  value: 'using System;\\nusing System.Collections.Generic;\\n\\nusing OpenAI.Chat;\\n\\nChatClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nList<ChatMessage> messages =\\n[\\n    new UserChatMessage(\\n    [\\n        ChatMessageContentPart.CreateTextPart(\"What\\'s in this image?\"),\\n        ChatMessageContentPart.CreateImagePart(new Uri(\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\"))\\n    ])\\n];\\n\\nChatCompletion completion = client.CompleteChat(messages);\\n\\nConsole.WriteLine(completion.Content[0].Text);\\n'\n                },\n                language: 'csharp',\n                title: 'csharp'\n              }],\n              title: 'Image input'\n            },\n            description: 'Image input'\n          }, {\n            codeblock: {\n              tabs: [{\n                code: 'curl https://api.openai.com/v1/chat/completions \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"VAR_chat_model_id\",\\n    \"messages\": [\\n      {\\n        \"role\": \"developer\",\\n        \"content\": \"You are a helpful assistant.\"\\n      },\\n      {\\n        \"role\": \"user\",\\n        \"content\": \"Hello!\"\\n      }\\n    ],\\n    \"stream\": true\\n  }\\'\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'curl https://api.openai.com/v1/chat/completions \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"VAR_chat_model_id\",\\n    \"messages\": [\\n      {\\n        \"role\": \"developer\",\\n        \"content\": \"You are a helpful assistant.\"\\n      },\\n      {\\n        \"role\": \"user\",\\n        \"content\": \"Hello!\"\\n      }\\n    ],\\n    \"stream\": true\\n  }\\'\\n',\n                  lang: 'shellscript',\n                  meta: 'curl',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['curl', '#DCDCAA'], ' ', ['https://api.openai.com/v1/chat/completions', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-H \"Content-Type: application/json\"', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-H \"Authorization: Bearer', '#CE9178'], ' ', ['$OPENAI_API_KEY', '#9CDCFE'], ['\"', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-d \\'{', '#CE9178'], '\\n    ', ['\"model\": \"VAR_chat_model_id\",', '#CE9178'], '\\n    ', ['\"messages\": [', '#CE9178'], '\\n      ', ['{', '#CE9178'], '\\n        ', ['\"role\": \"developer\",', '#CE9178'], '\\n        ', ['\"content\": \"You are a helpful assistant.\"', '#CE9178'], '\\n      ', ['},', '#CE9178'], '\\n      ', ['{', '#CE9178'], '\\n        ', ['\"role\": \"user\",', '#CE9178'], '\\n        ', ['\"content\": \"Hello!\"', '#CE9178'], '\\n      ', ['}', '#CE9178'], '\\n    ', ['],', '#CE9178'], '\\n    ', ['\"stream\": true', '#CE9178'], '\\n  ', ['}\\'', '#CE9178'], '\\n'],\n                  value: 'curl https://api.openai.com/v1/chat/completions \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"VAR_chat_model_id\",\\n    \"messages\": [\\n      {\\n        \"role\": \"developer\",\\n        \"content\": \"You are a helpful assistant.\"\\n      },\\n      {\\n        \"role\": \"user\",\\n        \"content\": \"Hello!\"\\n      }\\n    ],\\n    \"stream\": true\\n  }\\'\\n'\n                },\n                language: 'bash',\n                title: 'curl'\n              }, {\n                code: 'from openai import OpenAI\\nclient = OpenAI()\\n\\ncompletion = client.chat.completions.create(\\n  model=\"VAR_chat_model_id\",\\n  messages=[\\n    {\"role\": \"developer\", \"content\": \"You are a helpful assistant.\"},\\n    {\"role\": \"user\", \"content\": \"Hello!\"}\\n  ],\\n  stream=True\\n)\\n\\nfor chunk in completion:\\n  print(chunk.choices[0].delta)\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'from openai import OpenAI\\nclient = OpenAI()\\n\\ncompletion = client.chat.completions.create(\\n  model=\"VAR_chat_model_id\",\\n  messages=[\\n    {\"role\": \"developer\", \"content\": \"You are a helpful assistant.\"},\\n    {\"role\": \"user\", \"content\": \"Hello!\"}\\n  ],\\n  stream=True\\n)\\n\\nfor chunk in completion:\\n  print(chunk.choices[0].delta)\\n',\n                  lang: 'python',\n                  meta: 'python',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['from', '#C586C0'], ' ', ['openai', '#D4D4D4'], ' ', ['import', '#C586C0'], ' ', ['OpenAI', '#D4D4D4'], '\\n', ['client = OpenAI()', '#D4D4D4'], '\\n\\n', ['completion = client.chat.completions.create(', '#D4D4D4'], '\\n  ', ['model', '#9CDCFE'], ['=', '#D4D4D4'], ['\"VAR_chat_model_id\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['messages', '#9CDCFE'], ['=[', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], ['\"role\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"developer\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['\"content\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"You are a helpful assistant.\"', '#CE9178'], ['},', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], ['\"role\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"user\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['\"content\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"Hello!\"', '#CE9178'], ['}', '#D4D4D4'], '\\n  ', ['],', '#D4D4D4'], '\\n  ', ['stream', '#9CDCFE'], ['=', '#D4D4D4'], ['True', '#569CD6'], '\\n', [')', '#D4D4D4'], '\\n\\n', ['for', '#C586C0'], ' ', ['chunk', '#D4D4D4'], ' ', ['in', '#C586C0'], ' ', ['completion:', '#D4D4D4'], '\\n  ', ['print', '#DCDCAA'], ['(chunk.choices[', '#D4D4D4'], ['0', '#B5CEA8'], ['].delta)', '#D4D4D4'], '\\n'],\n                  value: 'from openai import OpenAI\\nclient = OpenAI()\\n\\ncompletion = client.chat.completions.create(\\n  model=\"VAR_chat_model_id\",\\n  messages=[\\n    {\"role\": \"developer\", \"content\": \"You are a helpful assistant.\"},\\n    {\"role\": \"user\", \"content\": \"Hello!\"}\\n  ],\\n  stream=True\\n)\\n\\nfor chunk in completion:\\n  print(chunk.choices[0].delta)\\n'\n                },\n                language: 'python',\n                title: 'python'\n              }, {\n                code: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nasync function main() {\\n  const completion = await openai.chat.completions.create({\\n    model: \"VAR_chat_model_id\",\\n    messages: [\\n      {\"role\": \"developer\", \"content\": \"You are a helpful assistant.\"},\\n      {\"role\": \"user\", \"content\": \"Hello!\"}\\n    ],\\n    stream: true,\\n  });\\n\\n  for await (const chunk of completion) {\\n    console.log(chunk.choices[0].delta.content);\\n  }\\n}\\n\\nmain();\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nasync function main() {\\n  const completion = await openai.chat.completions.create({\\n    model: \"VAR_chat_model_id\",\\n    messages: [\\n      {\"role\": \"developer\", \"content\": \"You are a helpful assistant.\"},\\n      {\"role\": \"user\", \"content\": \"Hello!\"}\\n    ],\\n    stream: true,\\n  });\\n\\n  for await (const chunk of completion) {\\n    console.log(chunk.choices[0].delta.content);\\n  }\\n}\\n\\nmain();\\n',\n                  lang: 'javascript',\n                  meta: 'node.js',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['import', '#C586C0'], ' ', ['OpenAI', '#9CDCFE'], ' ', ['from', '#C586C0'], ' ', ['\"openai\"', '#CE9178'], [';', '#D4D4D4'], '\\n\\n', ['const', '#569CD6'], ' ', ['openai', '#4FC1FF'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ' ', ['OpenAI', '#DCDCAA'], ['();', '#D4D4D4'], '\\n\\n', ['async function', '#569CD6'], ' ', ['main', '#DCDCAA'], ['() {', '#D4D4D4'], '\\n  ', ['const', '#569CD6'], ' ', ['completion', '#4FC1FF'], ' ', ['=', '#D4D4D4'], ' ', ['await', '#C586C0'], ' ', ['openai', '#9CDCFE'], ['.', '#D4D4D4'], ['chat', '#9CDCFE'], ['.', '#D4D4D4'], ['completions', '#9CDCFE'], ['.', '#D4D4D4'], ['create', '#DCDCAA'], ['({', '#D4D4D4'], '\\n    ', ['model:', '#9CDCFE'], ' ', ['\"VAR_chat_model_id\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['messages:', '#9CDCFE'], ' ', ['[', '#D4D4D4'], '\\n      ', ['{', '#D4D4D4'], ['\"role\"', '#CE9178'], [':', '#9CDCFE'], ' ', ['\"developer\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['\"content\"', '#CE9178'], [':', '#9CDCFE'], ' ', ['\"You are a helpful assistant.\"', '#CE9178'], ['},', '#D4D4D4'], '\\n      ', ['{', '#D4D4D4'], ['\"role\"', '#CE9178'], [':', '#9CDCFE'], ' ', ['\"user\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['\"content\"', '#CE9178'], [':', '#9CDCFE'], ' ', ['\"Hello!\"', '#CE9178'], ['}', '#D4D4D4'], '\\n    ', ['],', '#D4D4D4'], '\\n    ', ['stream:', '#9CDCFE'], ' ', ['true', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['});', '#D4D4D4'], '\\n\\n  ', ['for await', '#C586C0'], ' ', ['(', '#D4D4D4'], ['const', '#569CD6'], ' ', ['chunk', '#4FC1FF'], ' ', ['of', '#569CD6'], ' ', ['completion', '#9CDCFE'], [') {', '#D4D4D4'], '\\n    ', ['console', '#9CDCFE'], ['.', '#D4D4D4'], ['log', '#DCDCAA'], ['(', '#D4D4D4'], ['chunk', '#9CDCFE'], ['.', '#D4D4D4'], ['choices', '#9CDCFE'], ['[', '#D4D4D4'], ['0', '#B5CEA8'], ['].', '#D4D4D4'], ['delta', '#9CDCFE'], ['.', '#D4D4D4'], ['content', '#9CDCFE'], [');', '#D4D4D4'], '\\n  ', ['}', '#D4D4D4'], '\\n', ['}', '#D4D4D4'], '\\n\\n', ['main', '#DCDCAA'], ['();', '#D4D4D4'], '\\n'],\n                  value: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nasync function main() {\\n  const completion = await openai.chat.completions.create({\\n    model: \"VAR_chat_model_id\",\\n    messages: [\\n      {\"role\": \"developer\", \"content\": \"You are a helpful assistant.\"},\\n      {\"role\": \"user\", \"content\": \"Hello!\"}\\n    ],\\n    stream: true,\\n  });\\n\\n  for await (const chunk of completion) {\\n    console.log(chunk.choices[0].delta.content);\\n  }\\n}\\n\\nmain();\\n'\n                },\n                language: 'js',\n                title: 'node.js'\n              }, {\n                code: 'using System;\\nusing System.ClientModel;\\nusing System.Collections.Generic;\\nusing System.Threading.Tasks;\\n\\nusing OpenAI.Chat;\\n\\nChatClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nList<ChatMessage> messages =\\n[\\n    new SystemChatMessage(\"You are a helpful assistant.\"),\\n    new UserChatMessage(\"Hello!\")\\n];\\n\\nAsyncCollectionResult<StreamingChatCompletionUpdate> completionUpdates = client.CompleteChatStreamingAsync(messages);\\n\\nawait foreach (StreamingChatCompletionUpdate completionUpdate in completionUpdates)\\n{\\n    if (completionUpdate.ContentUpdate.Count > 0)\\n    {\\n        Console.Write(completionUpdate.ContentUpdate[0].Text);\\n    }\\n}\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'using System;\\nusing System.ClientModel;\\nusing System.Collections.Generic;\\nusing System.Threading.Tasks;\\n\\nusing OpenAI.Chat;\\n\\nChatClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nList<ChatMessage> messages =\\n[\\n    new SystemChatMessage(\"You are a helpful assistant.\"),\\n    new UserChatMessage(\"Hello!\")\\n];\\n\\nAsyncCollectionResult<StreamingChatCompletionUpdate> completionUpdates = client.CompleteChatStreamingAsync(messages);\\n\\nawait foreach (StreamingChatCompletionUpdate completionUpdate in completionUpdates)\\n{\\n    if (completionUpdate.ContentUpdate.Count > 0)\\n    {\\n        Console.Write(completionUpdate.ContentUpdate[0].Text);\\n    }\\n}\\n',\n                  lang: 'csharp',\n                  meta: 'csharp',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['using', '#569CD6'], ' ', ['System', '#4EC9B0'], [';', '#D4D4D4'], '\\n', ['using', '#569CD6'], ' ', ['System', '#4EC9B0'], ['.', '#D4D4D4'], ['ClientModel', '#4EC9B0'], [';', '#D4D4D4'], '\\n', ['using', '#569CD6'], ' ', ['System', '#4EC9B0'], ['.', '#D4D4D4'], ['Collections', '#4EC9B0'], ['.', '#D4D4D4'], ['Generic', '#4EC9B0'], [';', '#D4D4D4'], '\\n', ['using', '#569CD6'], ' ', ['System', '#4EC9B0'], ['.', '#D4D4D4'], ['Threading', '#4EC9B0'], ['.', '#D4D4D4'], ['Tasks', '#4EC9B0'], [';', '#D4D4D4'], '\\n\\n', ['using', '#569CD6'], ' ', ['OpenAI', '#4EC9B0'], ['.', '#D4D4D4'], ['Chat', '#4EC9B0'], [';', '#D4D4D4'], '\\n\\n', ['ChatClient', '#4EC9B0'], ' ', ['client', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ['(', '#D4D4D4'], '\\n    ', ['model', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"gpt-4.1\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['apiKey', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['Environment', '#9CDCFE'], ['.', '#D4D4D4'], ['GetEnvironmentVariable', '#DCDCAA'], ['(', '#D4D4D4'], ['\"OPENAI_API_KEY\"', '#CE9178'], [')', '#D4D4D4'], '\\n', [');', '#D4D4D4'], '\\n\\n', ['List', '#4EC9B0'], ['<', '#D4D4D4'], ['ChatMessage', '#4EC9B0'], ['>', '#D4D4D4'], ' ', ['messages', '#9CDCFE'], ' ', ['=', '#D4D4D4'], '\\n', ['[', '#D4D4D4'], '\\n    ', ['new', '#569CD6'], ' ', ['SystemChatMessage', '#4EC9B0'], ['(', '#D4D4D4'], ['\"You are a helpful assistant.\"', '#CE9178'], ['),', '#D4D4D4'], '\\n    ', ['new', '#569CD6'], ' ', ['UserChatMessage', '#4EC9B0'], ['(', '#D4D4D4'], ['\"Hello!\"', '#CE9178'], [')', '#D4D4D4'], '\\n', ['];', '#D4D4D4'], '\\n\\n', ['AsyncCollectionResult', '#4EC9B0'], ['<', '#D4D4D4'], ['StreamingChatCompletionUpdate', '#4EC9B0'], ['>', '#D4D4D4'], ' ', ['completionUpdates', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['client', '#9CDCFE'], ['.', '#D4D4D4'], ['CompleteChatStreamingAsync', '#DCDCAA'], ['(', '#D4D4D4'], ['messages', '#9CDCFE'], [');', '#D4D4D4'], '\\n\\n', ['await', '#569CD6'], ' ', ['foreach', '#C586C0'], ' ', ['(', '#D4D4D4'], ['StreamingChatCompletionUpdate', '#4EC9B0'], ' ', ['completionUpdate', '#9CDCFE'], ' ', ['in', '#C586C0'], ' ', ['completionUpdates', '#9CDCFE'], [')', '#D4D4D4'], '\\n', ['{', '#D4D4D4'], '\\n    ', ['if', '#DCDCAA'], ' ', ['(', '#D4D4D4'], ['completionUpdate', '#9CDCFE'], ['.', '#D4D4D4'], ['ContentUpdate', '#9CDCFE'], ['.', '#D4D4D4'], ['Count', '#9CDCFE'], ' ', ['>', '#D4D4D4'], ' ', ['0', '#B5CEA8'], [')', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], '\\n        ', ['Console', '#9CDCFE'], ['.', '#D4D4D4'], ['Write', '#DCDCAA'], ['(', '#D4D4D4'], ['completionUpdate', '#9CDCFE'], ['.', '#D4D4D4'], ['ContentUpdate', '#9CDCFE'], ['[', '#D4D4D4'], ['0', '#B5CEA8'], ['].', '#D4D4D4'], ['Text', '#9CDCFE'], [');', '#D4D4D4'], '\\n    ', ['}', '#D4D4D4'], '\\n', ['}', '#D4D4D4'], '\\n'],\n                  value: 'using System;\\nusing System.ClientModel;\\nusing System.Collections.Generic;\\nusing System.Threading.Tasks;\\n\\nusing OpenAI.Chat;\\n\\nChatClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nList<ChatMessage> messages =\\n[\\n    new SystemChatMessage(\"You are a helpful assistant.\"),\\n    new UserChatMessage(\"Hello!\")\\n];\\n\\nAsyncCollectionResult<StreamingChatCompletionUpdate> completionUpdates = client.CompleteChatStreamingAsync(messages);\\n\\nawait foreach (StreamingChatCompletionUpdate completionUpdate in completionUpdates)\\n{\\n    if (completionUpdate.ContentUpdate.Count > 0)\\n    {\\n        Console.Write(completionUpdate.ContentUpdate[0].Text);\\n    }\\n}\\n'\n                },\n                language: 'csharp',\n                title: 'csharp'\n              }],\n              title: 'Streaming'\n            },\n            description: 'Streaming'\n          }, {\n            codeblock: {\n              tabs: [{\n                code: 'curl https://api.openai.com/v1/chat/completions \\\\\\n-H \"Content-Type: application/json\" \\\\\\n-H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n-d \\'{\\n  \"model\": \"gpt-4.1\",\\n  \"messages\": [\\n    {\\n      \"role\": \"user\",\\n      \"content\": \"What is the weather like in Boston today?\"\\n    }\\n  ],\\n  \"tools\": [\\n    {\\n      \"type\": \"function\",\\n      \"function\": {\\n        \"name\": \"get_current_weather\",\\n        \"description\": \"Get the current weather in a given location\",\\n        \"parameters\": {\\n          \"type\": \"object\",\\n          \"properties\": {\\n            \"location\": {\\n              \"type\": \"string\",\\n              \"description\": \"The city and state, e.g. San Francisco, CA\"\\n            },\\n            \"unit\": {\\n              \"type\": \"string\",\\n              \"enum\": [\"celsius\", \"fahrenheit\"]\\n            }\\n          },\\n          \"required\": [\"location\"]\\n        }\\n      }\\n    }\\n  ],\\n  \"tool_choice\": \"auto\"\\n}\\'\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'curl https://api.openai.com/v1/chat/completions \\\\\\n-H \"Content-Type: application/json\" \\\\\\n-H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n-d \\'{\\n  \"model\": \"gpt-4.1\",\\n  \"messages\": [\\n    {\\n      \"role\": \"user\",\\n      \"content\": \"What is the weather like in Boston today?\"\\n    }\\n  ],\\n  \"tools\": [\\n    {\\n      \"type\": \"function\",\\n      \"function\": {\\n        \"name\": \"get_current_weather\",\\n        \"description\": \"Get the current weather in a given location\",\\n        \"parameters\": {\\n          \"type\": \"object\",\\n          \"properties\": {\\n            \"location\": {\\n              \"type\": \"string\",\\n              \"description\": \"The city and state, e.g. San Francisco, CA\"\\n            },\\n            \"unit\": {\\n              \"type\": \"string\",\\n              \"enum\": [\"celsius\", \"fahrenheit\"]\\n            }\\n          },\\n          \"required\": [\"location\"]\\n        }\\n      }\\n    }\\n  ],\\n  \"tool_choice\": \"auto\"\\n}\\'\\n',\n                  lang: 'shellscript',\n                  meta: 'curl',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['curl', '#DCDCAA'], ' ', ['https://api.openai.com/v1/chat/completions', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n', ['-H', '#D4D4D4'], ' ', ['\"Content-Type: application/json\"', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n', ['-H', '#D4D4D4'], ' ', ['\"Authorization: Bearer', '#CE9178'], ' ', ['$OPENAI_API_KEY', '#9CDCFE'], ['\"', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n', ['-d', '#D4D4D4'], ' ', ['\\'{', '#CE9178'], '\\n  ', ['\"model\": \"gpt-4.1\",', '#CE9178'], '\\n  ', ['\"messages\": [', '#CE9178'], '\\n    ', ['{', '#CE9178'], '\\n      ', ['\"role\": \"user\",', '#CE9178'], '\\n      ', ['\"content\": \"What is the weather like in Boston today?\"', '#CE9178'], '\\n    ', ['}', '#CE9178'], '\\n  ', ['],', '#CE9178'], '\\n  ', ['\"tools\": [', '#CE9178'], '\\n    ', ['{', '#CE9178'], '\\n      ', ['\"type\": \"function\",', '#CE9178'], '\\n      ', ['\"function\": {', '#CE9178'], '\\n        ', ['\"name\": \"get_current_weather\",', '#CE9178'], '\\n        ', ['\"description\": \"Get the current weather in a given location\",', '#CE9178'], '\\n        ', ['\"parameters\": {', '#CE9178'], '\\n          ', ['\"type\": \"object\",', '#CE9178'], '\\n          ', ['\"properties\": {', '#CE9178'], '\\n            ', ['\"location\": {', '#CE9178'], '\\n              ', ['\"type\": \"string\",', '#CE9178'], '\\n              ', ['\"description\": \"The city and state, e.g. San Francisco, CA\"', '#CE9178'], '\\n            ', ['},', '#CE9178'], '\\n            ', ['\"unit\": {', '#CE9178'], '\\n              ', ['\"type\": \"string\",', '#CE9178'], '\\n              ', ['\"enum\": [\"celsius\", \"fahrenheit\"]', '#CE9178'], '\\n            ', ['}', '#CE9178'], '\\n          ', ['},', '#CE9178'], '\\n          ', ['\"required\": [\"location\"]', '#CE9178'], '\\n        ', ['}', '#CE9178'], '\\n      ', ['}', '#CE9178'], '\\n    ', ['}', '#CE9178'], '\\n  ', ['],', '#CE9178'], '\\n  ', ['\"tool_choice\": \"auto\"', '#CE9178'], '\\n', ['}\\'', '#CE9178'], '\\n'],\n                  value: 'curl https://api.openai.com/v1/chat/completions \\\\\\n-H \"Content-Type: application/json\" \\\\\\n-H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n-d \\'{\\n  \"model\": \"gpt-4.1\",\\n  \"messages\": [\\n    {\\n      \"role\": \"user\",\\n      \"content\": \"What is the weather like in Boston today?\"\\n    }\\n  ],\\n  \"tools\": [\\n    {\\n      \"type\": \"function\",\\n      \"function\": {\\n        \"name\": \"get_current_weather\",\\n        \"description\": \"Get the current weather in a given location\",\\n        \"parameters\": {\\n          \"type\": \"object\",\\n          \"properties\": {\\n            \"location\": {\\n              \"type\": \"string\",\\n              \"description\": \"The city and state, e.g. San Francisco, CA\"\\n            },\\n            \"unit\": {\\n              \"type\": \"string\",\\n              \"enum\": [\"celsius\", \"fahrenheit\"]\\n            }\\n          },\\n          \"required\": [\"location\"]\\n        }\\n      }\\n    }\\n  ],\\n  \"tool_choice\": \"auto\"\\n}\\'\\n'\n                },\n                language: 'bash',\n                title: 'curl'\n              }, {\n                code: 'from openai import OpenAI\\nclient = OpenAI()\\n\\ntools = [\\n  {\\n    \"type\": \"function\",\\n    \"function\": {\\n      \"name\": \"get_current_weather\",\\n      \"description\": \"Get the current weather in a given location\",\\n      \"parameters\": {\\n        \"type\": \"object\",\\n        \"properties\": {\\n          \"location\": {\\n            \"type\": \"string\",\\n            \"description\": \"The city and state, e.g. San Francisco, CA\",\\n          },\\n          \"unit\": {\"type\": \"string\", \"enum\": [\"celsius\", \"fahrenheit\"]},\\n        },\\n        \"required\": [\"location\"],\\n      },\\n    }\\n  }\\n]\\nmessages = [{\"role\": \"user\", \"content\": \"What\\'s the weather like in Boston today?\"}]\\ncompletion = client.chat.completions.create(\\n  model=\"VAR_chat_model_id\",\\n  messages=messages,\\n  tools=tools,\\n  tool_choice=\"auto\"\\n)\\n\\nprint(completion)\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'from openai import OpenAI\\nclient = OpenAI()\\n\\ntools = [\\n  {\\n    \"type\": \"function\",\\n    \"function\": {\\n      \"name\": \"get_current_weather\",\\n      \"description\": \"Get the current weather in a given location\",\\n      \"parameters\": {\\n        \"type\": \"object\",\\n        \"properties\": {\\n          \"location\": {\\n            \"type\": \"string\",\\n            \"description\": \"The city and state, e.g. San Francisco, CA\",\\n          },\\n          \"unit\": {\"type\": \"string\", \"enum\": [\"celsius\", \"fahrenheit\"]},\\n        },\\n        \"required\": [\"location\"],\\n      },\\n    }\\n  }\\n]\\nmessages = [{\"role\": \"user\", \"content\": \"What\\'s the weather like in Boston today?\"}]\\ncompletion = client.chat.completions.create(\\n  model=\"VAR_chat_model_id\",\\n  messages=messages,\\n  tools=tools,\\n  tool_choice=\"auto\"\\n)\\n\\nprint(completion)\\n',\n                  lang: 'python',\n                  meta: 'python',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['from', '#C586C0'], ' ', ['openai', '#D4D4D4'], ' ', ['import', '#C586C0'], ' ', ['OpenAI', '#D4D4D4'], '\\n', ['client = OpenAI()', '#D4D4D4'], '\\n\\n', ['tools = [', '#D4D4D4'], '\\n  ', ['{', '#D4D4D4'], '\\n    ', ['\"type\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"function\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['\"function\"', '#CE9178'], [': {', '#D4D4D4'], '\\n      ', ['\"name\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"get_current_weather\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"description\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"Get the current weather in a given location\"', '#CE9178'], [',', '#D4D4D4'], '\\n      ', ['\"parameters\"', '#CE9178'], [': {', '#D4D4D4'], '\\n        ', ['\"type\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"object\"', '#CE9178'], [',', '#D4D4D4'], '\\n        ', ['\"properties\"', '#CE9178'], [': {', '#D4D4D4'], '\\n          ', ['\"location\"', '#CE9178'], [': {', '#D4D4D4'], '\\n            ', ['\"type\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"string\"', '#CE9178'], [',', '#D4D4D4'], '\\n            ', ['\"description\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"The city and state, e.g. San Francisco, CA\"', '#CE9178'], [',', '#D4D4D4'], '\\n          ', ['},', '#D4D4D4'], '\\n          ', ['\"unit\"', '#CE9178'], [': {', '#D4D4D4'], ['\"type\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"string\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['\"enum\"', '#CE9178'], [': [', '#D4D4D4'], ['\"celsius\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['\"fahrenheit\"', '#CE9178'], [']},', '#D4D4D4'], '\\n        ', ['},', '#D4D4D4'], '\\n        ', ['\"required\"', '#CE9178'], [': [', '#D4D4D4'], ['\"location\"', '#CE9178'], ['],', '#D4D4D4'], '\\n      ', ['},', '#D4D4D4'], '\\n    ', ['}', '#D4D4D4'], '\\n  ', ['}', '#D4D4D4'], '\\n', [']', '#D4D4D4'], '\\n', ['messages = [{', '#D4D4D4'], ['\"role\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"user\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['\"content\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"What\\'s the weather like in Boston today?\"', '#CE9178'], ['}]', '#D4D4D4'], '\\n', ['completion = client.chat.completions.create(', '#D4D4D4'], '\\n  ', ['model', '#9CDCFE'], ['=', '#D4D4D4'], ['\"VAR_chat_model_id\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['messages', '#9CDCFE'], ['=messages,', '#D4D4D4'], '\\n  ', ['tools', '#9CDCFE'], ['=tools,', '#D4D4D4'], '\\n  ', ['tool_choice', '#9CDCFE'], ['=', '#D4D4D4'], ['\"auto\"', '#CE9178'], '\\n', [')', '#D4D4D4'], '\\n\\n', ['print', '#DCDCAA'], ['(completion)', '#D4D4D4'], '\\n'],\n                  value: 'from openai import OpenAI\\nclient = OpenAI()\\n\\ntools = [\\n  {\\n    \"type\": \"function\",\\n    \"function\": {\\n      \"name\": \"get_current_weather\",\\n      \"description\": \"Get the current weather in a given location\",\\n      \"parameters\": {\\n        \"type\": \"object\",\\n        \"properties\": {\\n          \"location\": {\\n            \"type\": \"string\",\\n            \"description\": \"The city and state, e.g. San Francisco, CA\",\\n          },\\n          \"unit\": {\"type\": \"string\", \"enum\": [\"celsius\", \"fahrenheit\"]},\\n        },\\n        \"required\": [\"location\"],\\n      },\\n    }\\n  }\\n]\\nmessages = [{\"role\": \"user\", \"content\": \"What\\'s the weather like in Boston today?\"}]\\ncompletion = client.chat.completions.create(\\n  model=\"VAR_chat_model_id\",\\n  messages=messages,\\n  tools=tools,\\n  tool_choice=\"auto\"\\n)\\n\\nprint(completion)\\n'\n                },\n                language: 'python',\n                title: 'python'\n              }, {\n                code: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nasync function main() {\\n  const messages = [{\"role\": \"user\", \"content\": \"What\\'s the weather like in Boston today?\"}];\\n  const tools = [\\n      {\\n        \"type\": \"function\",\\n        \"function\": {\\n          \"name\": \"get_current_weather\",\\n          \"description\": \"Get the current weather in a given location\",\\n          \"parameters\": {\\n            \"type\": \"object\",\\n            \"properties\": {\\n              \"location\": {\\n                \"type\": \"string\",\\n                \"description\": \"The city and state, e.g. San Francisco, CA\",\\n              },\\n              \"unit\": {\"type\": \"string\", \"enum\": [\"celsius\", \"fahrenheit\"]},\\n            },\\n            \"required\": [\"location\"],\\n          },\\n        }\\n      }\\n  ];\\n\\n  const response = await openai.chat.completions.create({\\n    model: \"gpt-4.1\",\\n    messages: messages,\\n    tools: tools,\\n    tool_choice: \"auto\",\\n  });\\n\\n  console.log(response);\\n}\\n\\nmain();\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nasync function main() {\\n  const messages = [{\"role\": \"user\", \"content\": \"What\\'s the weather like in Boston today?\"}];\\n  const tools = [\\n      {\\n        \"type\": \"function\",\\n        \"function\": {\\n          \"name\": \"get_current_weather\",\\n          \"description\": \"Get the current weather in a given location\",\\n          \"parameters\": {\\n            \"type\": \"object\",\\n            \"properties\": {\\n              \"location\": {\\n                \"type\": \"string\",\\n                \"description\": \"The city and state, e.g. San Francisco, CA\",\\n              },\\n              \"unit\": {\"type\": \"string\", \"enum\": [\"celsius\", \"fahrenheit\"]},\\n            },\\n            \"required\": [\"location\"],\\n          },\\n        }\\n      }\\n  ];\\n\\n  const response = await openai.chat.completions.create({\\n    model: \"gpt-4.1\",\\n    messages: messages,\\n    tools: tools,\\n    tool_choice: \"auto\",\\n  });\\n\\n  console.log(response);\\n}\\n\\nmain();\\n',\n                  lang: 'javascript',\n                  meta: 'node.js',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['import', '#C586C0'], ' ', ['OpenAI', '#9CDCFE'], ' ', ['from', '#C586C0'], ' ', ['\"openai\"', '#CE9178'], [';', '#D4D4D4'], '\\n\\n', ['const', '#569CD6'], ' ', ['openai', '#4FC1FF'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ' ', ['OpenAI', '#DCDCAA'], ['();', '#D4D4D4'], '\\n\\n', ['async function', '#569CD6'], ' ', ['main', '#DCDCAA'], ['() {', '#D4D4D4'], '\\n  ', ['const', '#569CD6'], ' ', ['messages', '#4FC1FF'], ' ', ['= [{', '#D4D4D4'], ['\"role\"', '#CE9178'], [':', '#9CDCFE'], ' ', ['\"user\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['\"content\"', '#CE9178'], [':', '#9CDCFE'], ' ', ['\"What\\'s the weather like in Boston today?\"', '#CE9178'], ['}];', '#D4D4D4'], '\\n  ', ['const', '#569CD6'], ' ', ['tools', '#4FC1FF'], ' ', ['= [', '#D4D4D4'], '\\n      ', ['{', '#D4D4D4'], '\\n        ', ['\"type\"', '#CE9178'], [':', '#9CDCFE'], ' ', ['\"function\"', '#CE9178'], [',', '#D4D4D4'], '\\n        ', ['\"function\"', '#CE9178'], [':', '#9CDCFE'], ' ', ['{', '#D4D4D4'], '\\n          ', ['\"name\"', '#CE9178'], [':', '#9CDCFE'], ' ', ['\"get_current_weather\"', '#CE9178'], [',', '#D4D4D4'], '\\n          ', ['\"description\"', '#CE9178'], [':', '#9CDCFE'], ' ', ['\"Get the current weather in a given location\"', '#CE9178'], [',', '#D4D4D4'], '\\n          ', ['\"parameters\"', '#CE9178'], [':', '#9CDCFE'], ' ', ['{', '#D4D4D4'], '\\n            ', ['\"type\"', '#CE9178'], [':', '#9CDCFE'], ' ', ['\"object\"', '#CE9178'], [',', '#D4D4D4'], '\\n            ', ['\"properties\"', '#CE9178'], [':', '#9CDCFE'], ' ', ['{', '#D4D4D4'], '\\n              ', ['\"location\"', '#CE9178'], [':', '#9CDCFE'], ' ', ['{', '#D4D4D4'], '\\n                ', ['\"type\"', '#CE9178'], [':', '#9CDCFE'], ' ', ['\"string\"', '#CE9178'], [',', '#D4D4D4'], '\\n                ', ['\"description\"', '#CE9178'], [':', '#9CDCFE'], ' ', ['\"The city and state, e.g. San Francisco, CA\"', '#CE9178'], [',', '#D4D4D4'], '\\n              ', ['},', '#D4D4D4'], '\\n              ', ['\"unit\"', '#CE9178'], [':', '#9CDCFE'], ' ', ['{', '#D4D4D4'], ['\"type\"', '#CE9178'], [':', '#9CDCFE'], ' ', ['\"string\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['\"enum\"', '#CE9178'], [':', '#9CDCFE'], ' ', ['[', '#D4D4D4'], ['\"celsius\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['\"fahrenheit\"', '#CE9178'], [']},', '#D4D4D4'], '\\n            ', ['},', '#D4D4D4'], '\\n            ', ['\"required\"', '#CE9178'], [':', '#9CDCFE'], ' ', ['[', '#D4D4D4'], ['\"location\"', '#CE9178'], ['],', '#D4D4D4'], '\\n          ', ['},', '#D4D4D4'], '\\n        ', ['}', '#D4D4D4'], '\\n      ', ['}', '#D4D4D4'], '\\n  ', ['];', '#D4D4D4'], '\\n\\n  ', ['const', '#569CD6'], ' ', ['response', '#4FC1FF'], ' ', ['=', '#D4D4D4'], ' ', ['await', '#C586C0'], ' ', ['openai', '#9CDCFE'], ['.', '#D4D4D4'], ['chat', '#9CDCFE'], ['.', '#D4D4D4'], ['completions', '#9CDCFE'], ['.', '#D4D4D4'], ['create', '#DCDCAA'], ['({', '#D4D4D4'], '\\n    ', ['model:', '#9CDCFE'], ' ', ['\"gpt-4.1\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['messages: messages', '#9CDCFE'], [',', '#D4D4D4'], '\\n    ', ['tools: tools', '#9CDCFE'], [',', '#D4D4D4'], '\\n    ', ['tool_choice:', '#9CDCFE'], ' ', ['\"auto\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['});', '#D4D4D4'], '\\n\\n  ', ['console', '#9CDCFE'], ['.', '#D4D4D4'], ['log', '#DCDCAA'], ['(', '#D4D4D4'], ['response', '#9CDCFE'], [');', '#D4D4D4'], '\\n', ['}', '#D4D4D4'], '\\n\\n', ['main', '#DCDCAA'], ['();', '#D4D4D4'], '\\n'],\n                  value: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nasync function main() {\\n  const messages = [{\"role\": \"user\", \"content\": \"What\\'s the weather like in Boston today?\"}];\\n  const tools = [\\n      {\\n        \"type\": \"function\",\\n        \"function\": {\\n          \"name\": \"get_current_weather\",\\n          \"description\": \"Get the current weather in a given location\",\\n          \"parameters\": {\\n            \"type\": \"object\",\\n            \"properties\": {\\n              \"location\": {\\n                \"type\": \"string\",\\n                \"description\": \"The city and state, e.g. San Francisco, CA\",\\n              },\\n              \"unit\": {\"type\": \"string\", \"enum\": [\"celsius\", \"fahrenheit\"]},\\n            },\\n            \"required\": [\"location\"],\\n          },\\n        }\\n      }\\n  ];\\n\\n  const response = await openai.chat.completions.create({\\n    model: \"gpt-4.1\",\\n    messages: messages,\\n    tools: tools,\\n    tool_choice: \"auto\",\\n  });\\n\\n  console.log(response);\\n}\\n\\nmain();\\n'\n                },\n                language: 'js',\n                title: 'node.js'\n              }, {\n                code: 'using System;\\nusing System.Collections.Generic;\\n\\nusing OpenAI.Chat;\\n\\nChatClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nChatTool getCurrentWeatherTool = ChatTool.CreateFunctionTool(\\n    functionName: \"get_current_weather\",\\n    functionDescription: \"Get the current weather in a given location\",\\n    functionParameters: BinaryData.FromString(\"\"\"\\n        {\\n            \"type\": \"object\",\\n            \"properties\": {\\n                \"location\": {\\n                    \"type\": \"string\",\\n                    \"description\": \"The city and state, e.g. San Francisco, CA\"\\n                },\\n                \"unit\": {\\n                    \"type\": \"string\",\\n                    \"enum\": [ \"celsius\", \"fahrenheit\" ]\\n                }\\n            },\\n            \"required\": [ \"location\" ]\\n        }\\n    \"\"\")\\n);\\n\\nList<ChatMessage> messages =\\n[\\n    new UserChatMessage(\"What\\'s the weather like in Boston today?\"),\\n];\\n\\nChatCompletionOptions options = new()\\n{\\n    Tools =\\n    {\\n        getCurrentWeatherTool\\n    },\\n    ToolChoice = ChatToolChoice.CreateAutoChoice(),\\n};\\n\\nChatCompletion completion = client.CompleteChat(messages, options);\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'using System;\\nusing System.Collections.Generic;\\n\\nusing OpenAI.Chat;\\n\\nChatClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nChatTool getCurrentWeatherTool = ChatTool.CreateFunctionTool(\\n    functionName: \"get_current_weather\",\\n    functionDescription: \"Get the current weather in a given location\",\\n    functionParameters: BinaryData.FromString(\"\"\"\\n        {\\n            \"type\": \"object\",\\n            \"properties\": {\\n                \"location\": {\\n                    \"type\": \"string\",\\n                    \"description\": \"The city and state, e.g. San Francisco, CA\"\\n                },\\n                \"unit\": {\\n                    \"type\": \"string\",\\n                    \"enum\": [ \"celsius\", \"fahrenheit\" ]\\n                }\\n            },\\n            \"required\": [ \"location\" ]\\n        }\\n    \"\"\")\\n);\\n\\nList<ChatMessage> messages =\\n[\\n    new UserChatMessage(\"What\\'s the weather like in Boston today?\"),\\n];\\n\\nChatCompletionOptions options = new()\\n{\\n    Tools =\\n    {\\n        getCurrentWeatherTool\\n    },\\n    ToolChoice = ChatToolChoice.CreateAutoChoice(),\\n};\\n\\nChatCompletion completion = client.CompleteChat(messages, options);\\n',\n                  lang: 'csharp',\n                  meta: 'csharp',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['using', '#569CD6'], ' ', ['System', '#4EC9B0'], [';', '#D4D4D4'], '\\n', ['using', '#569CD6'], ' ', ['System', '#4EC9B0'], ['.', '#D4D4D4'], ['Collections', '#4EC9B0'], ['.', '#D4D4D4'], ['Generic', '#4EC9B0'], [';', '#D4D4D4'], '\\n\\n', ['using', '#569CD6'], ' ', ['OpenAI', '#4EC9B0'], ['.', '#D4D4D4'], ['Chat', '#4EC9B0'], [';', '#D4D4D4'], '\\n\\n', ['ChatClient', '#4EC9B0'], ' ', ['client', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ['(', '#D4D4D4'], '\\n    ', ['model', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"gpt-4.1\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['apiKey', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['Environment', '#9CDCFE'], ['.', '#D4D4D4'], ['GetEnvironmentVariable', '#DCDCAA'], ['(', '#D4D4D4'], ['\"OPENAI_API_KEY\"', '#CE9178'], [')', '#D4D4D4'], '\\n', [');', '#D4D4D4'], '\\n\\n', ['ChatTool', '#4EC9B0'], ' ', ['getCurrentWeatherTool', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['ChatTool', '#9CDCFE'], ['.', '#D4D4D4'], ['CreateFunctionTool', '#DCDCAA'], ['(', '#D4D4D4'], '\\n    ', ['functionName', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"get_current_weather\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['functionDescription', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"Get the current weather in a given location\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['functionParameters', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['BinaryData', '#9CDCFE'], ['.', '#D4D4D4'], ['FromString', '#DCDCAA'], ['(', '#D4D4D4'], ['\"\"\"', '#CE9178'], '\\n        ', ['{', '#CE9178'], '\\n            ', ['\"type\": \"object\",', '#CE9178'], '\\n            ', ['\"properties\": {', '#CE9178'], '\\n                ', ['\"location\": {', '#CE9178'], '\\n                    ', ['\"type\": \"string\",', '#CE9178'], '\\n                    ', ['\"description\": \"The city and state, e.g. San Francisco, CA\"', '#CE9178'], '\\n                ', ['},', '#CE9178'], '\\n                ', ['\"unit\": {', '#CE9178'], '\\n                    ', ['\"type\": \"string\",', '#CE9178'], '\\n                    ', ['\"enum\": [ \"celsius\", \"fahrenheit\" ]', '#CE9178'], '\\n                ', ['}', '#CE9178'], '\\n            ', ['},', '#CE9178'], '\\n            ', ['\"required\": [ \"location\" ]', '#CE9178'], '\\n        ', ['}', '#CE9178'], '\\n    ', ['\"\"\"', '#CE9178'], [')', '#D4D4D4'], '\\n', [');', '#D4D4D4'], '\\n\\n', ['List', '#4EC9B0'], ['<', '#D4D4D4'], ['ChatMessage', '#4EC9B0'], ['>', '#D4D4D4'], ' ', ['messages', '#9CDCFE'], ' ', ['=', '#D4D4D4'], '\\n', ['[', '#D4D4D4'], '\\n    ', ['new', '#569CD6'], ' ', ['UserChatMessage', '#4EC9B0'], ['(', '#D4D4D4'], ['\"What\\'s the weather like in Boston today?\"', '#CE9178'], ['),', '#D4D4D4'], '\\n', ['];', '#D4D4D4'], '\\n\\n', ['ChatCompletionOptions', '#4EC9B0'], ' ', ['options', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ['()', '#D4D4D4'], '\\n', ['{', '#D4D4D4'], '\\n    ', ['Tools', '#9CDCFE'], ' ', ['=', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], '\\n        ', ['getCurrentWeatherTool', '#9CDCFE'], '\\n    ', ['},', '#D4D4D4'], '\\n    ', ['ToolChoice', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['ChatToolChoice', '#9CDCFE'], ['.', '#D4D4D4'], ['CreateAutoChoice', '#DCDCAA'], ['(),', '#D4D4D4'], '\\n', ['};', '#D4D4D4'], '\\n\\n', ['ChatCompletion', '#4EC9B0'], ' ', ['completion', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['client', '#9CDCFE'], ['.', '#D4D4D4'], ['CompleteChat', '#DCDCAA'], ['(', '#D4D4D4'], ['messages', '#9CDCFE'], [',', '#D4D4D4'], ' ', ['options', '#9CDCFE'], [');', '#D4D4D4'], '\\n'],\n                  value: 'using System;\\nusing System.Collections.Generic;\\n\\nusing OpenAI.Chat;\\n\\nChatClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nChatTool getCurrentWeatherTool = ChatTool.CreateFunctionTool(\\n    functionName: \"get_current_weather\",\\n    functionDescription: \"Get the current weather in a given location\",\\n    functionParameters: BinaryData.FromString(\"\"\"\\n        {\\n            \"type\": \"object\",\\n            \"properties\": {\\n                \"location\": {\\n                    \"type\": \"string\",\\n                    \"description\": \"The city and state, e.g. San Francisco, CA\"\\n                },\\n                \"unit\": {\\n                    \"type\": \"string\",\\n                    \"enum\": [ \"celsius\", \"fahrenheit\" ]\\n                }\\n            },\\n            \"required\": [ \"location\" ]\\n        }\\n    \"\"\")\\n);\\n\\nList<ChatMessage> messages =\\n[\\n    new UserChatMessage(\"What\\'s the weather like in Boston today?\"),\\n];\\n\\nChatCompletionOptions options = new()\\n{\\n    Tools =\\n    {\\n        getCurrentWeatherTool\\n    },\\n    ToolChoice = ChatToolChoice.CreateAutoChoice(),\\n};\\n\\nChatCompletion completion = client.CompleteChat(messages, options);\\n'\n                },\n                language: 'csharp',\n                title: 'csharp'\n              }],\n              title: 'Functions'\n            },\n            description: 'Functions'\n          }, {\n            codeblock: {\n              tabs: [{\n                code: 'curl https://api.openai.com/v1/chat/completions \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"VAR_chat_model_id\",\\n    \"messages\": [\\n      {\\n        \"role\": \"user\",\\n        \"content\": \"Hello!\"\\n      }\\n    ],\\n    \"logprobs\": true,\\n    \"top_logprobs\": 2\\n  }\\'\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'curl https://api.openai.com/v1/chat/completions \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"VAR_chat_model_id\",\\n    \"messages\": [\\n      {\\n        \"role\": \"user\",\\n        \"content\": \"Hello!\"\\n      }\\n    ],\\n    \"logprobs\": true,\\n    \"top_logprobs\": 2\\n  }\\'\\n',\n                  lang: 'shellscript',\n                  meta: 'curl',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['curl', '#DCDCAA'], ' ', ['https://api.openai.com/v1/chat/completions', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-H \"Content-Type: application/json\"', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-H \"Authorization: Bearer', '#CE9178'], ' ', ['$OPENAI_API_KEY', '#9CDCFE'], ['\"', '#CE9178'], ' ', ['\\\\', '#D7BA7D'], '\\n  ', ['-d \\'{', '#CE9178'], '\\n    ', ['\"model\": \"VAR_chat_model_id\",', '#CE9178'], '\\n    ', ['\"messages\": [', '#CE9178'], '\\n      ', ['{', '#CE9178'], '\\n        ', ['\"role\": \"user\",', '#CE9178'], '\\n        ', ['\"content\": \"Hello!\"', '#CE9178'], '\\n      ', ['}', '#CE9178'], '\\n    ', ['],', '#CE9178'], '\\n    ', ['\"logprobs\": true,', '#CE9178'], '\\n    ', ['\"top_logprobs\": 2', '#CE9178'], '\\n  ', ['}\\'', '#CE9178'], '\\n'],\n                  value: 'curl https://api.openai.com/v1/chat/completions \\\\\\n  -H \"Content-Type: application/json\" \\\\\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\\\\n  -d \\'{\\n    \"model\": \"VAR_chat_model_id\",\\n    \"messages\": [\\n      {\\n        \"role\": \"user\",\\n        \"content\": \"Hello!\"\\n      }\\n    ],\\n    \"logprobs\": true,\\n    \"top_logprobs\": 2\\n  }\\'\\n'\n                },\n                language: 'bash',\n                title: 'curl'\n              }, {\n                code: 'from openai import OpenAI\\nclient = OpenAI()\\n\\ncompletion = client.chat.completions.create(\\n  model=\"VAR_chat_model_id\",\\n  messages=[\\n    {\"role\": \"user\", \"content\": \"Hello!\"}\\n  ],\\n  logprobs=True,\\n  top_logprobs=2\\n)\\n\\nprint(completion.choices[0].message)\\nprint(completion.choices[0].logprobs)\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'from openai import OpenAI\\nclient = OpenAI()\\n\\ncompletion = client.chat.completions.create(\\n  model=\"VAR_chat_model_id\",\\n  messages=[\\n    {\"role\": \"user\", \"content\": \"Hello!\"}\\n  ],\\n  logprobs=True,\\n  top_logprobs=2\\n)\\n\\nprint(completion.choices[0].message)\\nprint(completion.choices[0].logprobs)\\n',\n                  lang: 'python',\n                  meta: 'python',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['from', '#C586C0'], ' ', ['openai', '#D4D4D4'], ' ', ['import', '#C586C0'], ' ', ['OpenAI', '#D4D4D4'], '\\n', ['client = OpenAI()', '#D4D4D4'], '\\n\\n', ['completion = client.chat.completions.create(', '#D4D4D4'], '\\n  ', ['model', '#9CDCFE'], ['=', '#D4D4D4'], ['\"VAR_chat_model_id\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['messages', '#9CDCFE'], ['=[', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], ['\"role\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"user\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['\"content\"', '#CE9178'], [':', '#D4D4D4'], ' ', ['\"Hello!\"', '#CE9178'], ['}', '#D4D4D4'], '\\n  ', ['],', '#D4D4D4'], '\\n  ', ['logprobs', '#9CDCFE'], ['=', '#D4D4D4'], ['True', '#569CD6'], [',', '#D4D4D4'], '\\n  ', ['top_logprobs', '#9CDCFE'], ['=', '#D4D4D4'], ['2', '#B5CEA8'], '\\n', [')', '#D4D4D4'], '\\n\\n', ['print', '#DCDCAA'], ['(completion.choices[', '#D4D4D4'], ['0', '#B5CEA8'], ['].message)', '#D4D4D4'], '\\n', ['print', '#DCDCAA'], ['(completion.choices[', '#D4D4D4'], ['0', '#B5CEA8'], ['].logprobs)', '#D4D4D4'], '\\n'],\n                  value: 'from openai import OpenAI\\nclient = OpenAI()\\n\\ncompletion = client.chat.completions.create(\\n  model=\"VAR_chat_model_id\",\\n  messages=[\\n    {\"role\": \"user\", \"content\": \"Hello!\"}\\n  ],\\n  logprobs=True,\\n  top_logprobs=2\\n)\\n\\nprint(completion.choices[0].message)\\nprint(completion.choices[0].logprobs)\\n'\n                },\n                language: 'python',\n                title: 'python'\n              }, {\n                code: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nasync function main() {\\n  const completion = await openai.chat.completions.create({\\n    messages: [{ role: \"user\", content: \"Hello!\" }],\\n    model: \"VAR_chat_model_id\",\\n    logprobs: true,\\n    top_logprobs: 2,\\n  });\\n\\n  console.log(completion.choices[0]);\\n}\\n\\nmain();\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nasync function main() {\\n  const completion = await openai.chat.completions.create({\\n    messages: [{ role: \"user\", content: \"Hello!\" }],\\n    model: \"VAR_chat_model_id\",\\n    logprobs: true,\\n    top_logprobs: 2,\\n  });\\n\\n  console.log(completion.choices[0]);\\n}\\n\\nmain();\\n',\n                  lang: 'javascript',\n                  meta: 'node.js',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['import', '#C586C0'], ' ', ['OpenAI', '#9CDCFE'], ' ', ['from', '#C586C0'], ' ', ['\"openai\"', '#CE9178'], [';', '#D4D4D4'], '\\n\\n', ['const', '#569CD6'], ' ', ['openai', '#4FC1FF'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ' ', ['OpenAI', '#DCDCAA'], ['();', '#D4D4D4'], '\\n\\n', ['async function', '#569CD6'], ' ', ['main', '#DCDCAA'], ['() {', '#D4D4D4'], '\\n  ', ['const', '#569CD6'], ' ', ['completion', '#4FC1FF'], ' ', ['=', '#D4D4D4'], ' ', ['await', '#C586C0'], ' ', ['openai', '#9CDCFE'], ['.', '#D4D4D4'], ['chat', '#9CDCFE'], ['.', '#D4D4D4'], ['completions', '#9CDCFE'], ['.', '#D4D4D4'], ['create', '#DCDCAA'], ['({', '#D4D4D4'], '\\n    ', ['messages:', '#9CDCFE'], ' ', ['[{', '#D4D4D4'], ' ', ['role:', '#9CDCFE'], ' ', ['\"user\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['content:', '#9CDCFE'], ' ', ['\"Hello!\"', '#CE9178'], ' ', ['}],', '#D4D4D4'], '\\n    ', ['model:', '#9CDCFE'], ' ', ['\"VAR_chat_model_id\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['logprobs:', '#9CDCFE'], ' ', ['true', '#569CD6'], [',', '#D4D4D4'], '\\n    ', ['top_logprobs:', '#9CDCFE'], ' ', ['2', '#B5CEA8'], [',', '#D4D4D4'], '\\n  ', ['});', '#D4D4D4'], '\\n\\n  ', ['console', '#9CDCFE'], ['.', '#D4D4D4'], ['log', '#DCDCAA'], ['(', '#D4D4D4'], ['completion', '#9CDCFE'], ['.', '#D4D4D4'], ['choices', '#9CDCFE'], ['[', '#D4D4D4'], ['0', '#B5CEA8'], [']);', '#D4D4D4'], '\\n', ['}', '#D4D4D4'], '\\n\\n', ['main', '#DCDCAA'], ['();', '#D4D4D4'], '\\n'],\n                  value: 'import OpenAI from \"openai\";\\n\\nconst openai = new OpenAI();\\n\\nasync function main() {\\n  const completion = await openai.chat.completions.create({\\n    messages: [{ role: \"user\", content: \"Hello!\" }],\\n    model: \"VAR_chat_model_id\",\\n    logprobs: true,\\n    top_logprobs: 2,\\n  });\\n\\n  console.log(completion.choices[0]);\\n}\\n\\nmain();\\n'\n                },\n                language: 'js',\n                title: 'node.js'\n              }, {\n                code: 'using System;\\nusing System.Collections.Generic;\\n\\nusing OpenAI.Chat;\\n\\nChatClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nList<ChatMessage> messages =\\n[\\n    new UserChatMessage(\"Hello!\")\\n];\\n\\nChatCompletionOptions options = new()\\n{\\n    IncludeLogProbabilities = true,\\n    TopLogProbabilityCount = 2\\n};\\n\\nChatCompletion completion = client.CompleteChat(messages, options);\\n\\nConsole.WriteLine(completion.Content[0].Text);\\n',\n                highlighted: {\n                  annotations: [],\n                  code: 'using System;\\nusing System.Collections.Generic;\\n\\nusing OpenAI.Chat;\\n\\nChatClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nList<ChatMessage> messages =\\n[\\n    new UserChatMessage(\"Hello!\")\\n];\\n\\nChatCompletionOptions options = new()\\n{\\n    IncludeLogProbabilities = true,\\n    TopLogProbabilityCount = 2\\n};\\n\\nChatCompletion completion = client.CompleteChat(messages, options);\\n\\nConsole.WriteLine(completion.Content[0].Text);\\n',\n                  lang: 'csharp',\n                  meta: 'csharp',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['using', '#569CD6'], ' ', ['System', '#4EC9B0'], [';', '#D4D4D4'], '\\n', ['using', '#569CD6'], ' ', ['System', '#4EC9B0'], ['.', '#D4D4D4'], ['Collections', '#4EC9B0'], ['.', '#D4D4D4'], ['Generic', '#4EC9B0'], [';', '#D4D4D4'], '\\n\\n', ['using', '#569CD6'], ' ', ['OpenAI', '#4EC9B0'], ['.', '#D4D4D4'], ['Chat', '#4EC9B0'], [';', '#D4D4D4'], '\\n\\n', ['ChatClient', '#4EC9B0'], ' ', ['client', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ['(', '#D4D4D4'], '\\n    ', ['model', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"gpt-4.1\"', '#CE9178'], [',', '#D4D4D4'], '\\n    ', ['apiKey', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['Environment', '#9CDCFE'], ['.', '#D4D4D4'], ['GetEnvironmentVariable', '#DCDCAA'], ['(', '#D4D4D4'], ['\"OPENAI_API_KEY\"', '#CE9178'], [')', '#D4D4D4'], '\\n', [');', '#D4D4D4'], '\\n\\n', ['List', '#4EC9B0'], ['<', '#D4D4D4'], ['ChatMessage', '#4EC9B0'], ['>', '#D4D4D4'], ' ', ['messages', '#9CDCFE'], ' ', ['=', '#D4D4D4'], '\\n', ['[', '#D4D4D4'], '\\n    ', ['new', '#569CD6'], ' ', ['UserChatMessage', '#4EC9B0'], ['(', '#D4D4D4'], ['\"Hello!\"', '#CE9178'], [')', '#D4D4D4'], '\\n', ['];', '#D4D4D4'], '\\n\\n', ['ChatCompletionOptions', '#4EC9B0'], ' ', ['options', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['new', '#569CD6'], ['()', '#D4D4D4'], '\\n', ['{', '#D4D4D4'], '\\n    ', ['IncludeLogProbabilities', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['true', '#569CD6'], [',', '#D4D4D4'], '\\n    ', ['TopLogProbabilityCount', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['2', '#B5CEA8'], '\\n', ['};', '#D4D4D4'], '\\n\\n', ['ChatCompletion', '#4EC9B0'], ' ', ['completion', '#9CDCFE'], ' ', ['=', '#D4D4D4'], ' ', ['client', '#9CDCFE'], ['.', '#D4D4D4'], ['CompleteChat', '#DCDCAA'], ['(', '#D4D4D4'], ['messages', '#9CDCFE'], [',', '#D4D4D4'], ' ', ['options', '#9CDCFE'], [');', '#D4D4D4'], '\\n\\n', ['Console', '#9CDCFE'], ['.', '#D4D4D4'], ['WriteLine', '#DCDCAA'], ['(', '#D4D4D4'], ['completion', '#9CDCFE'], ['.', '#D4D4D4'], ['Content', '#9CDCFE'], ['[', '#D4D4D4'], ['0', '#B5CEA8'], ['].', '#D4D4D4'], ['Text', '#9CDCFE'], [');', '#D4D4D4'], '\\n'],\n                  value: 'using System;\\nusing System.Collections.Generic;\\n\\nusing OpenAI.Chat;\\n\\nChatClient client = new(\\n    model: \"gpt-4.1\",\\n    apiKey: Environment.GetEnvironmentVariable(\"OPENAI_API_KEY\")\\n);\\n\\nList<ChatMessage> messages =\\n[\\n    new UserChatMessage(\"Hello!\")\\n];\\n\\nChatCompletionOptions options = new()\\n{\\n    IncludeLogProbabilities = true,\\n    TopLogProbabilityCount = 2\\n};\\n\\nChatCompletion completion = client.CompleteChat(messages, options);\\n\\nConsole.WriteLine(completion.Content[0].Text);\\n'\n                },\n                language: 'csharp',\n                title: 'csharp'\n              }],\n              title: 'Logprobs'\n            },\n            description: 'Logprobs'\n          }]\n        }, {\n          description: 'Example response',\n          examples: [{\n            codeblock: {\n              tabs: [{\n                code: '{\\n  \"id\": \"chatcmpl-B9MBs8CjcvOU2jLn4n570S5qMJKcT\",\\n  \"object\": \"chat.completion\",\\n  \"created\": 1741569952,\\n  \"model\": \"gpt-4.1-2025-04-14\",\\n  \"choices\": [\\n    {\\n      \"index\": 0,\\n      \"message\": {\\n        \"role\": \"assistant\",\\n        \"content\": \"Hello! How can I assist you today?\",\\n        \"refusal\": null,\\n        \"annotations\": []\\n      },\\n      \"logprobs\": null,\\n      \"finish_reason\": \"stop\"\\n    }\\n  ],\\n  \"usage\": {\\n    \"prompt_tokens\": 19,\\n    \"completion_tokens\": 10,\\n    \"total_tokens\": 29,\\n    \"prompt_tokens_details\": {\\n      \"cached_tokens\": 0,\\n      \"audio_tokens\": 0\\n    },\\n    \"completion_tokens_details\": {\\n      \"reasoning_tokens\": 0,\\n      \"audio_tokens\": 0,\\n      \"accepted_prediction_tokens\": 0,\\n      \"rejected_prediction_tokens\": 0\\n    }\\n  },\\n  \"service_tier\": \"default\"\\n}\\n',\n                highlighted: {\n                  annotations: [],\n                  code: '{\\n  \"id\": \"chatcmpl-B9MBs8CjcvOU2jLn4n570S5qMJKcT\",\\n  \"object\": \"chat.completion\",\\n  \"created\": 1741569952,\\n  \"model\": \"gpt-4.1-2025-04-14\",\\n  \"choices\": [\\n    {\\n      \"index\": 0,\\n      \"message\": {\\n        \"role\": \"assistant\",\\n        \"content\": \"Hello! How can I assist you today?\",\\n        \"refusal\": null,\\n        \"annotations\": []\\n      },\\n      \"logprobs\": null,\\n      \"finish_reason\": \"stop\"\\n    }\\n  ],\\n  \"usage\": {\\n    \"prompt_tokens\": 19,\\n    \"completion_tokens\": 10,\\n    \"total_tokens\": 29,\\n    \"prompt_tokens_details\": {\\n      \"cached_tokens\": 0,\\n      \"audio_tokens\": 0\\n    },\\n    \"completion_tokens_details\": {\\n      \"reasoning_tokens\": 0,\\n      \"audio_tokens\": 0,\\n      \"accepted_prediction_tokens\": 0,\\n      \"rejected_prediction_tokens\": 0\\n    }\\n  },\\n  \"service_tier\": \"default\"\\n}\\n',\n                  lang: 'json',\n                  meta: '',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['{', '#D4D4D4'], '\\n  ', ['\"id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"chatcmpl-B9MBs8CjcvOU2jLn4n570S5qMJKcT\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"object\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"chat.completion\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"created\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1741569952', '#B5CEA8'], [',', '#D4D4D4'], '\\n  ', ['\"model\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"gpt-4.1-2025-04-14\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"choices\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], '\\n      ', ['\"index\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], [',', '#D4D4D4'], '\\n      ', ['\"message\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n        ', ['\"role\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"assistant\"', '#CE9178'], [',', '#D4D4D4'], '\\n        ', ['\"content\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"Hello! How can I assist you today?\"', '#CE9178'], [',', '#D4D4D4'], '\\n        ', ['\"refusal\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n        ', ['\"annotations\"', '#9CDCFE'], [': []', '#D4D4D4'], '\\n      ', ['},', '#D4D4D4'], '\\n      ', ['\"logprobs\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n      ', ['\"finish_reason\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"stop\"', '#CE9178'], '\\n    ', ['}', '#D4D4D4'], '\\n  ', ['],', '#D4D4D4'], '\\n  ', ['\"usage\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n    ', ['\"prompt_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['19', '#B5CEA8'], [',', '#D4D4D4'], '\\n    ', ['\"completion_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['10', '#B5CEA8'], [',', '#D4D4D4'], '\\n    ', ['\"total_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['29', '#B5CEA8'], [',', '#D4D4D4'], '\\n    ', ['\"prompt_tokens_details\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n      ', ['\"cached_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], [',', '#D4D4D4'], '\\n      ', ['\"audio_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], '\\n    ', ['},', '#D4D4D4'], '\\n    ', ['\"completion_tokens_details\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n      ', ['\"reasoning_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], [',', '#D4D4D4'], '\\n      ', ['\"audio_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], [',', '#D4D4D4'], '\\n      ', ['\"accepted_prediction_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], [',', '#D4D4D4'], '\\n      ', ['\"rejected_prediction_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], '\\n    ', ['}', '#D4D4D4'], '\\n  ', ['},', '#D4D4D4'], '\\n  ', ['\"service_tier\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"default\"', '#CE9178'], '\\n', ['}', '#D4D4D4'], '\\n'],\n                  value: '{\\n  \"id\": \"chatcmpl-B9MBs8CjcvOU2jLn4n570S5qMJKcT\",\\n  \"object\": \"chat.completion\",\\n  \"created\": 1741569952,\\n  \"model\": \"gpt-4.1-2025-04-14\",\\n  \"choices\": [\\n    {\\n      \"index\": 0,\\n      \"message\": {\\n        \"role\": \"assistant\",\\n        \"content\": \"Hello! How can I assist you today?\",\\n        \"refusal\": null,\\n        \"annotations\": []\\n      },\\n      \"logprobs\": null,\\n      \"finish_reason\": \"stop\"\\n    }\\n  ],\\n  \"usage\": {\\n    \"prompt_tokens\": 19,\\n    \"completion_tokens\": 10,\\n    \"total_tokens\": 29,\\n    \"prompt_tokens_details\": {\\n      \"cached_tokens\": 0,\\n      \"audio_tokens\": 0\\n    },\\n    \"completion_tokens_details\": {\\n      \"reasoning_tokens\": 0,\\n      \"audio_tokens\": 0,\\n      \"accepted_prediction_tokens\": 0,\\n      \"rejected_prediction_tokens\": 0\\n    }\\n  },\\n  \"service_tier\": \"default\"\\n}\\n'\n                },\n                language: 'json',\n                title: ''\n              }],\n              title: 'Default'\n            },\n            description: 'Default'\n          }, {\n            codeblock: {\n              tabs: [{\n                code: '{\\n  \"id\": \"chatcmpl-B9MHDbslfkBeAs8l4bebGdFOJ6PeG\",\\n  \"object\": \"chat.completion\",\\n  \"created\": 1741570283,\\n  \"model\": \"gpt-4.1-2025-04-14\",\\n  \"choices\": [\\n    {\\n      \"index\": 0,\\n      \"message\": {\\n        \"role\": \"assistant\",\\n        \"content\": \"The image shows a wooden boardwalk path running through a lush green field or meadow. The sky is bright blue with some scattered clouds, giving the scene a serene and peaceful atmosphere. Trees and shrubs are visible in the background.\",\\n        \"refusal\": null,\\n        \"annotations\": []\\n      },\\n      \"logprobs\": null,\\n      \"finish_reason\": \"stop\"\\n    }\\n  ],\\n  \"usage\": {\\n    \"prompt_tokens\": 1117,\\n    \"completion_tokens\": 46,\\n    \"total_tokens\": 1163,\\n    \"prompt_tokens_details\": {\\n      \"cached_tokens\": 0,\\n      \"audio_tokens\": 0\\n    },\\n    \"completion_tokens_details\": {\\n      \"reasoning_tokens\": 0,\\n      \"audio_tokens\": 0,\\n      \"accepted_prediction_tokens\": 0,\\n      \"rejected_prediction_tokens\": 0\\n    }\\n  },\\n  \"service_tier\": \"default\"\\n}\\n',\n                highlighted: {\n                  annotations: [],\n                  code: '{\\n  \"id\": \"chatcmpl-B9MHDbslfkBeAs8l4bebGdFOJ6PeG\",\\n  \"object\": \"chat.completion\",\\n  \"created\": 1741570283,\\n  \"model\": \"gpt-4.1-2025-04-14\",\\n  \"choices\": [\\n    {\\n      \"index\": 0,\\n      \"message\": {\\n        \"role\": \"assistant\",\\n        \"content\": \"The image shows a wooden boardwalk path running through a lush green field or meadow. The sky is bright blue with some scattered clouds, giving the scene a serene and peaceful atmosphere. Trees and shrubs are visible in the background.\",\\n        \"refusal\": null,\\n        \"annotations\": []\\n      },\\n      \"logprobs\": null,\\n      \"finish_reason\": \"stop\"\\n    }\\n  ],\\n  \"usage\": {\\n    \"prompt_tokens\": 1117,\\n    \"completion_tokens\": 46,\\n    \"total_tokens\": 1163,\\n    \"prompt_tokens_details\": {\\n      \"cached_tokens\": 0,\\n      \"audio_tokens\": 0\\n    },\\n    \"completion_tokens_details\": {\\n      \"reasoning_tokens\": 0,\\n      \"audio_tokens\": 0,\\n      \"accepted_prediction_tokens\": 0,\\n      \"rejected_prediction_tokens\": 0\\n    }\\n  },\\n  \"service_tier\": \"default\"\\n}\\n',\n                  lang: 'json',\n                  meta: '',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['{', '#D4D4D4'], '\\n  ', ['\"id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"chatcmpl-B9MHDbslfkBeAs8l4bebGdFOJ6PeG\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"object\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"chat.completion\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"created\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1741570283', '#B5CEA8'], [',', '#D4D4D4'], '\\n  ', ['\"model\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"gpt-4.1-2025-04-14\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"choices\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], '\\n      ', ['\"index\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], [',', '#D4D4D4'], '\\n      ', ['\"message\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n        ', ['\"role\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"assistant\"', '#CE9178'], [',', '#D4D4D4'], '\\n        ', ['\"content\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"The image shows a wooden boardwalk path running through a lush green field or meadow. The sky is bright blue with some scattered clouds, giving the scene a serene and peaceful atmosphere. Trees and shrubs are visible in the background.\"', '#CE9178'], [',', '#D4D4D4'], '\\n        ', ['\"refusal\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n        ', ['\"annotations\"', '#9CDCFE'], [': []', '#D4D4D4'], '\\n      ', ['},', '#D4D4D4'], '\\n      ', ['\"logprobs\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n      ', ['\"finish_reason\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"stop\"', '#CE9178'], '\\n    ', ['}', '#D4D4D4'], '\\n  ', ['],', '#D4D4D4'], '\\n  ', ['\"usage\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n    ', ['\"prompt_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1117', '#B5CEA8'], [',', '#D4D4D4'], '\\n    ', ['\"completion_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['46', '#B5CEA8'], [',', '#D4D4D4'], '\\n    ', ['\"total_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1163', '#B5CEA8'], [',', '#D4D4D4'], '\\n    ', ['\"prompt_tokens_details\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n      ', ['\"cached_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], [',', '#D4D4D4'], '\\n      ', ['\"audio_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], '\\n    ', ['},', '#D4D4D4'], '\\n    ', ['\"completion_tokens_details\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n      ', ['\"reasoning_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], [',', '#D4D4D4'], '\\n      ', ['\"audio_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], [',', '#D4D4D4'], '\\n      ', ['\"accepted_prediction_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], [',', '#D4D4D4'], '\\n      ', ['\"rejected_prediction_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], '\\n    ', ['}', '#D4D4D4'], '\\n  ', ['},', '#D4D4D4'], '\\n  ', ['\"service_tier\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"default\"', '#CE9178'], '\\n', ['}', '#D4D4D4'], '\\n'],\n                  value: '{\\n  \"id\": \"chatcmpl-B9MHDbslfkBeAs8l4bebGdFOJ6PeG\",\\n  \"object\": \"chat.completion\",\\n  \"created\": 1741570283,\\n  \"model\": \"gpt-4.1-2025-04-14\",\\n  \"choices\": [\\n    {\\n      \"index\": 0,\\n      \"message\": {\\n        \"role\": \"assistant\",\\n        \"content\": \"The image shows a wooden boardwalk path running through a lush green field or meadow. The sky is bright blue with some scattered clouds, giving the scene a serene and peaceful atmosphere. Trees and shrubs are visible in the background.\",\\n        \"refusal\": null,\\n        \"annotations\": []\\n      },\\n      \"logprobs\": null,\\n      \"finish_reason\": \"stop\"\\n    }\\n  ],\\n  \"usage\": {\\n    \"prompt_tokens\": 1117,\\n    \"completion_tokens\": 46,\\n    \"total_tokens\": 1163,\\n    \"prompt_tokens_details\": {\\n      \"cached_tokens\": 0,\\n      \"audio_tokens\": 0\\n    },\\n    \"completion_tokens_details\": {\\n      \"reasoning_tokens\": 0,\\n      \"audio_tokens\": 0,\\n      \"accepted_prediction_tokens\": 0,\\n      \"rejected_prediction_tokens\": 0\\n    }\\n  },\\n  \"service_tier\": \"default\"\\n}\\n'\n                },\n                language: 'json',\n                title: ''\n              }],\n              title: 'Image input'\n            },\n            description: 'Image input'\n          }, {\n            codeblock: {\n              tabs: [{\n                code: '{\"id\":\"chatcmpl-123\",\"object\":\"chat.completion.chunk\",\"created\":1694268190,\"model\":\"gpt-4o-mini\", \"system_fingerprint\": \"fp_44709d6fcb\", \"choices\":[{\"index\":0,\"delta\":{\"role\":\"assistant\",\"content\":\"\"},\"logprobs\":null,\"finish_reason\":null}]}\\n\\n{\"id\":\"chatcmpl-123\",\"object\":\"chat.completion.chunk\",\"created\":1694268190,\"model\":\"gpt-4o-mini\", \"system_fingerprint\": \"fp_44709d6fcb\", \"choices\":[{\"index\":0,\"delta\":{\"content\":\"Hello\"},\"logprobs\":null,\"finish_reason\":null}]}\\n\\n....\\n\\n{\"id\":\"chatcmpl-123\",\"object\":\"chat.completion.chunk\",\"created\":1694268190,\"model\":\"gpt-4o-mini\", \"system_fingerprint\": \"fp_44709d6fcb\", \"choices\":[{\"index\":0,\"delta\":{},\"logprobs\":null,\"finish_reason\":\"stop\"}]}\\n',\n                highlighted: {\n                  annotations: [],\n                  code: '{\"id\":\"chatcmpl-123\",\"object\":\"chat.completion.chunk\",\"created\":1694268190,\"model\":\"gpt-4o-mini\", \"system_fingerprint\": \"fp_44709d6fcb\", \"choices\":[{\"index\":0,\"delta\":{\"role\":\"assistant\",\"content\":\"\"},\"logprobs\":null,\"finish_reason\":null}]}\\n\\n{\"id\":\"chatcmpl-123\",\"object\":\"chat.completion.chunk\",\"created\":1694268190,\"model\":\"gpt-4o-mini\", \"system_fingerprint\": \"fp_44709d6fcb\", \"choices\":[{\"index\":0,\"delta\":{\"content\":\"Hello\"},\"logprobs\":null,\"finish_reason\":null}]}\\n\\n....\\n\\n{\"id\":\"chatcmpl-123\",\"object\":\"chat.completion.chunk\",\"created\":1694268190,\"model\":\"gpt-4o-mini\", \"system_fingerprint\": \"fp_44709d6fcb\", \"choices\":[{\"index\":0,\"delta\":{},\"logprobs\":null,\"finish_reason\":\"stop\"}]}\\n',\n                  lang: 'json',\n                  meta: '',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['{', '#D4D4D4'], ['\"id\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"chatcmpl-123\"', '#CE9178'], [',', '#D4D4D4'], ['\"object\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"chat.completion.chunk\"', '#CE9178'], [',', '#D4D4D4'], ['\"created\"', '#9CDCFE'], [':', '#D4D4D4'], ['1694268190', '#B5CEA8'], [',', '#D4D4D4'], ['\"model\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"gpt-4o-mini\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['\"system_fingerprint\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"fp_44709d6fcb\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['\"choices\"', '#9CDCFE'], [':[{', '#D4D4D4'], ['\"index\"', '#9CDCFE'], [':', '#D4D4D4'], ['0', '#B5CEA8'], [',', '#D4D4D4'], ['\"delta\"', '#9CDCFE'], [':{', '#D4D4D4'], ['\"role\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"assistant\"', '#CE9178'], [',', '#D4D4D4'], ['\"content\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"\"', '#CE9178'], ['},', '#D4D4D4'], ['\"logprobs\"', '#9CDCFE'], [':', '#D4D4D4'], ['null', '#569CD6'], [',', '#D4D4D4'], ['\"finish_reason\"', '#9CDCFE'], [':', '#D4D4D4'], ['null', '#569CD6'], ['}]}', '#D4D4D4'], '\\n\\n', ['{', '#D4D4D4'], ['\"id\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"chatcmpl-123\"', '#CE9178'], [',', '#D4D4D4'], ['\"object\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"chat.completion.chunk\"', '#CE9178'], [',', '#D4D4D4'], ['\"created\"', '#9CDCFE'], [':', '#D4D4D4'], ['1694268190', '#B5CEA8'], [',', '#D4D4D4'], ['\"model\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"gpt-4o-mini\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['\"system_fingerprint\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"fp_44709d6fcb\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['\"choices\"', '#9CDCFE'], [':[{', '#D4D4D4'], ['\"index\"', '#9CDCFE'], [':', '#D4D4D4'], ['0', '#B5CEA8'], [',', '#D4D4D4'], ['\"delta\"', '#9CDCFE'], [':{', '#D4D4D4'], ['\"content\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"Hello\"', '#CE9178'], ['},', '#D4D4D4'], ['\"logprobs\"', '#9CDCFE'], [':', '#D4D4D4'], ['null', '#569CD6'], [',', '#D4D4D4'], ['\"finish_reason\"', '#9CDCFE'], [':', '#D4D4D4'], ['null', '#569CD6'], ['}]}', '#D4D4D4'], '\\n\\n', ['....', '#D4D4D4'], '\\n\\n', ['{', '#D4D4D4'], ['\"id\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"chatcmpl-123\"', '#CE9178'], [',', '#D4D4D4'], ['\"object\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"chat.completion.chunk\"', '#CE9178'], [',', '#D4D4D4'], ['\"created\"', '#9CDCFE'], [':', '#D4D4D4'], ['1694268190', '#B5CEA8'], [',', '#D4D4D4'], ['\"model\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"gpt-4o-mini\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['\"system_fingerprint\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"fp_44709d6fcb\"', '#CE9178'], [',', '#D4D4D4'], ' ', ['\"choices\"', '#9CDCFE'], [':[{', '#D4D4D4'], ['\"index\"', '#9CDCFE'], [':', '#D4D4D4'], ['0', '#B5CEA8'], [',', '#D4D4D4'], ['\"delta\"', '#9CDCFE'], [':{},', '#D4D4D4'], ['\"logprobs\"', '#9CDCFE'], [':', '#D4D4D4'], ['null', '#569CD6'], [',', '#D4D4D4'], ['\"finish_reason\"', '#9CDCFE'], [':', '#D4D4D4'], ['\"stop\"', '#CE9178'], ['}]}', '#D4D4D4'], '\\n'],\n                  value: '{\"id\":\"chatcmpl-123\",\"object\":\"chat.completion.chunk\",\"created\":1694268190,\"model\":\"gpt-4o-mini\", \"system_fingerprint\": \"fp_44709d6fcb\", \"choices\":[{\"index\":0,\"delta\":{\"role\":\"assistant\",\"content\":\"\"},\"logprobs\":null,\"finish_reason\":null}]}\\n\\n{\"id\":\"chatcmpl-123\",\"object\":\"chat.completion.chunk\",\"created\":1694268190,\"model\":\"gpt-4o-mini\", \"system_fingerprint\": \"fp_44709d6fcb\", \"choices\":[{\"index\":0,\"delta\":{\"content\":\"Hello\"},\"logprobs\":null,\"finish_reason\":null}]}\\n\\n....\\n\\n{\"id\":\"chatcmpl-123\",\"object\":\"chat.completion.chunk\",\"created\":1694268190,\"model\":\"gpt-4o-mini\", \"system_fingerprint\": \"fp_44709d6fcb\", \"choices\":[{\"index\":0,\"delta\":{},\"logprobs\":null,\"finish_reason\":\"stop\"}]}\\n'\n                },\n                language: 'json',\n                title: ''\n              }],\n              title: 'Streaming'\n            },\n            description: 'Streaming'\n          }, {\n            codeblock: {\n              tabs: [{\n                code: '{\\n  \"id\": \"chatcmpl-abc123\",\\n  \"object\": \"chat.completion\",\\n  \"created\": 1699896916,\\n  \"model\": \"gpt-4o-mini\",\\n  \"choices\": [\\n    {\\n      \"index\": 0,\\n      \"message\": {\\n        \"role\": \"assistant\",\\n        \"content\": null,\\n        \"tool_calls\": [\\n          {\\n            \"id\": \"call_abc123\",\\n            \"type\": \"function\",\\n            \"function\": {\\n              \"name\": \"get_current_weather\",\\n              \"arguments\": \"{\\\\n\\\\\"location\\\\\": \\\\\"Boston, MA\\\\\"\\\\n}\"\\n            }\\n          }\\n        ]\\n      },\\n      \"logprobs\": null,\\n      \"finish_reason\": \"tool_calls\"\\n    }\\n  ],\\n  \"usage\": {\\n    \"prompt_tokens\": 82,\\n    \"completion_tokens\": 17,\\n    \"total_tokens\": 99,\\n    \"completion_tokens_details\": {\\n      \"reasoning_tokens\": 0,\\n      \"accepted_prediction_tokens\": 0,\\n      \"rejected_prediction_tokens\": 0\\n    }\\n  }\\n}\\n',\n                highlighted: {\n                  annotations: [],\n                  code: '{\\n  \"id\": \"chatcmpl-abc123\",\\n  \"object\": \"chat.completion\",\\n  \"created\": 1699896916,\\n  \"model\": \"gpt-4o-mini\",\\n  \"choices\": [\\n    {\\n      \"index\": 0,\\n      \"message\": {\\n        \"role\": \"assistant\",\\n        \"content\": null,\\n        \"tool_calls\": [\\n          {\\n            \"id\": \"call_abc123\",\\n            \"type\": \"function\",\\n            \"function\": {\\n              \"name\": \"get_current_weather\",\\n              \"arguments\": \"{\\\\n\\\\\"location\\\\\": \\\\\"Boston, MA\\\\\"\\\\n}\"\\n            }\\n          }\\n        ]\\n      },\\n      \"logprobs\": null,\\n      \"finish_reason\": \"tool_calls\"\\n    }\\n  ],\\n  \"usage\": {\\n    \"prompt_tokens\": 82,\\n    \"completion_tokens\": 17,\\n    \"total_tokens\": 99,\\n    \"completion_tokens_details\": {\\n      \"reasoning_tokens\": 0,\\n      \"accepted_prediction_tokens\": 0,\\n      \"rejected_prediction_tokens\": 0\\n    }\\n  }\\n}\\n',\n                  lang: 'json',\n                  meta: '',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['{', '#D4D4D4'], '\\n  ', ['\"id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"chatcmpl-abc123\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"object\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"chat.completion\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"created\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1699896916', '#B5CEA8'], [',', '#D4D4D4'], '\\n  ', ['\"model\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"gpt-4o-mini\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"choices\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], '\\n      ', ['\"index\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], [',', '#D4D4D4'], '\\n      ', ['\"message\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n        ', ['\"role\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"assistant\"', '#CE9178'], [',', '#D4D4D4'], '\\n        ', ['\"content\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n        ', ['\"tool_calls\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n          ', ['{', '#D4D4D4'], '\\n            ', ['\"id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"call_abc123\"', '#CE9178'], [',', '#D4D4D4'], '\\n            ', ['\"type\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"function\"', '#CE9178'], [',', '#D4D4D4'], '\\n            ', ['\"function\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n              ', ['\"name\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"get_current_weather\"', '#CE9178'], [',', '#D4D4D4'], '\\n              ', ['\"arguments\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"{', '#CE9178'], ['\\\\n\\\\\"', '#D7BA7D'], ['location', '#CE9178'], ['\\\\\"', '#D7BA7D'], [':', '#CE9178'], ' ', ['\\\\\"', '#D7BA7D'], ['Boston, MA', '#CE9178'], ['\\\\\"\\\\n', '#D7BA7D'], ['}\"', '#CE9178'], '\\n            ', ['}', '#D4D4D4'], '\\n          ', ['}', '#D4D4D4'], '\\n        ', [']', '#D4D4D4'], '\\n      ', ['},', '#D4D4D4'], '\\n      ', ['\"logprobs\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], [',', '#D4D4D4'], '\\n      ', ['\"finish_reason\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"tool_calls\"', '#CE9178'], '\\n    ', ['}', '#D4D4D4'], '\\n  ', ['],', '#D4D4D4'], '\\n  ', ['\"usage\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n    ', ['\"prompt_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['82', '#B5CEA8'], [',', '#D4D4D4'], '\\n    ', ['\"completion_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['17', '#B5CEA8'], [',', '#D4D4D4'], '\\n    ', ['\"total_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['99', '#B5CEA8'], [',', '#D4D4D4'], '\\n    ', ['\"completion_tokens_details\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n      ', ['\"reasoning_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], [',', '#D4D4D4'], '\\n      ', ['\"accepted_prediction_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], [',', '#D4D4D4'], '\\n      ', ['\"rejected_prediction_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], '\\n    ', ['}', '#D4D4D4'], '\\n  ', ['}', '#D4D4D4'], '\\n', ['}', '#D4D4D4'], '\\n'],\n                  value: '{\\n  \"id\": \"chatcmpl-abc123\",\\n  \"object\": \"chat.completion\",\\n  \"created\": 1699896916,\\n  \"model\": \"gpt-4o-mini\",\\n  \"choices\": [\\n    {\\n      \"index\": 0,\\n      \"message\": {\\n        \"role\": \"assistant\",\\n        \"content\": null,\\n        \"tool_calls\": [\\n          {\\n            \"id\": \"call_abc123\",\\n            \"type\": \"function\",\\n            \"function\": {\\n              \"name\": \"get_current_weather\",\\n              \"arguments\": \"{\\\\n\\\\\"location\\\\\": \\\\\"Boston, MA\\\\\"\\\\n}\"\\n            }\\n          }\\n        ]\\n      },\\n      \"logprobs\": null,\\n      \"finish_reason\": \"tool_calls\"\\n    }\\n  ],\\n  \"usage\": {\\n    \"prompt_tokens\": 82,\\n    \"completion_tokens\": 17,\\n    \"total_tokens\": 99,\\n    \"completion_tokens_details\": {\\n      \"reasoning_tokens\": 0,\\n      \"accepted_prediction_tokens\": 0,\\n      \"rejected_prediction_tokens\": 0\\n    }\\n  }\\n}\\n'\n                },\n                language: 'json',\n                title: ''\n              }],\n              title: 'Functions'\n            },\n            description: 'Functions'\n          }, {\n            codeblock: {\n              tabs: [{\n                code: '{\\n  \"id\": \"chatcmpl-123\",\\n  \"object\": \"chat.completion\",\\n  \"created\": 1702685778,\\n  \"model\": \"gpt-4o-mini\",\\n  \"choices\": [\\n    {\\n      \"index\": 0,\\n      \"message\": {\\n        \"role\": \"assistant\",\\n        \"content\": \"Hello! How can I assist you today?\"\\n      },\\n      \"logprobs\": {\\n        \"content\": [\\n          {\\n            \"token\": \"Hello\",\\n            \"logprob\": -0.31725305,\\n            \"bytes\": [72, 101, 108, 108, 111],\\n            \"top_logprobs\": [\\n              {\\n                \"token\": \"Hello\",\\n                \"logprob\": -0.31725305,\\n                \"bytes\": [72, 101, 108, 108, 111]\\n              },\\n              {\\n                \"token\": \"Hi\",\\n                \"logprob\": -1.3190403,\\n                \"bytes\": [72, 105]\\n              }\\n            ]\\n          },\\n          {\\n            \"token\": \"!\",\\n            \"logprob\": -0.02380986,\\n            \"bytes\": [\\n              33\\n            ],\\n            \"top_logprobs\": [\\n              {\\n                \"token\": \"!\",\\n                \"logprob\": -0.02380986,\\n                \"bytes\": [33]\\n              },\\n              {\\n                \"token\": \" there\",\\n                \"logprob\": -3.787621,\\n                \"bytes\": [32, 116, 104, 101, 114, 101]\\n              }\\n            ]\\n          },\\n          {\\n            \"token\": \" How\",\\n            \"logprob\": -0.000054669687,\\n            \"bytes\": [32, 72, 111, 119],\\n            \"top_logprobs\": [\\n              {\\n                \"token\": \" How\",\\n                \"logprob\": -0.000054669687,\\n                \"bytes\": [32, 72, 111, 119]\\n              },\\n              {\\n                \"token\": \"<|end|>\",\\n                \"logprob\": -10.953937,\\n                \"bytes\": null\\n              }\\n            ]\\n          },\\n          {\\n            \"token\": \" can\",\\n            \"logprob\": -0.015801601,\\n            \"bytes\": [32, 99, 97, 110],\\n            \"top_logprobs\": [\\n              {\\n                \"token\": \" can\",\\n                \"logprob\": -0.015801601,\\n                \"bytes\": [32, 99, 97, 110]\\n              },\\n              {\\n                \"token\": \" may\",\\n                \"logprob\": -4.161023,\\n                \"bytes\": [32, 109, 97, 121]\\n              }\\n            ]\\n          },\\n          {\\n            \"token\": \" I\",\\n            \"logprob\": -3.7697225e-6,\\n            \"bytes\": [\\n              32,\\n              73\\n            ],\\n            \"top_logprobs\": [\\n              {\\n                \"token\": \" I\",\\n                \"logprob\": -3.7697225e-6,\\n                \"bytes\": [32, 73]\\n              },\\n              {\\n                \"token\": \" assist\",\\n                \"logprob\": -13.596657,\\n                \"bytes\": [32, 97, 115, 115, 105, 115, 116]\\n              }\\n            ]\\n          },\\n          {\\n            \"token\": \" assist\",\\n            \"logprob\": -0.04571125,\\n            \"bytes\": [32, 97, 115, 115, 105, 115, 116],\\n            \"top_logprobs\": [\\n              {\\n                \"token\": \" assist\",\\n                \"logprob\": -0.04571125,\\n                \"bytes\": [32, 97, 115, 115, 105, 115, 116]\\n              },\\n              {\\n                \"token\": \" help\",\\n                \"logprob\": -3.1089056,\\n                \"bytes\": [32, 104, 101, 108, 112]\\n              }\\n            ]\\n          },\\n          {\\n            \"token\": \" you\",\\n            \"logprob\": -5.4385737e-6,\\n            \"bytes\": [32, 121, 111, 117],\\n            \"top_logprobs\": [\\n              {\\n                \"token\": \" you\",\\n                \"logprob\": -5.4385737e-6,\\n                \"bytes\": [32, 121, 111, 117]\\n              },\\n              {\\n                \"token\": \" today\",\\n                \"logprob\": -12.807695,\\n                \"bytes\": [32, 116, 111, 100, 97, 121]\\n              }\\n            ]\\n          },\\n          {\\n            \"token\": \" today\",\\n            \"logprob\": -0.0040071653,\\n            \"bytes\": [32, 116, 111, 100, 97, 121],\\n            \"top_logprobs\": [\\n              {\\n                \"token\": \" today\",\\n                \"logprob\": -0.0040071653,\\n                \"bytes\": [32, 116, 111, 100, 97, 121]\\n              },\\n              {\\n                \"token\": \"?\",\\n                \"logprob\": -5.5247097,\\n                \"bytes\": [63]\\n              }\\n            ]\\n          },\\n          {\\n            \"token\": \"?\",\\n            \"logprob\": -0.0008108172,\\n            \"bytes\": [63],\\n            \"top_logprobs\": [\\n              {\\n                \"token\": \"?\",\\n                \"logprob\": -0.0008108172,\\n                \"bytes\": [63]\\n              },\\n              {\\n                \"token\": \"?\\\\n\",\\n                \"logprob\": -7.184561,\\n                \"bytes\": [63, 10]\\n              }\\n            ]\\n          }\\n        ]\\n      },\\n      \"finish_reason\": \"stop\"\\n    }\\n  ],\\n  \"usage\": {\\n    \"prompt_tokens\": 9,\\n    \"completion_tokens\": 9,\\n    \"total_tokens\": 18,\\n    \"completion_tokens_details\": {\\n      \"reasoning_tokens\": 0,\\n      \"accepted_prediction_tokens\": 0,\\n      \"rejected_prediction_tokens\": 0\\n    }\\n  },\\n  \"system_fingerprint\": null\\n}\\n',\n                highlighted: {\n                  annotations: [],\n                  code: '{\\n  \"id\": \"chatcmpl-123\",\\n  \"object\": \"chat.completion\",\\n  \"created\": 1702685778,\\n  \"model\": \"gpt-4o-mini\",\\n  \"choices\": [\\n    {\\n      \"index\": 0,\\n      \"message\": {\\n        \"role\": \"assistant\",\\n        \"content\": \"Hello! How can I assist you today?\"\\n      },\\n      \"logprobs\": {\\n        \"content\": [\\n          {\\n            \"token\": \"Hello\",\\n            \"logprob\": -0.31725305,\\n            \"bytes\": [72, 101, 108, 108, 111],\\n            \"top_logprobs\": [\\n              {\\n                \"token\": \"Hello\",\\n                \"logprob\": -0.31725305,\\n                \"bytes\": [72, 101, 108, 108, 111]\\n              },\\n              {\\n                \"token\": \"Hi\",\\n                \"logprob\": -1.3190403,\\n                \"bytes\": [72, 105]\\n              }\\n            ]\\n          },\\n          {\\n            \"token\": \"!\",\\n            \"logprob\": -0.02380986,\\n            \"bytes\": [\\n              33\\n            ],\\n            \"top_logprobs\": [\\n              {\\n                \"token\": \"!\",\\n                \"logprob\": -0.02380986,\\n                \"bytes\": [33]\\n              },\\n              {\\n                \"token\": \" there\",\\n                \"logprob\": -3.787621,\\n                \"bytes\": [32, 116, 104, 101, 114, 101]\\n              }\\n            ]\\n          },\\n          {\\n            \"token\": \" How\",\\n            \"logprob\": -0.000054669687,\\n            \"bytes\": [32, 72, 111, 119],\\n            \"top_logprobs\": [\\n              {\\n                \"token\": \" How\",\\n                \"logprob\": -0.000054669687,\\n                \"bytes\": [32, 72, 111, 119]\\n              },\\n              {\\n                \"token\": \"<|end|>\",\\n                \"logprob\": -10.953937,\\n                \"bytes\": null\\n              }\\n            ]\\n          },\\n          {\\n            \"token\": \" can\",\\n            \"logprob\": -0.015801601,\\n            \"bytes\": [32, 99, 97, 110],\\n            \"top_logprobs\": [\\n              {\\n                \"token\": \" can\",\\n                \"logprob\": -0.015801601,\\n                \"bytes\": [32, 99, 97, 110]\\n              },\\n              {\\n                \"token\": \" may\",\\n                \"logprob\": -4.161023,\\n                \"bytes\": [32, 109, 97, 121]\\n              }\\n            ]\\n          },\\n          {\\n            \"token\": \" I\",\\n            \"logprob\": -3.7697225e-6,\\n            \"bytes\": [\\n              32,\\n              73\\n            ],\\n            \"top_logprobs\": [\\n              {\\n                \"token\": \" I\",\\n                \"logprob\": -3.7697225e-6,\\n                \"bytes\": [32, 73]\\n              },\\n              {\\n                \"token\": \" assist\",\\n                \"logprob\": -13.596657,\\n                \"bytes\": [32, 97, 115, 115, 105, 115, 116]\\n              }\\n            ]\\n          },\\n          {\\n            \"token\": \" assist\",\\n            \"logprob\": -0.04571125,\\n            \"bytes\": [32, 97, 115, 115, 105, 115, 116],\\n            \"top_logprobs\": [\\n              {\\n                \"token\": \" assist\",\\n                \"logprob\": -0.04571125,\\n                \"bytes\": [32, 97, 115, 115, 105, 115, 116]\\n              },\\n              {\\n                \"token\": \" help\",\\n                \"logprob\": -3.1089056,\\n                \"bytes\": [32, 104, 101, 108, 112]\\n              }\\n            ]\\n          },\\n          {\\n            \"token\": \" you\",\\n            \"logprob\": -5.4385737e-6,\\n            \"bytes\": [32, 121, 111, 117],\\n            \"top_logprobs\": [\\n              {\\n                \"token\": \" you\",\\n                \"logprob\": -5.4385737e-6,\\n                \"bytes\": [32, 121, 111, 117]\\n              },\\n              {\\n                \"token\": \" today\",\\n                \"logprob\": -12.807695,\\n                \"bytes\": [32, 116, 111, 100, 97, 121]\\n              }\\n            ]\\n          },\\n          {\\n            \"token\": \" today\",\\n            \"logprob\": -0.0040071653,\\n            \"bytes\": [32, 116, 111, 100, 97, 121],\\n            \"top_logprobs\": [\\n              {\\n                \"token\": \" today\",\\n                \"logprob\": -0.0040071653,\\n                \"bytes\": [32, 116, 111, 100, 97, 121]\\n              },\\n              {\\n                \"token\": \"?\",\\n                \"logprob\": -5.5247097,\\n                \"bytes\": [63]\\n              }\\n            ]\\n          },\\n          {\\n            \"token\": \"?\",\\n            \"logprob\": -0.0008108172,\\n            \"bytes\": [63],\\n            \"top_logprobs\": [\\n              {\\n                \"token\": \"?\",\\n                \"logprob\": -0.0008108172,\\n                \"bytes\": [63]\\n              },\\n              {\\n                \"token\": \"?\\\\n\",\\n                \"logprob\": -7.184561,\\n                \"bytes\": [63, 10]\\n              }\\n            ]\\n          }\\n        ]\\n      },\\n      \"finish_reason\": \"stop\"\\n    }\\n  ],\\n  \"usage\": {\\n    \"prompt_tokens\": 9,\\n    \"completion_tokens\": 9,\\n    \"total_tokens\": 18,\\n    \"completion_tokens_details\": {\\n      \"reasoning_tokens\": 0,\\n      \"accepted_prediction_tokens\": 0,\\n      \"rejected_prediction_tokens\": 0\\n    }\\n  },\\n  \"system_fingerprint\": null\\n}\\n',\n                  lang: 'json',\n                  meta: '',\n                  style: {\n                    background: '#1E1E1E',\n                    color: '#D4D4D4',\n                    colorScheme: 'dark'\n                  },\n                  themeName: 'dark-plus',\n                  tokens: [['{', '#D4D4D4'], '\\n  ', ['\"id\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"chatcmpl-123\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"object\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"chat.completion\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"created\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['1702685778', '#B5CEA8'], [',', '#D4D4D4'], '\\n  ', ['\"model\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"gpt-4o-mini\"', '#CE9178'], [',', '#D4D4D4'], '\\n  ', ['\"choices\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n    ', ['{', '#D4D4D4'], '\\n      ', ['\"index\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], [',', '#D4D4D4'], '\\n      ', ['\"message\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n        ', ['\"role\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"assistant\"', '#CE9178'], [',', '#D4D4D4'], '\\n        ', ['\"content\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"Hello! How can I assist you today?\"', '#CE9178'], '\\n      ', ['},', '#D4D4D4'], '\\n      ', ['\"logprobs\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n        ', ['\"content\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n          ', ['{', '#D4D4D4'], '\\n            ', ['\"token\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"Hello\"', '#CE9178'], [',', '#D4D4D4'], '\\n            ', ['\"logprob\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['-0.31725305', '#B5CEA8'], [',', '#D4D4D4'], '\\n            ', ['\"bytes\"', '#9CDCFE'], [': [', '#D4D4D4'], ['72', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['101', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['108', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['108', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['111', '#B5CEA8'], ['],', '#D4D4D4'], '\\n            ', ['\"top_logprobs\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n              ', ['{', '#D4D4D4'], '\\n                ', ['\"token\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"Hello\"', '#CE9178'], [',', '#D4D4D4'], '\\n                ', ['\"logprob\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['-0.31725305', '#B5CEA8'], [',', '#D4D4D4'], '\\n                ', ['\"bytes\"', '#9CDCFE'], [': [', '#D4D4D4'], ['72', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['101', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['108', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['108', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['111', '#B5CEA8'], [']', '#D4D4D4'], '\\n              ', ['},', '#D4D4D4'], '\\n              ', ['{', '#D4D4D4'], '\\n                ', ['\"token\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"Hi\"', '#CE9178'], [',', '#D4D4D4'], '\\n                ', ['\"logprob\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['-1.3190403', '#B5CEA8'], [',', '#D4D4D4'], '\\n                ', ['\"bytes\"', '#9CDCFE'], [': [', '#D4D4D4'], ['72', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['105', '#B5CEA8'], [']', '#D4D4D4'], '\\n              ', ['}', '#D4D4D4'], '\\n            ', [']', '#D4D4D4'], '\\n          ', ['},', '#D4D4D4'], '\\n          ', ['{', '#D4D4D4'], '\\n            ', ['\"token\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"!\"', '#CE9178'], [',', '#D4D4D4'], '\\n            ', ['\"logprob\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['-0.02380986', '#B5CEA8'], [',', '#D4D4D4'], '\\n            ', ['\"bytes\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n              ', ['33', '#B5CEA8'], '\\n            ', ['],', '#D4D4D4'], '\\n            ', ['\"top_logprobs\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n              ', ['{', '#D4D4D4'], '\\n                ', ['\"token\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"!\"', '#CE9178'], [',', '#D4D4D4'], '\\n                ', ['\"logprob\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['-0.02380986', '#B5CEA8'], [',', '#D4D4D4'], '\\n                ', ['\"bytes\"', '#9CDCFE'], [': [', '#D4D4D4'], ['33', '#B5CEA8'], [']', '#D4D4D4'], '\\n              ', ['},', '#D4D4D4'], '\\n              ', ['{', '#D4D4D4'], '\\n                ', ['\"token\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\" there\"', '#CE9178'], [',', '#D4D4D4'], '\\n                ', ['\"logprob\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['-3.787621', '#B5CEA8'], [',', '#D4D4D4'], '\\n                ', ['\"bytes\"', '#9CDCFE'], [': [', '#D4D4D4'], ['32', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['116', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['104', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['101', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['114', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['101', '#B5CEA8'], [']', '#D4D4D4'], '\\n              ', ['}', '#D4D4D4'], '\\n            ', [']', '#D4D4D4'], '\\n          ', ['},', '#D4D4D4'], '\\n          ', ['{', '#D4D4D4'], '\\n            ', ['\"token\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\" How\"', '#CE9178'], [',', '#D4D4D4'], '\\n            ', ['\"logprob\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['-0.000054669687', '#B5CEA8'], [',', '#D4D4D4'], '\\n            ', ['\"bytes\"', '#9CDCFE'], [': [', '#D4D4D4'], ['32', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['72', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['111', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['119', '#B5CEA8'], ['],', '#D4D4D4'], '\\n            ', ['\"top_logprobs\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n              ', ['{', '#D4D4D4'], '\\n                ', ['\"token\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\" How\"', '#CE9178'], [',', '#D4D4D4'], '\\n                ', ['\"logprob\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['-0.000054669687', '#B5CEA8'], [',', '#D4D4D4'], '\\n                ', ['\"bytes\"', '#9CDCFE'], [': [', '#D4D4D4'], ['32', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['72', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['111', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['119', '#B5CEA8'], [']', '#D4D4D4'], '\\n              ', ['},', '#D4D4D4'], '\\n              ', ['{', '#D4D4D4'], '\\n                ', ['\"token\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"<|end|>\"', '#CE9178'], [',', '#D4D4D4'], '\\n                ', ['\"logprob\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['-10.953937', '#B5CEA8'], [',', '#D4D4D4'], '\\n                ', ['\"bytes\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], '\\n              ', ['}', '#D4D4D4'], '\\n            ', [']', '#D4D4D4'], '\\n          ', ['},', '#D4D4D4'], '\\n          ', ['{', '#D4D4D4'], '\\n            ', ['\"token\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\" can\"', '#CE9178'], [',', '#D4D4D4'], '\\n            ', ['\"logprob\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['-0.015801601', '#B5CEA8'], [',', '#D4D4D4'], '\\n            ', ['\"bytes\"', '#9CDCFE'], [': [', '#D4D4D4'], ['32', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['99', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['97', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['110', '#B5CEA8'], ['],', '#D4D4D4'], '\\n            ', ['\"top_logprobs\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n              ', ['{', '#D4D4D4'], '\\n                ', ['\"token\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\" can\"', '#CE9178'], [',', '#D4D4D4'], '\\n                ', ['\"logprob\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['-0.015801601', '#B5CEA8'], [',', '#D4D4D4'], '\\n                ', ['\"bytes\"', '#9CDCFE'], [': [', '#D4D4D4'], ['32', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['99', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['97', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['110', '#B5CEA8'], [']', '#D4D4D4'], '\\n              ', ['},', '#D4D4D4'], '\\n              ', ['{', '#D4D4D4'], '\\n                ', ['\"token\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\" may\"', '#CE9178'], [',', '#D4D4D4'], '\\n                ', ['\"logprob\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['-4.161023', '#B5CEA8'], [',', '#D4D4D4'], '\\n                ', ['\"bytes\"', '#9CDCFE'], [': [', '#D4D4D4'], ['32', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['109', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['97', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['121', '#B5CEA8'], [']', '#D4D4D4'], '\\n              ', ['}', '#D4D4D4'], '\\n            ', [']', '#D4D4D4'], '\\n          ', ['},', '#D4D4D4'], '\\n          ', ['{', '#D4D4D4'], '\\n            ', ['\"token\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\" I\"', '#CE9178'], [',', '#D4D4D4'], '\\n            ', ['\"logprob\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['-3.7697225e-6', '#B5CEA8'], [',', '#D4D4D4'], '\\n            ', ['\"bytes\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n              ', ['32', '#B5CEA8'], [',', '#D4D4D4'], '\\n              ', ['73', '#B5CEA8'], '\\n            ', ['],', '#D4D4D4'], '\\n            ', ['\"top_logprobs\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n              ', ['{', '#D4D4D4'], '\\n                ', ['\"token\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\" I\"', '#CE9178'], [',', '#D4D4D4'], '\\n                ', ['\"logprob\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['-3.7697225e-6', '#B5CEA8'], [',', '#D4D4D4'], '\\n                ', ['\"bytes\"', '#9CDCFE'], [': [', '#D4D4D4'], ['32', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['73', '#B5CEA8'], [']', '#D4D4D4'], '\\n              ', ['},', '#D4D4D4'], '\\n              ', ['{', '#D4D4D4'], '\\n                ', ['\"token\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\" assist\"', '#CE9178'], [',', '#D4D4D4'], '\\n                ', ['\"logprob\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['-13.596657', '#B5CEA8'], [',', '#D4D4D4'], '\\n                ', ['\"bytes\"', '#9CDCFE'], [': [', '#D4D4D4'], ['32', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['97', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['115', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['115', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['105', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['115', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['116', '#B5CEA8'], [']', '#D4D4D4'], '\\n              ', ['}', '#D4D4D4'], '\\n            ', [']', '#D4D4D4'], '\\n          ', ['},', '#D4D4D4'], '\\n          ', ['{', '#D4D4D4'], '\\n            ', ['\"token\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\" assist\"', '#CE9178'], [',', '#D4D4D4'], '\\n            ', ['\"logprob\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['-0.04571125', '#B5CEA8'], [',', '#D4D4D4'], '\\n            ', ['\"bytes\"', '#9CDCFE'], [': [', '#D4D4D4'], ['32', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['97', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['115', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['115', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['105', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['115', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['116', '#B5CEA8'], ['],', '#D4D4D4'], '\\n            ', ['\"top_logprobs\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n              ', ['{', '#D4D4D4'], '\\n                ', ['\"token\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\" assist\"', '#CE9178'], [',', '#D4D4D4'], '\\n                ', ['\"logprob\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['-0.04571125', '#B5CEA8'], [',', '#D4D4D4'], '\\n                ', ['\"bytes\"', '#9CDCFE'], [': [', '#D4D4D4'], ['32', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['97', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['115', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['115', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['105', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['115', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['116', '#B5CEA8'], [']', '#D4D4D4'], '\\n              ', ['},', '#D4D4D4'], '\\n              ', ['{', '#D4D4D4'], '\\n                ', ['\"token\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\" help\"', '#CE9178'], [',', '#D4D4D4'], '\\n                ', ['\"logprob\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['-3.1089056', '#B5CEA8'], [',', '#D4D4D4'], '\\n                ', ['\"bytes\"', '#9CDCFE'], [': [', '#D4D4D4'], ['32', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['104', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['101', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['108', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['112', '#B5CEA8'], [']', '#D4D4D4'], '\\n              ', ['}', '#D4D4D4'], '\\n            ', [']', '#D4D4D4'], '\\n          ', ['},', '#D4D4D4'], '\\n          ', ['{', '#D4D4D4'], '\\n            ', ['\"token\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\" you\"', '#CE9178'], [',', '#D4D4D4'], '\\n            ', ['\"logprob\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['-5.4385737e-6', '#B5CEA8'], [',', '#D4D4D4'], '\\n            ', ['\"bytes\"', '#9CDCFE'], [': [', '#D4D4D4'], ['32', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['121', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['111', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['117', '#B5CEA8'], ['],', '#D4D4D4'], '\\n            ', ['\"top_logprobs\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n              ', ['{', '#D4D4D4'], '\\n                ', ['\"token\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\" you\"', '#CE9178'], [',', '#D4D4D4'], '\\n                ', ['\"logprob\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['-5.4385737e-6', '#B5CEA8'], [',', '#D4D4D4'], '\\n                ', ['\"bytes\"', '#9CDCFE'], [': [', '#D4D4D4'], ['32', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['121', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['111', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['117', '#B5CEA8'], [']', '#D4D4D4'], '\\n              ', ['},', '#D4D4D4'], '\\n              ', ['{', '#D4D4D4'], '\\n                ', ['\"token\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\" today\"', '#CE9178'], [',', '#D4D4D4'], '\\n                ', ['\"logprob\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['-12.807695', '#B5CEA8'], [',', '#D4D4D4'], '\\n                ', ['\"bytes\"', '#9CDCFE'], [': [', '#D4D4D4'], ['32', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['116', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['111', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['100', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['97', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['121', '#B5CEA8'], [']', '#D4D4D4'], '\\n              ', ['}', '#D4D4D4'], '\\n            ', [']', '#D4D4D4'], '\\n          ', ['},', '#D4D4D4'], '\\n          ', ['{', '#D4D4D4'], '\\n            ', ['\"token\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\" today\"', '#CE9178'], [',', '#D4D4D4'], '\\n            ', ['\"logprob\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['-0.0040071653', '#B5CEA8'], [',', '#D4D4D4'], '\\n            ', ['\"bytes\"', '#9CDCFE'], [': [', '#D4D4D4'], ['32', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['116', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['111', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['100', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['97', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['121', '#B5CEA8'], ['],', '#D4D4D4'], '\\n            ', ['\"top_logprobs\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n              ', ['{', '#D4D4D4'], '\\n                ', ['\"token\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\" today\"', '#CE9178'], [',', '#D4D4D4'], '\\n                ', ['\"logprob\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['-0.0040071653', '#B5CEA8'], [',', '#D4D4D4'], '\\n                ', ['\"bytes\"', '#9CDCFE'], [': [', '#D4D4D4'], ['32', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['116', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['111', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['100', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['97', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['121', '#B5CEA8'], [']', '#D4D4D4'], '\\n              ', ['},', '#D4D4D4'], '\\n              ', ['{', '#D4D4D4'], '\\n                ', ['\"token\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"?\"', '#CE9178'], [',', '#D4D4D4'], '\\n                ', ['\"logprob\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['-5.5247097', '#B5CEA8'], [',', '#D4D4D4'], '\\n                ', ['\"bytes\"', '#9CDCFE'], [': [', '#D4D4D4'], ['63', '#B5CEA8'], [']', '#D4D4D4'], '\\n              ', ['}', '#D4D4D4'], '\\n            ', [']', '#D4D4D4'], '\\n          ', ['},', '#D4D4D4'], '\\n          ', ['{', '#D4D4D4'], '\\n            ', ['\"token\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"?\"', '#CE9178'], [',', '#D4D4D4'], '\\n            ', ['\"logprob\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['-0.0008108172', '#B5CEA8'], [',', '#D4D4D4'], '\\n            ', ['\"bytes\"', '#9CDCFE'], [': [', '#D4D4D4'], ['63', '#B5CEA8'], ['],', '#D4D4D4'], '\\n            ', ['\"top_logprobs\"', '#9CDCFE'], [': [', '#D4D4D4'], '\\n              ', ['{', '#D4D4D4'], '\\n                ', ['\"token\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"?\"', '#CE9178'], [',', '#D4D4D4'], '\\n                ', ['\"logprob\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['-0.0008108172', '#B5CEA8'], [',', '#D4D4D4'], '\\n                ', ['\"bytes\"', '#9CDCFE'], [': [', '#D4D4D4'], ['63', '#B5CEA8'], [']', '#D4D4D4'], '\\n              ', ['},', '#D4D4D4'], '\\n              ', ['{', '#D4D4D4'], '\\n                ', ['\"token\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"?', '#CE9178'], ['\\\\n', '#D7BA7D'], ['\"', '#CE9178'], [',', '#D4D4D4'], '\\n                ', ['\"logprob\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['-7.184561', '#B5CEA8'], [',', '#D4D4D4'], '\\n                ', ['\"bytes\"', '#9CDCFE'], [': [', '#D4D4D4'], ['63', '#B5CEA8'], [',', '#D4D4D4'], ' ', ['10', '#B5CEA8'], [']', '#D4D4D4'], '\\n              ', ['}', '#D4D4D4'], '\\n            ', [']', '#D4D4D4'], '\\n          ', ['}', '#D4D4D4'], '\\n        ', [']', '#D4D4D4'], '\\n      ', ['},', '#D4D4D4'], '\\n      ', ['\"finish_reason\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['\"stop\"', '#CE9178'], '\\n    ', ['}', '#D4D4D4'], '\\n  ', ['],', '#D4D4D4'], '\\n  ', ['\"usage\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n    ', ['\"prompt_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['9', '#B5CEA8'], [',', '#D4D4D4'], '\\n    ', ['\"completion_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['9', '#B5CEA8'], [',', '#D4D4D4'], '\\n    ', ['\"total_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['18', '#B5CEA8'], [',', '#D4D4D4'], '\\n    ', ['\"completion_tokens_details\"', '#9CDCFE'], [': {', '#D4D4D4'], '\\n      ', ['\"reasoning_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], [',', '#D4D4D4'], '\\n      ', ['\"accepted_prediction_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], [',', '#D4D4D4'], '\\n      ', ['\"rejected_prediction_tokens\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['0', '#B5CEA8'], '\\n    ', ['}', '#D4D4D4'], '\\n  ', ['},', '#D4D4D4'], '\\n  ', ['\"system_fingerprint\"', '#9CDCFE'], [':', '#D4D4D4'], ' ', ['null', '#569CD6'], '\\n', ['}', '#D4D4D4'], '\\n'],\n                  value: '{\\n  \"id\": \"chatcmpl-123\",\\n  \"object\": \"chat.completion\",\\n  \"created\": 1702685778,\\n  \"model\": \"gpt-4o-mini\",\\n  \"choices\": [\\n    {\\n      \"index\": 0,\\n      \"message\": {\\n        \"role\": \"assistant\",\\n        \"content\": \"Hello! How can I assist you today?\"\\n      },\\n      \"logprobs\": {\\n        \"content\": [\\n          {\\n            \"token\": \"Hello\",\\n            \"logprob\": -0.31725305,\\n            \"bytes\": [72, 101, 108, 108, 111],\\n            \"top_logprobs\": [\\n              {\\n                \"token\": \"Hello\",\\n                \"logprob\": -0.31725305,\\n                \"bytes\": [72, 101, 108, 108, 111]\\n              },\\n              {\\n                \"token\": \"Hi\",\\n                \"logprob\": -1.3190403,\\n                \"bytes\": [72, 105]\\n              }\\n            ]\\n          },\\n          {\\n            \"token\": \"!\",\\n            \"logprob\": -0.02380986,\\n            \"bytes\": [\\n              33\\n            ],\\n            \"top_logprobs\": [\\n              {\\n                \"token\": \"!\",\\n                \"logprob\": -0.02380986,\\n                \"bytes\": [33]\\n              },\\n              {\\n                \"token\": \" there\",\\n                \"logprob\": -3.787621,\\n                \"bytes\": [32, 116, 104, 101, 114, 101]\\n              }\\n            ]\\n          },\\n          {\\n            \"token\": \" How\",\\n            \"logprob\": -0.000054669687,\\n            \"bytes\": [32, 72, 111, 119],\\n            \"top_logprobs\": [\\n              {\\n                \"token\": \" How\",\\n                \"logprob\": -0.000054669687,\\n                \"bytes\": [32, 72, 111, 119]\\n              },\\n              {\\n                \"token\": \"<|end|>\",\\n                \"logprob\": -10.953937,\\n                \"bytes\": null\\n              }\\n            ]\\n          },\\n          {\\n            \"token\": \" can\",\\n            \"logprob\": -0.015801601,\\n            \"bytes\": [32, 99, 97, 110],\\n            \"top_logprobs\": [\\n              {\\n                \"token\": \" can\",\\n                \"logprob\": -0.015801601,\\n                \"bytes\": [32, 99, 97, 110]\\n              },\\n              {\\n                \"token\": \" may\",\\n                \"logprob\": -4.161023,\\n                \"bytes\": [32, 109, 97, 121]\\n              }\\n            ]\\n          },\\n          {\\n            \"token\": \" I\",\\n            \"logprob\": -3.7697225e-6,\\n            \"bytes\": [\\n              32,\\n              73\\n            ],\\n            \"top_logprobs\": [\\n              {\\n                \"token\": \" I\",\\n                \"logprob\": -3.7697225e-6,\\n                \"bytes\": [32, 73]\\n              },\\n              {\\n                \"token\": \" assist\",\\n                \"logprob\": -13.596657,\\n                \"bytes\": [32, 97, 115, 115, 105, 115, 116]\\n              }\\n            ]\\n          },\\n          {\\n            \"token\": \" assist\",\\n            \"logprob\": -0.04571125,\\n            \"bytes\": [32, 97, 115, 115, 105, 115, 116],\\n            \"top_logprobs\": [\\n              {\\n                \"token\": \" assist\",\\n                \"logprob\": -0.04571125,\\n                \"bytes\": [32, 97, 115, 115, 105, 115, 116]\\n              },\\n              {\\n                \"token\": \" help\",\\n                \"logprob\": -3.1089056,\\n                \"bytes\": [32, 104, 101, 108, 112]\\n              }\\n            ]\\n          },\\n          {\\n            \"token\": \" you\",\\n            \"logprob\": -5.4385737e-6,\\n            \"bytes\": [32, 121, 111, 117],\\n            \"top_logprobs\": [\\n              {\\n                \"token\": \" you\",\\n                \"logprob\": -5.4385737e-6,\\n                \"bytes\": [32, 121, 111, 117]\\n              },\\n              {\\n                \"token\": \" today\",\\n                \"logprob\": -12.807695,\\n                \"bytes\": [32, 116, 111, 100, 97, 121]\\n              }\\n            ]\\n          },\\n          {\\n            \"token\": \" today\",\\n            \"logprob\": -0.0040071653,\\n            \"bytes\": [32, 116, 111, 100, 97, 121],\\n            \"top_logprobs\": [\\n              {\\n                \"token\": \" today\",\\n                \"logprob\": -0.0040071653,\\n                \"bytes\": [32, 116, 111, 100, 97, 121]\\n              },\\n              {\\n                \"token\": \"?\",\\n                \"logprob\": -5.5247097,\\n                \"bytes\": [63]\\n              }\\n            ]\\n          },\\n          {\\n            \"token\": \"?\",\\n            \"logprob\": -0.0008108172,\\n            \"bytes\": [63],\\n            \"top_logprobs\": [\\n              {\\n                \"token\": \"?\",\\n                \"logprob\": -0.0008108172,\\n                \"bytes\": [63]\\n              },\\n              {\\n                \"token\": \"?\\\\n\",\\n                \"logprob\": -7.184561,\\n                \"bytes\": [63, 10]\\n              }\\n            ]\\n          }\\n        ]\\n      },\\n      \"finish_reason\": \"stop\"\\n    }\\n  ],\\n  \"usage\": {\\n    \"prompt_tokens\": 9,\\n    \"completion_tokens\": 9,\\n    \"total_tokens\": 18,\\n    \"completion_tokens_details\": {\\n      \"reasoning_tokens\": 0,\\n      \"accepted_prediction_tokens\": 0,\\n      \"rejected_prediction_tokens\": 0\\n    }\\n  },\\n  \"system_fingerprint\": null\\n}\\n'\n                },\n                language: 'json',\n                title: ''\n              }],\n              title: 'Logprobs'\n            },\n            description: 'Logprobs'\n          }]\n        }]\n      },\n      title: 'Create chat completion',\n      type: 'rest_post'\n    }]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  toc,\n  frontmatter,\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n",{"_13":142,"_707":708,"_709":710},"rawPage","---\ntitle: Create chat completion\nlayout: wide\nopenapi: ~/openapi.yaml#POST /chat/completions\n---\n\n"]
